[{"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\index.js":"1","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\App.js":"2","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\reportWebVitals.js":"3","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Login\\Login.jsx":"4","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Admin.jsx":"5","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Domain\\useCases.jsx":"6","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Nav.jsx":"7","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\SwitchComponent.jsx":"8","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Footer.jsx":"9","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\MountTransition.jsx":"10","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\Dashboard.jsx":"11","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\SaldosPage.jsx":"12","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\PedidosPage.jsx":"13","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\Loading.jsx":"14","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\PedidosRepository.jsx":"15","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\FornecedoresRepository.jsx":"16","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\AnualRequestesComponent.jsx":"17","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\StatsComponent.jsx":"18","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\EmpresasComponent.jsx":"19","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\SearchPedidosComponent.jsx":"20","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\PedidosForm.jsx":"21","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\FormComponent.jsx":"22","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\RubricasComponent.jsx":"23","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\GruposRepository.jsx":"24","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\ArtigosRepository.jsx":"25","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SearchArticle.jsx":"26","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SubmitForm.jsx":"27","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\RubricasComponent.jsx":"28","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\FaturasComponent.jsx":"29","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\ArtigosPage\\ArtigosComponent.jsx":"30","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\PerformSearch.jsx":"31","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\DeletePedidoComponent.jsx":"32","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\GerirGruposPage.jsx":"33","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\AddGroup\\AddGroup.jsx":"34","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\AddGroup\\SubmitForm.jsx":"35","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DeleteGrupoComponent.jsx":"36","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\MembersComponent.jsx":"37","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\EmpresasForm.jsx":"38","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\SubmitForm.jsx":"39","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SubmitFatura.jsx":"40","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\DeleteFatura.jsx":"41","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\GetFaturasPedido.jsx":"42","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\DeleteNES.jsx":"43","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\AddNE.jsx":"44","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\DeleteEmpresa.jsx":"45","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\DownloadPDF.jsx":"46","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\ChangeArtigosStatus.jsx":"47","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\FaturarArtigos.jsx":"48","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\AddArtigo.jsx":"49","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\ArtigosPage\\DeleteArtigo.jsx":"50","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\ConfigsRepository.jsx":"51","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\SaveConfigs.jsx":"52","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Unauth\\Unauth.jsx":"53","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DownloadDistCum.jsx":"54","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DownloadDisGrupo.jsx":"55"},{"size":803,"mtime":1611661140763,"results":"56","hashOfConfig":"57"},{"size":1663,"mtime":1612043228667,"results":"58","hashOfConfig":"57"},{"size":375,"mtime":1611652424350,"results":"59","hashOfConfig":"57"},{"size":2216,"mtime":1611658332759,"results":"60","hashOfConfig":"57"},{"size":4697,"mtime":1612043228683,"results":"61","hashOfConfig":"57"},{"size":27862,"mtime":1614374832869,"results":"62","hashOfConfig":"57"},{"size":6863,"mtime":1612043228698,"results":"63","hashOfConfig":"57"},{"size":3168,"mtime":1612043228698,"results":"64","hashOfConfig":"57"},{"size":143,"mtime":1611652423803,"results":"65","hashOfConfig":"57"},{"size":463,"mtime":1611652423788,"results":"66","hashOfConfig":"57"},{"size":439,"mtime":1611652423819,"results":"67","hashOfConfig":"57"},{"size":8118,"mtime":1614377735229,"results":"68","hashOfConfig":"57"},{"size":33991,"mtime":1614703374512,"results":"69","hashOfConfig":"57"},{"size":411,"mtime":1611652423788,"results":"70","hashOfConfig":"57"},{"size":5925,"mtime":1612043228792,"results":"71","hashOfConfig":"57"},{"size":7210,"mtime":1612043228792,"results":"72","hashOfConfig":"57"},{"size":4721,"mtime":1614376190056,"results":"73","hashOfConfig":"57"},{"size":12739,"mtime":1612043228714,"results":"74","hashOfConfig":"57"},{"size":4984,"mtime":1614375536133,"results":"75","hashOfConfig":"57"},{"size":3315,"mtime":1611652424241,"results":"76","hashOfConfig":"57"},{"size":45291,"mtime":1614700071865,"results":"77","hashOfConfig":"57"},{"size":502,"mtime":1611652423741,"results":"78","hashOfConfig":"57"},{"size":3804,"mtime":1612538617662,"results":"79","hashOfConfig":"57"},{"size":4796,"mtime":1614374832916,"results":"80","hashOfConfig":"57"},{"size":3255,"mtime":1612043228761,"results":"81","hashOfConfig":"57"},{"size":751,"mtime":1611652424256,"results":"82","hashOfConfig":"57"},{"size":884,"mtime":1612043228761,"results":"83","hashOfConfig":"57"},{"size":6068,"mtime":1612538246647,"results":"84","hashOfConfig":"57"},{"size":2896,"mtime":1614379967445,"results":"85","hashOfConfig":"57"},{"size":9622,"mtime":1612043228698,"results":"86","hashOfConfig":"57"},{"size":1577,"mtime":1611652424225,"results":"87","hashOfConfig":"57"},{"size":631,"mtime":1611845759301,"results":"88","hashOfConfig":"57"},{"size":11979,"mtime":1614374832900,"results":"89","hashOfConfig":"57"},{"size":8043,"mtime":1612043228683,"results":"90","hashOfConfig":"57"},{"size":868,"mtime":1612043228683,"results":"91","hashOfConfig":"57"},{"size":632,"mtime":1611775120868,"results":"92","hashOfConfig":"57"},{"size":5686,"mtime":1612043228730,"results":"93","hashOfConfig":"57"},{"size":12491,"mtime":1612539011781,"results":"94","hashOfConfig":"57"},{"size":893,"mtime":1612043228714,"results":"95","hashOfConfig":"57"},{"size":850,"mtime":1611790075044,"results":"96","hashOfConfig":"57"},{"size":667,"mtime":1612043228745,"results":"97","hashOfConfig":"57"},{"size":4209,"mtime":1612043228745,"results":"98","hashOfConfig":"57"},{"size":649,"mtime":1611837657404,"results":"99","hashOfConfig":"57"},{"size":1147,"mtime":1612043228714,"results":"100","hashOfConfig":"57"},{"size":671,"mtime":1611844532492,"results":"101","hashOfConfig":"57"},{"size":725,"mtime":1614374832900,"results":"102","hashOfConfig":"57"},{"size":826,"mtime":1612043228730,"results":"103","hashOfConfig":"57"},{"size":705,"mtime":1612043228730,"results":"104","hashOfConfig":"57"},{"size":1129,"mtime":1612043228745,"results":"105","hashOfConfig":"57"},{"size":631,"mtime":1612043228698,"results":"106","hashOfConfig":"57"},{"size":1120,"mtime":1612043228776,"results":"107","hashOfConfig":"57"},{"size":631,"mtime":1612043228698,"results":"108","hashOfConfig":"57"},{"size":158,"mtime":1612043228761,"results":"109","hashOfConfig":"57"},{"size":672,"mtime":1614374832885,"results":"110","hashOfConfig":"57"},{"size":797,"mtime":1614374832869,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"yvwzgr",{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"114"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"114"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"114"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"114"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"114"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"114"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"114"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"114"},"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\index.js",[],["251","252"],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\App.js",["253"],"import React from 'react';\r\nimport './Styles/styles.sass';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\r\nimport {CssBaseline} from '@material-ui/core'\r\nimport loadable from '@loadable/component'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      '\"Work Sans\"',\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: '#21BCE9'\r\n    },\r\n    secondary: {\r\n      main: '#434343'\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 4\r\n  }\r\n})\r\n\r\n\r\nconst LoginPage = loadable(() => import('./Pages/Login/Login'))\r\nconst Admin = loadable(() => import('./Pages/Admin/Admin'))\r\nconst Unauth = loadable(() => import('./Pages/Unauth/Unauth'))\r\n\r\nconst App = () => {\r\n  const {user, isAuthenticated } = useAuth0();\r\n  const [allowed, setAllowed] = React.useState(false)\r\n\r\n  React.useEffect(()=>{\r\n    if (isAuthenticated){\r\n      const emails = process.env.REACT_APP_AUTH0_EMAIL.split(\",\")\r\n      emails.forEach(email=>{\r\n        if(user.email === email){\r\n          setAllowed(true)\r\n          return null\r\n        }\r\n      })\r\n    }\r\n  }, [isAuthenticated])\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n      {!isAuthenticated && <LoginPage/>}\r\n      {isAuthenticated && allowed && <Admin/>}  \r\n      {isAuthenticated && !allowed && <Unauth/>}  \r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\reportWebVitals.js",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Login\\Login.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Admin.jsx",["254"],"import React from 'react'\r\nimport { Link, BrowserRouter} from 'react-router-dom'\r\nimport { createBrowserHistory } from 'history'\r\nimport loadable from '@loadable/component'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport { Typography, Drawer,Divider, IconButton } from '@material-ui/core';\r\nimport {useAuth0} from \"@auth0/auth0-react\"\r\nimport {useSetAccessToken} from \"../../Domain/useCases\"\r\nimport { AnimatePresence } from 'framer-motion'\r\nimport SwitchComponent from \"./SwitchComponent\"\r\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nconst appBarHeight = 65\r\nconst Nav = loadable(() => import('.//Nav'))\r\nconst Footer = loadable(() => import('./Footer'))\r\n\r\nconst Admin = () => {\r\n    const [hideMenu, setHideMenu] = React.useState(true) \r\n    const closeMenu = ()=> setHideMenu(true)\r\n    const { getAccessTokenSilently } = useAuth0();\r\n    const [accessToken, setAccessToken] = React.useState(null) \r\n    const history = React.useMemo(() => {\r\n        return createBrowserHistory()\r\n      }, [])\r\n   \r\n      React.useEffect(() => {\r\n        return history.listen(()=>{\r\n          window.scrollTo(0,0)\r\n        })  \r\n      }, [ history])\r\n\r\n      React.useEffect(()=>{\r\n        const setAccessTokenFun = async () => {        \r\n            try {\r\n                const access_token = await getAccessTokenSilently();\r\n                setAccessToken(access_token)\r\n            } catch (e) {\r\n              console.log(e.message);\r\n            }\r\n          };\r\n          setAccessTokenFun()\r\n     }, [])\r\n     \r\n     useSetAccessToken(accessToken) \r\n     \r\n    return (\r\n        <BrowserRouter history={history}>\r\n            {accessToken && <>\r\n                <Drawer\r\n                    variant=\"temporary\"\r\n                    anchor=\"left\"\r\n                    open={!hideMenu}\r\n                    className=\"drawerContainer\">\r\n                        <div className=\"drawerHeader\">\r\n                            <Typography variant=\"h6\">Gestão de Pedidos</Typography>\r\n                            <IconButton onClick={closeMenu}>\r\n                                <ArrowBackIcon/>\r\n                            </IconButton>\r\n                        </div>\r\n                        <Divider />\r\n                        <div className=\"navListContainer\">\r\n                            <ul>\r\n                                <li onClick={closeMenu}>\r\n                                    <Link to=\"/dashboard\">\r\n                                        <DashboardIcon/>\r\n                                        Resumo\r\n                                    </Link>\r\n                                </li>\r\n                                <li onClick={closeMenu}>\r\n                                    <Link to=\"/pedidos\">\r\n                                        <LocalShippingIcon/>\r\n                                        Pedidos de Encomendas\r\n                                    </Link>\r\n                                </li>\r\n                                <li onClick={closeMenu}>\r\n                                    <Link to=\"/gerirGrupos\">\r\n                                        <GroupIcon/>\r\n                                        Grupos de Investigação\r\n                                    </Link>\r\n                                </li>\r\n                                <li onClick={closeMenu}>\r\n                                    <Link to=\"/empresas\">\r\n                                        <CreditCardIcon/>\r\n                                        Saldo Empresarial\r\n                                    </Link>\r\n                                </li>\r\n                                <li onClick={closeMenu}>\r\n                                    <Link to=\"/artigos\">\r\n                                        <AllInboxIcon/>\r\n                                        Gestão de Artigos\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                </Drawer>\r\n                <Nav hideMenu={hideMenu} setHideMenu={setHideMenu} height={appBarHeight}/>\r\n                <AnimatePresence exitBeforeEnter={true} initial={false}>\r\n                    <main  style={{marginTop: appBarHeight}}>\r\n                        <SwitchComponent />\r\n                    </main>\r\n                </AnimatePresence>\r\n                <Footer />\r\n            </>}\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\nexport default Admin","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Domain\\useCases.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Nav.jsx",["255"],"import React from 'react'\r\nimport {AppBar, Toolbar,Snackbar , Typography,Menu, MenuItem ,Button,  Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, TextField, CircularProgress} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Avatar} from \"@material-ui/core\"\r\nimport { Link } from 'react-router-dom'\r\nimport SaveConfigs from './SaveConfigs';\r\nimport {useGetConfigs} from \"../../Domain/useCases\"\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst Nav = (props) => {\r\n    const { logout, user} = useAuth0();\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [showConfigs, setShowConfigs] = React.useState(false);\r\n    const [saveConfigs, setSaveConfigs] = React.useState(null);\r\n    const [tempConfig, setTempConfig] = React.useState({\r\n        pedido_acabado: 0,\r\n        saldo_th: 0,\r\n    })\r\n\r\n    const {\r\n        data: configs, \r\n        isFetching,\r\n    } = useGetConfigs()\r\n\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpenSnackbar(false);\r\n      };\r\n\r\n    const handleChangeInputConfigs = (e) => {\r\n        setTempConfig({\r\n            ...tempConfig, \r\n            [e.target.id]: e.target.value\r\n        })\r\n      };\r\n  \r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setTempConfig({\r\n                pedido_acabado: configs.data.pedido_acabado/1000/60/60/24,\r\n                saldo_th: configs.data.saldo_th,\r\n            })\r\n        }\r\n    },[isFetching])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={showConfigs} onClose={()=>{\r\n                setShowConfigs(false)\r\n            }} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Preferências</DialogTitle>\r\n                {isFetching && <CircularProgress />}\r\n                {!isFetching && <>\r\n                    <DialogContent>\r\n                        \r\n                        <DialogContentText>\r\n                            Preencha o formulário se quiser alterar as configurações\r\n                        </DialogContentText>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"pedido_acabado\"\r\n                            label=\"Pedido Atrasado\"\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            value={tempConfig.pedido_acabado}\r\n                            onChange={handleChangeInputConfigs}\r\n                            helperText=\"Coloque o nº de dias para que um pedido seja considerado atrasado, após ter sido feito\"\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"saldo_th\"\r\n                            label=\"Limiar de Saldo Baixo\"\r\n                            fullWidth\r\n                            value={tempConfig.saldo_th}\r\n                            onChange={handleChangeInputConfigs}\r\n                            helperText=\"Coloque o valor monetário a ser considerado para que um empresa seja considerada com baixo saldo disponível\"\r\n\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={()=>{\r\n                            setShowConfigs(false)\r\n                        }}>\r\n                            Cancel\r\n                        </Button>\r\n                        {!saveConfigs && <Button \r\n                        disabled={tempConfig.pedido_acabado=== 0 || tempConfig.saldo_th === 0}\r\n                        onClick={()=>{\r\n                            setSaveConfigs(true)\r\n                        }} color=\"primary\">\r\n                            guardar\r\n                        </Button>}\r\n                        {saveConfigs && <SaveConfigs \r\n                             configs={{\r\n                                 ...tempConfig,\r\n                                 pedido_acabado: tempConfig.pedido_acabado *24*60*60*1000\r\n                             }} \r\n                             setSaveConfigs={setSaveConfigs}\r\n                             setOpenSnackbar={setOpenSnackbar}\r\n                        />}\r\n                    </DialogActions>\r\n                </>}\r\n                \r\n            </Dialog>\r\n            <AppBar className={props.hideMenu? \"navContainer\": \"navContainer openMenuNav\"} color=\"inherit\" height={props.height} position=\"fixed\">\r\n            <Toolbar className=\"contentContainer\">\r\n                <div className=\"iconContainer\">\r\n                    <IconButton onClick={()=>props.setHideMenu(false)} className={!props.hideMenu? \"hide\": \"\"}>\r\n                        <MenuIcon  className=\"openMenu\" />\r\n                    </IconButton>   \r\n                    <Typography className={!props.hideMenu? \"titleText hide\": \"titleText\"}> \r\n                        <Link to=\"/\">\r\n                            Gestão de Pedidos\r\n                        </Link>\r\n                    </Typography>\r\n                </div>\r\n                <div className=\"navAccountContainer\">\r\n                    <Button component={Link} to=\"/pedidos/registo\">registar pedido</Button>\r\n                    <Avatar style={{marginLeft: 20}}onClick={handleClick} alt=\"avatar\" src={user.picture} />\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                        className=\"navMenuContainer\"\r\n                    >\r\n                        <MenuItem component={Link} to=\"/settings\" onClick={()=>{\r\n                            setShowConfigs(true)\r\n                            handleClose()\r\n                        }}>Configurações</MenuItem>\r\n                        <MenuItem onClick={()=>logout()}>Logout</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n            </Toolbar>\r\n            <Snackbar open={openSnackbar} autoHideDuration={4000} onClose={handleCloseSnackbar}>\r\n                <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n                    As configurações foram guardadas com sucesso!\r\n                </Alert>\r\n            </Snackbar>\r\n        </AppBar>\r\n    </>\r\n    )\r\n}\r\n\r\nconst Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\nexport default Nav","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\SwitchComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Footer.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\MountTransition.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\Dashboard.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\SaldosPage.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\PedidosPage.jsx",["256"],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\Loading.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\PedidosRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\FornecedoresRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\AnualRequestesComponent.jsx",["257","258"],"import React from 'react'\r\nimport {useGetPedidosAnual} from \"../../Domain/useCases\"\r\nimport {Bar} from \"react-chartjs-2\"\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { Typography, Paper} from '@material-ui/core'\r\n\r\nconst AnualRequestesComponent = () => {\r\n    const [datasets, setDatasets] = React.useState(null)\r\n    const {\r\n        data: pedidosAnual, \r\n        isFetching: fetchingPedidosAnual\r\n    } = useGetPedidosAnual()\r\n   \r\n    const isLoading = React.useMemo(() => {\r\n        return  fetchingPedidosAnual\r\n    }, [fetchingPedidosAnual])\r\n\r\n    React.useEffect(()=>{\r\n        let tempDatasets=[]\r\n        if(!fetchingPedidosAnual){\r\n            Object.keys(pedidosAnual).forEach(group=>{\r\n                tempDatasets.push( {\r\n                    label: group, \r\n                    data:  Object.values(pedidosAnual[group].data), \r\n                    backgroundColor: pedidosAnual[group].color,\r\n                    fill: true,\r\n                    borderColor: pedidosAnual[group].color\r\n                })\r\n            })\r\n            setDatasets(tempDatasets)\r\n        }\r\n    }, [fetchingPedidosAnual])\r\n    return (\r\n        <>\r\n            {fetchingPedidosAnual && <LoadingComponent/>}\r\n            {!fetchingPedidosAnual && <Paper style={{\r\n                width: \"100%\", \r\n                background: \"white\", \r\n                padding: 20\r\n            }}>\r\n                {Object.keys(pedidosAnual).length === 0 && <Typography>Dados não disponíveis. Ainda não foi registado nenhum pedido.</Typography>   }\r\n                {Object.keys(pedidosAnual).length > 0 && <Bar\r\n                    width={100}\r\n                    height={25}\r\n                    data={{\r\n                        labels: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"], \r\n                        datasets: datasets\r\n                    }}\r\n                    options={{\r\n                        tooltips:{\r\n                            enabled: true\r\n                        },\r\n                        elements: {\r\n                            point:{\r\n                                radius: 0\r\n                            }\r\n                        },\r\n                        responsive: true, \r\n                        \r\n                        chartArea: {\r\n                            backgroundColor: 'rgba(251, 85, 85, 0.4)'\r\n                        }, \r\n                        maintainAspectRatio: true,\r\n                        legend:{\r\n                            display: false, \r\n                            position: \"top\",\r\n                            align:\"center\",\r\n                            labels: {\r\n                                fontColor: \"white\",\r\n                            }\r\n                            \r\n                        },\r\n                       \r\n                        scales:{\r\n                            xAxes: [{\r\n                                display: true,\r\n                                gridLines: {\r\n                                    display: true,\r\n                                    color: \"#ecf0f1\"\r\n                                },\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: `Ano de ${new Date().getFullYear()}`, \r\n                                    fontColor: \"#666\"\r\n                                },\r\n                                stacked: true,\r\n                                ticks:{\r\n                                    fontColor: \"#666\"\r\n                                }\r\n                            }],\r\n                            yAxes: [{\r\n                                display: true,\r\n                                gridLines: {\r\n                                    display: true,\r\n                                    color: \"#ecf0f1\"\r\n                                },\r\n                                stacked: true,\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: 'Nº de Pedidos', \r\n                                    fontColor: \"#666\"\r\n                                },\r\n                                ticks:{\r\n                                    fontColor: \"#666\"\r\n                                } \r\n                            }]\r\n                        }\r\n                    }}\r\n                />}\r\n                \r\n            </Paper>}\r\n        </>\r\n    )\r\n}\r\nexport default AnualRequestesComponent\r\n\r\nconst LoadingComponent = ()=>{\r\n    return  <Skeleton variant=\"rect\" width=\"100%\" height={300} />\r\n           \r\n}","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\StatsComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\EmpresasComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\SearchPedidosComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\PedidosForm.jsx",["259","260","261","262","263","264"],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\FormComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\RubricasComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\GruposRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\ArtigosRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SearchArticle.jsx",["265","266"],"import React from 'react'\r\nimport {useGetArticle} from \"../../Domain/useCases\"\r\nconst SearchArticle = ({\r\n    term, \r\n    setArticlesResult, \r\n    performSearch, \r\n    setPerformSearch\r\n}) => {\r\n    const {\r\n        data: articles, \r\n        isFetching, \r\n        refetch\r\n    } = useGetArticle(term)\r\n    React.useEffect(()=>{\r\n        if(performSearch){\r\n            refetch()\r\n        }\r\n    },[performSearch])\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching ){\r\n            setArticlesResult(articles.data)\r\n            setPerformSearch(false)\r\n        }\r\n    }, [isFetching])\r\n    return (\r\n        <>\r\n            {/* {performSearch && <CircularProgress size={20} color=\"primary\" />} */}\r\n        </>\r\n    )\r\n}\r\nexport default SearchArticle","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SubmitForm.jsx",["267"],"import React from 'react'\r\nimport Loading from \"../../Components/Loading\"\r\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nconst SubmitForm = ({\r\n    data,\r\n    id,\r\n    submitFunction\r\n}) => {\r\n    const {\r\n        data: response, \r\n        isFetching\r\n    } = submitFunction(data, id)\r\n    \r\n    if(isFetching) return <Loading msg=\"A registar pedido...\" />\r\n    return (\r\n        <div className=\"formSubmitedContainer\">\r\n            <LibraryAddCheckIcon style={{fontSize: 200, color: \"#2ecc71\"}} />\r\n            <Typography variant=\"h4\">A operação foi realizada com sucesso</Typography>\r\n            <Button variant=\"contained\"component={Link} to=\"/pedidos\" color=\"primary\">Ver lista de pedidos</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitForm","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\RubricasComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\FaturasComponent.jsx",["268"],"import React from 'react'\r\nimport {useGetFaturasByEmppresa} from \"../../Domain/useCases\"\r\nimport {CircularProgress, Button,Table, TableHead, TableRow, TableBody, TableCell, Typography, Tooltip, IconButton} from \"@material-ui/core\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nconst FaturasComponent = ({empresa}) => {\r\n    const {\r\n        data: faturas, \r\n        isFetching\r\n    } = useGetFaturasByEmppresa(empresa)\r\n    \r\n    return (\r\n        <div className=\"optionsContainer\">\r\n            {isFetching && <CircularProgress size={60} color=\"primary\"/>}\r\n            {!isFetching && <>\r\n                {faturas.data.length === 0 && <Typography style={{marginBottom: 20}}> Não existem faturas emitidas para esta empresa</Typography>}\r\n                {faturas.data.length > 0 && <Table size=\"medium\">\r\n                    <TableHead> \r\n                        <TableRow>\r\n                            <TableCell >Código da Fatura</TableCell>\r\n                            <TableCell >Data de Emissão</TableCell>\r\n                            <TableCell >Pedido</TableCell>\r\n                            <TableCell >Valor</TableCell>\r\n                            <TableCell >Notas</TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {faturas.data.map(f => {\r\n                            return (\r\n                            <TableRow>\r\n                                <TableCell  >{f.name}</TableCell>\r\n                                <TableCell >{f.data_emissao.slice(0,11)}</TableCell>\r\n                                <TableCell >\r\n                                    {f.pedido}\r\n                                </TableCell>\r\n                                <TableCell >{f.valor_fatura}€</TableCell>\r\n                                <TableCell>\r\n                                    <Tooltip title=\"Ver notas\">\r\n                                        <IconButton color=\"primary\">\r\n                                            <CommentIcon/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </TableCell>\r\n                            <TableCell>\r\n                                <Tooltip title=\"Apagar fatura\">\r\n                                    <IconButton style={{color: \"#e74c3c\"}}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        )})}\r\n                    </TableBody>\r\n                </Table>}\r\n            \r\n            </>}\r\n        </div>\r\n    )\r\n}\r\nexport default FaturasComponent","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\ArtigosPage\\ArtigosComponent.jsx",["269"],"import React from 'react'\r\nimport {useGetArtigos} from \"../../Domain/useCases\"\r\nimport Loading from \"../../Components/Loading\"\r\nimport {List, Paper,Button, IconButton,InputBase,ListItem, Avatar,ListItemAvatar,ListItemText, ListItemSecondaryAction, Typography, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, TextField} from \"@material-ui/core\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchArticle from \"../PedidosFormPage/SearchArticle\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddArtigo from \"../PedidosFormPage/AddArtigo\"\r\nimport DeleteArtigo from \"./DeleteArtigo\"\r\n\r\n\r\nconst ArtigosComponent = () => {\r\n    const [searchTerm, setSearchData] = React.useState(\"\")\r\n    const [performSearch, setPerfomSearch] = React.useState(\"\")\r\n    const [articlesList, setArticlesList] = React.useState([])\r\n    const [error, setError] = React.useState(false)\r\n    const [searchPerformed, setSearchPerformed] = React.useState(false)\r\n    const [openDelete, setOpenDelete] = React.useState(false);\r\n    const [deleteArtigo, setDeleteArtigo] = React.useState(false);\r\n    const [selectedArtigo, setSelectedArtigo] = React.useState(false);\r\n\r\n    const [addArtigoToDB, setAddArtigoToDB] = React.useState(false)\r\n    const [showAddArtigoForm, setShowAddArtigoForm] = React.useState(false)\r\n    const [tempArticle, setTempArticle] = React.useState({\r\n        name: \"\", \r\n        code: \"\"\r\n    })\r\n    \r\n    const {\r\n        data: artigos, \r\n        isFetching,\r\n        refetch\r\n    } = useGetArtigos()\r\n\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setArticlesList(artigos.data)\r\n            setSearchData(\"\")\r\n            setSearchPerformed(false)\r\n        }\r\n    },[isFetching])\r\n\r\n    if(isFetching) return <Loading msg=\"A carregar artigos...\" />\r\n    return (\r\n        <div className=\"artigosContainer\">\r\n            <Dialog onClose={()=>{\r\n                setOpenDelete(false)\r\n            }} aria-labelledby=\"simple-dialog-title\" open={openDelete}>\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Tem a certeza que pretende apagar o artigo?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        O artigo será apagado permanentemente da base de dados. Tem a certeza que pretende continuar?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!deleteArtigo && <Button style={{color: \"#e74c3c\"}}onClick={()=>{setDeleteArtigo(true)}}>\r\n                        apagar\r\n                    </Button>}\r\n                    {deleteArtigo && <DeleteArtigo\r\n                        id={selectedArtigo} \r\n                        setOpenDelete={setOpenDelete}\r\n                        setDeleteArtigo={setDeleteArtigo}\r\n                        refetch={refetch}\r\n                        />}\r\n                    <Button onClick={()=>setOpenDelete(false)} autoFocus>\r\n                        cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n            <Dialog open={showAddArtigoForm} onClose={()=>{\r\n                setShowAddArtigoForm(false)\r\n            }} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Adicionar Artigo</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText>\r\n                    Preencha o formulário para adicionar o artigo na base de dados\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"normal\"\r\n                    id=\"name\"\r\n                    label=\"Artigo\"\r\n                    fullWidth\r\n                    value={tempArticle.name}\r\n                    onChange={(e)=>{\r\n                        setTempArticle({\r\n                            ...tempArticle, \r\n                            name: e.target.value\r\n                        })\r\n                    }}\r\n                />\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"normal\"\r\n                    id=\"code\"\r\n                    label=\"Código do artigo\"\r\n                    fullWidth\r\n                    value={tempArticle.code}\r\n                    onChange={(e)=>{\r\n                        setTempArticle({\r\n                            ...tempArticle, \r\n                            code: e.target.value\r\n                        })\r\n                    }}\r\n                />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>{\r\n                        setShowAddArtigoForm(false)\r\n                    }}>\r\n                        Cancel\r\n                    </Button>\r\n                    {!addArtigoToDB && <Button \r\n                    disabled={tempArticle.name=== \"\" || tempArticle.code === \"\"}\r\n                    onClick={()=>{\r\n                        setShowAddArtigoForm(false)\r\n                        setAddArtigoToDB(true)\r\n                    }} color=\"primary\">\r\n                        adicionar\r\n                    </Button>}\r\n                    {addArtigoToDB && <AddArtigo \r\n                        setAddArtigoToDB={setAddArtigoToDB}\r\n                        setTempArticle={setTempArticle}\r\n                        setShowAddArtigoForm={setShowAddArtigoForm}\r\n                        tempArticle={null}\r\n                        artigo={tempArticle}\r\n                        articlesMainPage={true} \r\n                        refetch={refetch}\r\n                    />}\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n\r\n            {performSearch && <SearchArticle\r\n                 term={searchTerm}\r\n                 setArticlesResult={setArticlesList}\r\n                 performSearch={false}\r\n                 setPerformSearch={setPerfomSearch}\r\n            />}\r\n             <div className=\"artigosHeader\">\r\n                <Button  onClick={()=>setShowAddArtigoForm(true)} style={{backgroundColor: \"#2ecc71\"}} variant=\"contained\">adicionar artigo</Button>\r\n                <Paper className=\"searchContainer\">\r\n                <form action=\"\" onSubmit={(e)=>e.preventDefault()}>\r\n                    <InputBase style={{\r\n                        marginRight: 10\r\n                    }}\r\n                    error={error}\r\n                    onKeyDown={e=>{\r\n                        if(e.key === \"Enter\" && searchTerm !== \"\"){\r\n                            setPerfomSearch(true)\r\n                            setSearchPerformed(true)\r\n                        }else{\r\n                            setError(true)\r\n                        }\r\n                    }}\r\n                    fullWidth id=\"term\" placeholder=\"Pesquisar código do artigo\" value={searchTerm} \r\n                    onChange={(e)=>{\r\n                        setSearchData(e.target.value)\r\n                        setError(false)\r\n                    }} />\r\n                        {!searchPerformed && <IconButton onClick={()=>{\r\n                            if(searchTerm !== \"\"){\r\n                                setPerfomSearch(true)\r\n                                setSearchPerformed(true)\r\n                            }else{\r\n                                setError(true)\r\n                            }\r\n                        }}>\r\n                            <SearchIcon />\r\n                        </IconButton>}\r\n                        {searchPerformed && <IconButton onClick={()=>{\r\n                            refetch()\r\n                            setSearchData(\"\")\r\n                            setSearchPerformed(false)\r\n                        }}>\r\n                            <CloseIcon />    \r\n                        </IconButton>}\r\n                    </form>\r\n                </Paper>\r\n            </div>\r\n            <Paper className=\"artigosListContainer\">\r\n               {articlesList.length > 0 && <List dense={true}>\r\n                    {articlesList.sort((a,b)=>{\r\n                        return a.name > b.name? 1 : a.name < b.name ? -1: 0\r\n                    }).map(a=>{\r\n                        return  (\r\n                            <ListItem key={a.id}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar style={{backgroundColor: \"#2ecc71\"}}>\r\n                                        {a.name[0].toUpperCase()}\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={a.name}\r\n                                    secondary={a.code}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton onClick={()=>{\r\n                                        setSelectedArtigo(a.id)\r\n                                        setOpenDelete(true)\r\n                                    }}edge=\"end\" aria-label=\"delete\">\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                  \r\n                </List>}\r\n                {articlesList.length === 0 && <Typography>\r\n                    Sem artigos para apresentar    \r\n                </Typography>}\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\nexport default ArtigosComponent","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\PerformSearch.jsx",["270"],"import React from 'react'\r\nimport {CircularProgress, IconButton, Snackbar } from \"@material-ui/core\"\r\nimport {useSearchPedidos} from \"../../Domain/useCases\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n const PerformSearch = ({\r\n    word,\r\n    field,\r\n    setSubmitSearch,\r\n    setPedidosList, \r\n    refetch\r\n}) => {\r\n    const {\r\n        data: pedidos, \r\n        isFetching\r\n    } = useSearchPedidos(word, field)\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            if(pedidos.data.length > 0){\r\n                setPedidosList(pedidos)\r\n            }else{\r\n                setOpen(true)\r\n            }\r\n        }\r\n    }, [isFetching])\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        } \r\n        setOpen(false);\r\n        setSubmitSearch(false)\r\n    };\r\n\r\n    if(isFetching) return <CircularProgress size={40} />\r\n\r\n    return (<>\r\n        <IconButton onClick={()=>{\r\n            refetch()\r\n            setSubmitSearch(false)\r\n        }}>\r\n        <CloseIcon />\r\n        </IconButton>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"warning\">\r\n            Não foi encontrado nenhum pedido com o termo pesquisado\r\n            </Alert>\r\n      </Snackbar>\r\n    </>\r\n    )\r\n}\r\nexport default PerformSearch\r\n\r\nconst Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\DeletePedidoComponent.jsx",["271","272"],"import React from 'react'\r\nimport {useDeletePedido} from \"../../Domain/useCases\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\n\r\n const DeletePedidoComponent = ({ \r\n    id,\r\n    setOpenDelete,\r\n    setDeletePedido,\r\n    refetch\r\n }) => {\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useDeletePedido(id)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setOpenDelete(false)\r\n            refetch()\r\n            setDeletePedido(false)\r\n        }\r\n    }, [isFetching])\r\n    \r\n    if(isFetching) return (<CircularProgress />)\r\n    return <></>\r\n}\r\nexport default DeletePedidoComponent\r\n\r\n","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\GerirGruposPage.jsx",["273","274"],"import React from 'react'\r\nimport {useGetGrupos, useGetDistAnual} from \"../../Domain/useCases\"\r\nimport Loading from \"../../Components/Loading\"\r\nimport {Button,   DialogTitle,Dialog,DialogActions, Snackbar, DialogContent,DialogContentText,  Paper,MenuItem,Menu, CircularProgress,Typography, IconButton, List, ListItem,Collapse, ListItemText, ListItemIcon} from \"@material-ui/core\"\r\nimport {Link} from \"react-router-dom\"\r\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {Bar} from \"react-chartjs-2\"\r\nimport MembersComponent from \"./MembersComponent\"\r\nimport DeleteGroup from \"./DeleteGrupoComponent\"\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport DownloadDistCum from \"./DownloadDistCum\"\r\nimport DownloadDistGrupo from \"./DownloadDisGrupo\"\r\n\r\nconst GerirGruposPage = () => {\r\n    const [collapse, setCollapse]=React.useState(null)\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedGroup, setSelectedGroup] = React.useState(null);\r\n    const [datasets, setDatasets] = React.useState(null)\r\n    const [deleteGrupo, setDeleteGrupo] = React.useState(false);\r\n    const [openDelete, setOpenDelete] = React.useState(false);\r\n    const [deleteResult, setDeleteResult] = React.useState(null);\r\n    const [selectedYear, setSelectedYear] = React.useState(2021);\r\n    const [selectedDistID, setSelectedDistID] = React.useState(null);\r\n    const [exportDistAnual, setExportDistAnual] = React.useState(null);\r\n    const [exportDistAnualGrupo, setExportDistAnualGrupo] = React.useState(null);\r\n    \r\n    const {\r\n        data: distAnual, \r\n        isFetching: fetchingDistAnual,\r\n        refetch: refetchDist\r\n    } = useGetDistAnual(selectedYear)\r\n\r\n\r\n    const {\r\n        data: grupos, \r\n        isFetching: fetchingGrupos,\r\n        refetch\r\n    } = useGetGrupos()\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        } \r\n        refetch()\r\n        refetchDist()\r\n        setOpenDelete(false)\r\n    };\r\n\r\n    const isLoading = React.useMemo(() => {\r\n        return  fetchingGrupos\r\n        || fetchingDistAnual\r\n    }, [fetchingGrupos, fetchingDistAnual])\r\n\r\n    React.useEffect(()=>{\r\n        let tempAnualDatasets=[]\r\n        if(!isLoading){\r\n            distAnual.data.forEach(d=>{\r\n                 let orderedDataAnual= []\r\n                 const grupoColor = grupos.data.filter(g=>g.abrv === d.grupo)[0].color\r\n                for (let i = 1; i< 13; i++){\r\n                    orderedDataAnual.push(Number(d.anual[`m${i}`]))\r\n                }\r\n                tempAnualDatasets.push( {\r\n                    label: d.grupo, \r\n                    data:  orderedDataAnual, \r\n                    backgroundColor: grupoColor,\r\n                    fill: true,\r\n                    borderColor: grupoColor\r\n                })\r\n            })\r\n            setDatasets(tempAnualDatasets)\r\n        }\r\n    }, [isLoading])\r\n    \r\n    if(isLoading) return <Loading msg=\"A carregar dados relacionados com os grupos de investigação...\" />\r\n    return (\r\n        <div className=\"gerirGruposContainer\">\r\n            {grupos.data.length === 0 && <Paper style={{\r\n            padding: \"10px 20px\",\r\n            width: \"100%\",\r\n            marginTop: 50\r\n        }}>\r\n            <Typography>Sem grupos para apresentar. <Button component={Link} to=\"/novoGrupo\" color=\"primary\">adicionar grupo</Button></Typography>    \r\n        </Paper>}\r\n            {grupos.data.length > 0 && <>\r\n                <Dialog onClose={()=>{\r\n                    setOpenDelete(false)\r\n                    setDeleteResult(null)\r\n                    setDeleteGrupo(false)\r\n                    refetch()\r\n                }} aria-labelledby=\"simple-dialog-title\" open={openDelete}>\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Tem a certeza que pretende apagar o grupo selecionado\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        O grupo será apagado permanentemente da base de dados. Tem a certeza que pretende continuar?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!deleteGrupo && <Button style={{color: \"#e74c3c\"}}onClick={()=>{setDeleteGrupo(true)}}>\r\n                        apagar\r\n                    </Button>}\r\n                    {deleteGrupo && <DeleteGroup\r\n                        id={selectedGroup} \r\n                        setDeleteGrupo={setDeleteGrupo}\r\n                        setDeleteResult={setDeleteResult}\r\n                        selectedDistID = {selectedDistID}\r\n                        />}\r\n                    <Button onClick={()=>setOpenDelete(false)} autoFocus>\r\n                        cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n             <div className=\"titleContainer\">\r\n                <Typography variant=\"h6\" color=\"primary\" >Gestão de Grupos de Investigação</Typography>\r\n                <div style={{\r\n                    display: \"flex\"\r\n                }}>\r\n                    <Button style={{marginRight: 10}} component={Link} to=\"/novoGrupo\" variant=\"contained\" color=\"primary\" >adicionar grupo</Button>\r\n                    <Button onClick={()=>{\r\n                        setExportDistAnual(true)\r\n                    }} variant=\"contained\" color=\"secondary\" >\r\n                        {exportDistAnual && <DownloadDistCum \r\n                            setExportDistAnual={setExportDistAnual}\r\n                        /> }   \r\n                        exportar dados\r\n                        \r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            {exportDistAnualGrupo && <DownloadDistGrupo \r\n                setExportDistAnualGrupo={setExportDistAnualGrupo}\r\n                grupoID={selectedGroup}\r\n            />}\r\n            <Paper className=\"dataContainer\">\r\n               \r\n                <div className=\"graphContainer\">\r\n                    <Bar\r\n                        width={100}\r\n                        height={25}\r\n                        data={{\r\n                            labels: [\"Jan\", \"Fev\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Ag\", \"Set\", \"Out\", \"Nov\", \"Dez\"], \r\n                            datasets: datasets\r\n                        }}\r\n                        options={{\r\n                            tooltips:{\r\n                                enabled: true\r\n                            },\r\n                            elements: {\r\n                                point:{\r\n                                    radius: 0\r\n                                }\r\n                            },\r\n                            responsive: true, \r\n                            \r\n                            chartArea: {\r\n                                backgroundColor: 'rgba(251, 85, 85, 0.4)'\r\n                            }, \r\n                            maintainAspectRatio: true,\r\n                            legend:{\r\n                                display: false, \r\n                                position: \"top\",\r\n                                align:\"center\",\r\n                                labels: {\r\n                                    fontColor: \"white\",\r\n                                }\r\n                                \r\n                            },\r\n                        \r\n                            scales:{\r\n                                xAxes: [{\r\n                                    display: true,\r\n                                    gridLines: {\r\n                                        display: true,\r\n                                        color: \"#ecf0f1\"\r\n                                    },\r\n                                    scaleLabel: {\r\n                                        display: true,\r\n                                        labelString: `Ano de ${new Date().getFullYear()}`, \r\n                                        fontColor: \"#666\"\r\n                                    },\r\n                                    ticks:{\r\n                                        fontColor: \"#666\"\r\n                                    },\r\n                                }],\r\n                                yAxes: [{\r\n                                    display: true,\r\n                                    gridLines: {\r\n                                        display: true,\r\n                                        color: \"#ecf0f1\"\r\n                                    },\r\n                                    \r\n                                    scaleLabel: {\r\n                                        display: true,\r\n                                        labelString: 'Montante gasto (€)', \r\n                                        fontColor: \"#666\"\r\n                                    },\r\n                                    ticks:{\r\n                                        fontColor: \"#666\"\r\n                                    } \r\n                                }]\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n            </Paper>\r\n            <List\r\n                component={Paper}\r\n                style={{paddingBottom: 0}}\r\n            >\r\n            {grupos.data.map(g=>{\r\n                return(<>\r\n                    <ListItem  key={g.id}>\r\n                        <ListItemIcon>\r\n                           {exportDistAnualGrupo && selectedGroup === g.id && <CircularProgress  style={{marginRight: 10}} color=\"primary\" />}\r\n                           <GroupWorkIcon style={{fontSize: 40,color: g.color}} />\r\n\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={g.name} secondary={g.abrv} />\r\n                        <IconButton disabled={exportDistAnualGrupo} onClick={(e)=>{\r\n                            setSelectedGroup(g.id)\r\n                            setAnchorEl(e.target)\r\n                            setSelectedDistID(g.dist)\r\n                        }}>\r\n                            <MoreVertIcon/>\r\n                        </IconButton>\r\n                    </ListItem>\r\n                    <Collapse key={\"col_\"+g.id} in={collapse===g.id} timeout=\"auto\" unmountOnExit>\r\n                        <MembersComponent selectedYear={2021} setCollapse={setCollapse} id={g.id} />\r\n                    </Collapse>\r\n                </>)\r\n                })\r\n            }\r\n            </List>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={()=>setAnchorEl(null)}\r\n            >\r\n                <MenuItem component={Button} onClick={()=>{\r\n                    setAnchorEl(null)\r\n                    setCollapse(selectedGroup)    \r\n                }}>DETALHES</MenuItem>\r\n                 <MenuItem component={Button} onClick={()=>{\r\n                    setAnchorEl(null)\r\n                    setExportDistAnualGrupo(true)\r\n                }}>EXPORTAR</MenuItem>\r\n                <MenuItem component={Link} to={`/editGrupo/${selectedGroup}`} onClick={()=>setAnchorEl(null)}>EDITAR</MenuItem>\r\n                <MenuItem component={Button} onClick={()=>{\r\n                    setAnchorEl(null)\r\n                    setOpenDelete(true)\r\n                }}>ELIMINAR</MenuItem>\r\n            </Menu>\r\n            {Boolean(deleteResult) && <Snackbar open={true} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={deleteResult.error? \"error\": \"success\"}>\r\n                    {deleteResult.error? deleteResult.msg: \"O grupo foi eliminado com sucesso!\"}\r\n                </Alert>\r\n            </Snackbar>}\r\n\r\n            </>}\r\n        </div>\r\n    )\r\n}\r\nexport default GerirGruposPage\r\n\r\nconst Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\AddGroup\\AddGroup.jsx",["275"],"import React from 'react'\r\nimport {useParams} from \"react-router-dom\"\r\nimport FormComponent from \"../../Components/FormComponent\"\r\nimport {List , ListItem,Button,ListItemText,ListItemSecondaryAction, TextField,  Typography, IconButton,  Popover, ListItemIcon} from \"@material-ui/core\"\r\nimport Loading from \"../../Components/Loading\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SubmitForm from \"./SubmitForm\"\r\nimport {useNovoGrupo, useGetGrupoByID, useEditGrupo} from \"../../Domain/useCases\"\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ColorPicker, { useColor } from \"react-color-palette\";\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\n\r\nconst AddGroup = () => {\r\n    let { id } = useParams();\r\n    \r\n    const {\r\n        data: grupo, \r\n        isFetching\r\n    } = useGetGrupoByID(id)\r\n\r\n    const [color, setColor] = useColor(\"hex\", \"#121212\");\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [submitForm, setSubmitForm] = React.useState(false);\r\n    const [tempMembro, setTempMembro] = React.useState(\"\");\r\n    const [submitData, setSubmitData] = React.useState({\r\n        name: \"\",\r\n        abrv: \"\", \r\n        color: \"\", \r\n        membros: []\r\n    })\r\n    const [error, setError] = React.useState({\r\n        name: false,\r\n        abrv: false, \r\n        color: false, \r\n        membros: false\r\n    })\r\n    \r\n    const onChangeInput = (e)=>{\r\n        setSubmitData({\r\n            ...submitData,\r\n            [e.target.id]: e.target.value\r\n        })\r\n        setError({\r\n            ...error, \r\n            [e.target.id]: false\r\n        })\r\n    }\r\n    const onSubmitForm = ()=>{\r\n        let tempError = {}\r\n        Object.keys(error).forEach(key=>{\r\n            if(key!== \"membros\" && submitData[key] === \"\"){\r\n                tempError={\r\n                    ...tempError,\r\n                    [key]: true\r\n                }\r\n            }\r\n            else if (key === \"membros\" && submitData.membros.length === 0){\r\n                tempError={\r\n                    ...tempError,\r\n                    [key]: true\r\n                }\r\n            }            \r\n        })\r\n        setError({\r\n            ...error, \r\n            ...tempError\r\n        })\r\n        if(Object.values(tempError).length === 0){\r\n            setSubmitForm(true)\r\n        }\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching ){\r\n            if(id){\r\n                setSubmitData({\r\n                    name: grupo.data.name,\r\n                    abrv: grupo.data.abrv, \r\n                    color: grupo.data.color, \r\n                    membros: grupo.data.membros\r\n                })\r\n            }\r\n        }\r\n    }, [isFetching])\r\n\r\n\r\n\r\n    if(isFetching) return <Loading msg=\"A carregar dados do grupo\" />\r\n    if(submitForm)  return <SubmitForm data={submitData}  id={id} submitFunction={id? useEditGrupo: useNovoGrupo}/>\r\n    return (\r\n        <FormComponent title={id? `Editar o Grupo ${grupo.data.name}`: \"Registo de Novo Grupo\"}>\r\n            <TextField\r\n                error={error.name}\r\n                required\r\n                id=\"name\"\r\n                label=\"Nome do Grupo\"\r\n                value={submitData.name}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n           \r\n            <div style={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                alignItems: \"center\"\r\n            }}>\r\n                <IconButton style={{\r\n                    marginRight: 10,\r\n                    marginBottom: 20\r\n                }} onClick={(e)=>{\r\n                    setAnchorEl(e.target)\r\n                }}>\r\n                    <ColorLensIcon style={{color: submitData.color}}/>\r\n                </IconButton>\r\n                <TextField\r\n                    fullWidth\r\n                    required\r\n                    error={error.abrv}\r\n                    id=\"abrv\"\r\n                    label=\"Abreviatura\"\r\n                    value={submitData.abrv}\r\n                    onChange={onChangeInput}\r\n                    variant=\"filled\"\r\n                />\r\n                \r\n            </div>\r\n            <Popover\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={()=>setAnchorEl(null)}\r\n                 anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                  }}\r\n            >\r\n                <ColorPicker width={200} height={100} color={color} onChange={(c)=>{\r\n                    setSubmitData({\r\n                        ...submitData,\r\n                        color: c.hex\r\n                    })\r\n                    setColor(c)\r\n                    }} dark />\r\n\r\n            </Popover>\r\n            \r\n            <div className=\"formTitleContainer\">\r\n                <Typography color=\"primary\" >Adicionar Membro</Typography>\r\n            </div>\r\n            <TextField\r\n                id=\"name\"\r\n                label=\"Nome\"\r\n                onKeyDown={(e)=>{\r\n                    if(e.key=== \"Enter\"){\r\n                        let tmpM = submitData.membros\r\n                        tmpM.push(tempMembro)\r\n                        setSubmitData({\r\n                            ...submitData,\r\n                            membros: tmpM\r\n                        })\r\n                        setTempMembro(\"\")\r\n                    }\r\n                }}\r\n                value={tempMembro}\r\n                onChange={(e)=>{setTempMembro(e.target.value)}}\r\n                variant=\"filled\"\r\n            />\r\n           \r\n            <Button\r\n                variant=\"contained\"\r\n                disabled={tempMembro === \"\"}\r\n                onClick={()=>{\r\n                    let tmpM = submitData.membros\r\n                    tmpM.push(tempMembro)\r\n                    setSubmitData({\r\n                        ...submitData,\r\n                        membros: tmpM\r\n                    })\r\n                    setTempMembro(\"\")\r\n                }}\r\n            >\r\n                adicionar membro\r\n            </Button>\r\n            <List>\r\n                {\r\n                    submitData.membros.map((m, index)=>{\r\n                        return (\r\n                            <ListItem style={{\r\n                                background: \"#ecf0f1\"\r\n                            }} key={\"membro_\" + index}>\r\n                                <ListItemIcon>\r\n                                    <AccountCircleIcon color=\"primary\" />\r\n                                </ListItemIcon>\r\n                                    <ListItemText primary={m} />\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton onClick={()=>{\r\n                                                let tempM = submitData.membros\r\n                                                tempM.splice(index,1)\r\n                                                setSubmitData({\r\n                                                    ...submitData,\r\n                                                    membros: tempM\r\n                                                })\r\n                                        }} style={{color: \"#e74c3c\"}}>\r\n                                            <DeleteIcon/>\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{\r\n                    marginTop: 30\r\n                }}\r\n                onClick={()=>onSubmitForm()}\r\n            >\r\n                Submeter\r\n            </Button>\r\n        </FormComponent>\r\n\r\n    )\r\n}\r\nexport default AddGroup","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\AddGroup\\SubmitForm.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DeleteGrupoComponent.jsx",["276"],"import React from 'react'\r\nimport {useDeleteGrupo} from \"../../Domain/useCases\"\r\nimport { CircularProgress} from \"@material-ui/core\"\r\n\r\n const DeletePedidoComponent = ({\r\n    id,\r\n    selectedDistID,\r\n    setDeleteResult,\r\n    setDeleteGrupo\r\n }) => {\r\n\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useDeleteGrupo(id, selectedDistID)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setDeleteResult(result)\r\n            setDeleteGrupo(false)\r\n        }\r\n    }, [isFetching])\r\n\r\n    if(isFetching) return (<CircularProgress />)\r\n    return (<></>)\r\n}\r\nexport default DeletePedidoComponent\r\n\r\n","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\MembersComponent.jsx",["277"],"import React from 'react'\r\nimport {useGetGrupoMembros} from \"../../Domain/useCases\"\r\nimport {Typography, IconButton,CircularProgress, List, ListItem,ListItemText, ListItemIcon} from \"@material-ui/core\"\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {Bar} from \"react-chartjs-2\"\r\nimport RandomColor from \"randomcolor\"\r\n\r\nconst MembersComponent = ({\r\n    id,\r\n    setCollapse,\r\n    selectedYear\r\n}) => {\r\n    const [membersDatasets, setMemberDataset] = React.useState([])\r\n    const {\r\n        data: membros, \r\n        isFetching\r\n    } = useGetGrupoMembros(id)\r\n\r\n    React.useEffect(()=>{\r\n        let tempMembersDatasets=[]\r\n            if(!isFetching){\r\n            membros.data.forEach(m=>{\r\n                const orderedDataMembers = []\r\n                const rc = RandomColor()\r\n                const currentMembroDist = m.dist.filter(d=>d.year=== selectedYear)[0]\r\n                for (let j = 1; j< 13; j++){\r\n                    orderedDataMembers.push(Number(currentMembroDist[`m${j}`]))\r\n                }\r\n                tempMembersDatasets.push({\r\n                    label: m.name, \r\n                    data: orderedDataMembers, \r\n                    backgroundColor: rc,\r\n                    fill: true,\r\n                    borderColor: rc\r\n                })\r\n            })\r\n            \r\n            setMemberDataset(tempMembersDatasets)\r\n        }\r\n    }, [isFetching])\r\n\r\n    if (isFetching) \r\n    return <div style={{\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        margin: \"20px\"\r\n    }}>\r\n        <CircularProgress />\r\n    </div>\r\n\r\n    return (\r\n         <div className=\"groupDetailsContainer\">\r\n            <div className=\"titleContainer\">\r\n                <Typography >Distribuição Monetária Anual</Typography>\r\n                <IconButton onClick={()=>setCollapse(null)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </div>\r\n            <div className=\"graphContainer\">\r\n                <Bar\r\n                    width={80}\r\n                    height={25}\r\n                    data={{\r\n                        labels: [\"Jan\", \"Fev\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Ag\", \"Set\", \"Out\", \"Nov\", \"Dez\"], \r\n                        datasets: membersDatasets? membersDatasets: []\r\n                    }}\r\n                    options={{\r\n                        tooltips:{\r\n                            enabled: true\r\n                        },\r\n                        elements: {\r\n                            point:{\r\n                                radius: 0\r\n                            }\r\n                        },\r\n                        responsive: true, \r\n                        \r\n                        chartArea: {\r\n                            backgroundColor: 'rgba(251, 85, 85, 0.4)'\r\n                        }, \r\n                        maintainAspectRatio: true,\r\n                        legend:{\r\n                            display: false, \r\n                            position: \"top\",\r\n                            align:\"center\",\r\n                            labels: {\r\n                                fontColor: \"white\",\r\n                            }\r\n                            \r\n                        },\r\n                    \r\n                        scales:{\r\n                            xAxes: [{\r\n                                display: true,\r\n                                gridLines: {\r\n                                    display: true,\r\n                                    color: \"#ecf0f1\"\r\n                                },\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: `Ano de ${new Date().getFullYear()}`, \r\n                                    fontColor: \"#666\"\r\n                                },\r\n                                ticks:{\r\n                                    fontColor: \"#666\"\r\n                                },\r\n                                stacked: true,\r\n                            }],\r\n                            yAxes: [{\r\n                                display: true,\r\n                                gridLines: {\r\n                                    display: true,\r\n                                    color: \"#ecf0f1\"\r\n                                },\r\n                                \r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: 'Montante gasto (€)', \r\n                                    fontColor: \"#666\"\r\n                                },\r\n                                ticks:{\r\n                                    fontColor: \"#666\"\r\n                                } \r\n                            }]\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"titleContainer\">\r\n                <Typography color=\"primary\">Membros do Grupo</Typography>\r\n            </div>\r\n            <List style={{paddingLeft: 20}} component=\"div\" >\r\n                {membros.data.map(m=>{\r\n                    return (\r\n                        <ListItem key={m.id}>\r\n                            <ListItemIcon >\r\n                                <AccountCircleIcon color=\"primary\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={m.name} />\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\nexport default MembersComponent","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\EmpresasForm.jsx",["278","279","280"],"import React from 'react'\r\nimport {useParams} from \"react-router-dom\"\r\nimport FormComponent from \"../../Components/FormComponent\"\r\nimport {List ,Dialog,DialogTitle,DialogContent,DialogContentText,DialogActions, ListItem, Button,ListItemText,ListItemSecondaryAction, TextField,  Typography, IconButton,  Popover, ListItemIcon, MenuItem} from \"@material-ui/core\"\r\nimport Loading from \"../../Components/Loading\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SubmitForm from \"./SubmitForm\"\r\nimport {useAddEmpresa, useGetEmpresaById, useEditEmpresa, useGetRubricasByEmppresa} from \"../../Domain/useCases\"\r\nimport WidgetsIcon from '@material-ui/icons/Widgets';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GestureIcon from '@material-ui/icons/Gesture';\r\nimport AddNE from \"./AddNE\"\r\nimport DeleteNES from \"./DeleteNES\"\r\nimport BuildIcon from '@material-ui/icons/Build';\r\n\r\nconst EmpresasForm = () => {\r\n    let { id } = useParams();\r\n\r\n    const {\r\n        data: empresa, \r\n        isFetching\r\n    } = useGetEmpresaById(id)\r\n    \r\n    const {\r\n        data: nes, \r\n        isFetching: fetchingNES,\r\n        refetch\r\n    } = useGetRubricasByEmppresa(id)\r\n\r\n    const [submitForm, setSubmitForm] = React.useState(false);\r\n    const [addNE, setAddNe] = React.useState(false);\r\n    const [submitAddNE, setSubmitAddNE] = React.useState(false);\r\n    const [openDelete, setOpenDelete] = React.useState(false);\r\n    const [deleteNE, setDeleteNE] = React.useState(false);\r\n    const [selectedNEID, setSelectedNEID] = React.useState(null);\r\n\r\n    const [tempNE, setTempNE] = React.useState({\r\n        ne: \"\",\r\n        cabimento: \"\",\r\n        compromisso: \"\",\r\n        rubrica: \"PM\",\r\n        saldo_abertura: 0,\r\n        data_registo: \"\",\r\n        data_registo_timestamp: \"\",\r\n    });\r\n\r\n    const [submitData, setSubmitData] = React.useState({\r\n        empresa: \"\",\r\n        nif: \"\",\r\n        morada: \"\",\r\n        cp: \"\", \r\n        localidade: \"\",\r\n        distrito: \"\",\r\n    })\r\n    const [error, setError] = React.useState(false)\r\n\r\n    const onChangeInput = (e)=>{\r\n        setSubmitData({\r\n            ...submitData,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onChangeInputNE = (e)=>{\r\n        setTempNE({\r\n            ...tempNE,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching  && !fetchingNES){\r\n            if(id){\r\n                setSubmitData({\r\n                    ...submitData, \r\n                    ...empresa.data,\r\n                })\r\n            }\r\n        }\r\n    }, [isFetching, fetchingNES])\r\n\r\n    if(isFetching || fetchingNES) return <Loading msg=\"A carregar dados da empresa\" />\r\n    if(submitForm)  return <SubmitForm data={submitData} nesIDs={nes.data? nes.data.map(n=>n.id): null} id={id} submitFunction={id? useEditEmpresa: useAddEmpresa}/>\r\n    return (\r\n        <FormComponent title={id? `Editar a empresa ${empresa.data.empresa}`: \"Registo de Novo Fornecedor\"}>\r\n            {id && <Dialog open={addNE} onClose={()=>setAddNe(false)} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Adicionar Nota de Encomenda</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Por favor preencha todos os dados para adicionar uma nova nota de encomenda associada a esta empresa\r\n                    </DialogContentText>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                            variant=\"filled\"\r\n                            id=\"ne\"\r\n                            label=\"Nota de Encomenda\"\r\n                            fullWidth\r\n                            onChange={onChangeInputNE}\r\n                            value={tempNE.ne}\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            id=\"cabimento\"\r\n                            label=\"Cabimento\"\r\n                            fullWidth\r\n                            onChange={onChangeInputNE}\r\n                            value={tempNE.cabimento}\r\n                        />\r\n                         <TextField\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            id=\"compromisso\"\r\n                            label=\"Comprimisso\"\r\n                            fullWidth\r\n                            onChange={onChangeInputNE}\r\n                            value={tempNE.compromisso}\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            id=\"rubrica\"\r\n                            fullWidth\r\n                            required\r\n                            select\r\n                            label=\"Rúbrica\"\r\n                            value={tempNE.rubrica}\r\n                            onChange={(e)=>{\r\n                                setTempNE({\r\n                                    ...tempNE, \r\n                                    rubrica: e.target.value,\r\n                                })\r\n                            }}\r\n                        >\r\n                            <MenuItem value=\"PM\">\r\n                               <WidgetsIcon style={{color: \"#3498db\", marginRight: 10}} /> Materiais\r\n                            </MenuItem>\r\n                            <MenuItem value=\"PR\">\r\n                               <WhatshotIcon style={{color: \"#e74c3c\", marginRight: 10}}/> Reagentes\r\n                            </MenuItem>\r\n                            <MenuItem value=\"SEQ\">\r\n                               <GestureIcon style={{color: \"#9b59b6\", marginRight: 10}}/> Sequenciação\r\n                            </MenuItem>\r\n                            <MenuItem value=\"SEQ\">\r\n                               <BuildIcon style={{color: \"#f39c12\", marginRight: 10}}/> Reparações\r\n                            </MenuItem>\r\n                        </TextField>\r\n                         <TextField\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            id=\"saldo_abertura\"\r\n                            label=\"Montante\"\r\n                            fullWidth\r\n                            onChange={onChangeInputNE}\r\n                            type=\"number\"\r\n                            value={tempNE.saldo_abertura}\r\n                        />\r\n                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={()=>setAddNe(false)} color=\"primary\">\r\n                            Cancelar\r\n                        </Button>\r\n                        {submitAddNE && <AddNE \r\n                            ne={tempNE}\r\n                            empresa={submitData.empresa}\r\n                            empresaID={id}\r\n                            refetch={refetch}\r\n                            setAddNe={setAddNe}\r\n                            setSubmitAddNE={setSubmitAddNE}\r\n                            setTempNE={setTempNE}\r\n                        />}\r\n                        {!submitAddNE && <Button onClick={()=>{\r\n                            if(tempNE.ne !== \"\"){\r\n                               setSubmitAddNE(true)\r\n                            }\r\n                        }} color=\"primary\">\r\n                            Adicionar\r\n                        </Button>}\r\n                </DialogActions>\r\n            </Dialog>}\r\n            <Dialog onClose={()=>{\r\n                setOpenDelete(false)\r\n            }} aria-labelledby=\"simple-dialog-title\" open={openDelete}>\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Tem a certeza que pretende apagar a nota de encomenda\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        A nota de encomenda será apagada permanentemente da base de dados. Tem a certeza que pretende continuar?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!deleteNE && <Button style={{color: \"#e74c3c\"}}onClick={()=>{setDeleteNE(true)}}>\r\n                        apagar\r\n                    </Button>}\r\n                    {deleteNE && <DeleteNES\r\n                        id={selectedNEID} \r\n                        setOpenDelete={setOpenDelete}\r\n                        refetch={refetch}\r\n                        setDeleteNE={setDeleteNE}\r\n                        />}\r\n                    <Button onClick={()=>setOpenDelete(false)} autoFocus>\r\n                        cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n            <TextField\r\n                error={error}\r\n                required\r\n                id=\"empresa\"\r\n                label=\"Empresa\"\r\n                value={submitData.empresa}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n           \r\n           <TextField\r\n                id=\"nif\"\r\n                label=\"NIF\"\r\n                value={submitData.nif}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n             <TextField\r\n                id=\"morada\"\r\n                label=\"Morada\"\r\n                value={submitData.morada}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n             <TextField\r\n                id=\"cp\"\r\n                label=\"Código Postal\"\r\n                value={submitData.cp}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n             <TextField\r\n                id=\"localidade\"\r\n                label=\"Localidade\"\r\n                value={submitData.localidade}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n            <TextField\r\n                id=\"distrito\"\r\n                label=\"Distrito\"\r\n                value={submitData.distrito}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n\r\n           {id && <Button onClick={()=>{\r\n                setAddNe(true)\r\n            }} color=\"primary\" >adicionar nota de encomenda</Button>}\r\n\r\n            {id && <List dense={true}>\r\n                {nes.data.map((n, index)=>{\r\n                        return (\r\n                            <ListItem style={{\r\n                                background: \"#D1E9FF\"\r\n                            }} key={\"ne_\" + n.id}>\r\n                                <ListItemIcon>\r\n                                    {n.rubrica === \"PM\" && <WidgetsIcon style={{color: \"#3498db\"}} />}\r\n                                    {n.rubrica === \"PR\" && <WhatshotIcon style={{color: \"#e74c3c\"}}/>}\r\n                                    {n.rubrica === \"SEQ\" && <GestureIcon style={{color: \"#9b59b6\"}}/>}\r\n                                    {n.rubrica === \"REP\" && <BuildIcon style={{color: \"#f39c12\"}}/>}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={`${n.ne}`} secondary={`Saldo de abertura: ${n.saldo_abertura}`} />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton onClick={()=>{\r\n                                           setOpenDelete(true)\r\n                                           setSelectedNEID(n.id)\r\n                                    }} style={{color: \"#e74c3c\"}}>\r\n                                        <DeleteIcon/>\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n            </List>}\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{\r\n                    marginTop: 30\r\n                }}\r\n                onClick={()=>{\r\n                    if(submitData.empresa !== \"\" ){\r\n                        setSubmitForm(true)\r\n                    }else setError(true)\r\n                }}\r\n            >\r\n                Submeter\r\n            </Button>\r\n        </FormComponent>\r\n    )\r\n}\r\nexport default EmpresasForm","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\SubmitForm.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SubmitFatura.jsx",["281","282"],"import React from 'react'\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport { useAddFatura} from \"../../Domain/useCases\"\r\n\r\nconst SubmitFatura = ({\r\n    fatura,\r\n    setSubmitFatura,\r\n    refetchFaturas,\r\n    setAddFat,\r\n    setTempFatura\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching\r\n    } = useAddFatura(fatura)\r\n    \r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            refetchFaturas()\r\n            setAddFat(false)\r\n            setTempFatura({\r\n                name: \"\", \r\n                data_emissao: \"\", \r\n                valor_fatura: 0, \r\n                notas: \"\", \r\n            })\r\n            setSubmitFatura(false)\r\n        }\r\n    },[isFetching])\r\n\r\n    if(isFetching)return <CircularProgress/>\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default SubmitFatura","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\DeleteFatura.jsx",["283","284"],"import React from 'react'\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport { useDeleteFatura} from \"../../Domain/useCases\"\r\n\r\nconst DeleteFatura = ({\r\n    id,\r\n    setOpenDelete,\r\n    refetch,\r\n    setDeleteFatura\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching,\r\n    } = useDeleteFatura(id)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setOpenDelete(false)\r\n            refetch()\r\n            setDeleteFatura(false)\r\n        }\r\n    }, [isFetching])\r\n\r\n    if(isFetching) return <CircularProgress color=\"primary\" />\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteFatura","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\GetFaturasPedido.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\DeleteNES.jsx",["285","286"],"import React from 'react'\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport { useDeleteNES} from \"../../Domain/useCases\"\r\n\r\nconst DeleteNES = ({\r\n    id,\r\n    setOpenDelete,\r\n    refetch,\r\n    setDeleteNE\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching,\r\n    } = useDeleteNES(id)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setOpenDelete(false)\r\n            refetch()\r\n            setDeleteNE(false)\r\n        }\r\n    }, [isFetching])\r\n\r\n    if(isFetching) return <CircularProgress color=\"primary\" />\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DeleteNES","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\AddNE.jsx",["287","288"],"import React from 'react'\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport { useAddNE} from \"../../Domain/useCases\"\r\n\r\nconst AddNE =({\r\n    ne,\r\n    empresa,\r\n    empresaID,\r\n    refetch, \r\n    setAddNe,\r\n    setSubmitAddNE,\r\n    setTempNE\r\n})=> {\r\n    const {\r\n        data: result, \r\n        isFetching\r\n    } = useAddNE({\r\n        ...ne,\r\n        data_registo: new Date().toJSON(),\r\n        data_registo_timestamp: Date.now(),\r\n        saldo_disponivel: ne.saldo_abertura,\r\n        empresa, \r\n        empresa_id: empresaID\r\n    })\r\n    \r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            refetch()\r\n            setAddNe(false)\r\n            setTempNE({\r\n                ne: \"\",\r\n                cabimento: \"\",\r\n                compromisso: \"\",\r\n                rubrica: \"PM\",\r\n                saldo_abertura: 0,\r\n                data_registo: \"\",\r\n                data_registo_timestamp: \"\",\r\n            })\r\n            setSubmitAddNE(false)\r\n        }\r\n    },[isFetching])\r\n\r\n    if(isFetching)return <CircularProgress/>\r\n    \r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default AddNE","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\DeleteEmpresa.jsx",["289","290"],"import React from 'react'\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport { useDeleteEmpresa} from \"../../Domain/useCases\"\r\n\r\nconst DeleteEmpresa = ({\r\n    id,\r\n    setOpenDelete,\r\n    refetch,\r\n    setDeleteEmpresa\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching,\r\n    } = useDeleteEmpresa(id)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setOpenDelete(false)\r\n            refetch()\r\n            setDeleteEmpresa(false)\r\n        }\r\n    }, [isFetching])\r\n\r\n    if(isFetching) return <CircularProgress color=\"primary\" />\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default DeleteEmpresa","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\DownloadPDF.jsx",["291"]," import React from 'react'\r\nimport {useDownloadPDF} from \"../../Domain/useCases\"\r\nimport {saveAs} from \"file-saver\"\r\n\r\nconst DownloadPDF = ({\r\n    template,\r\n    pedidoID,\r\n    setFazerPedido,\r\n    refecth,\r\n    setIsRefetch\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useDownloadPDF(template, pedidoID)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            saveAs(result, `pedido_${pedidoID}`)\r\n            setIsRefetch(true)\r\n            refecth()\r\n            setFazerPedido(false)\r\n        }\r\n    }, [isFetching])\r\n    // if(isFetching) return (<CircularProgress size={30} />)\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default DownloadPDF","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\ChangeArtigosStatus.jsx",["292","293","294"],"import React from 'react'\r\nimport {useSetArtigoState} from \"../../Domain/useCases\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\n\r\nconst ChageArtigosStatus = ({\r\n    pedidoID, \r\n    index, \r\n    chegada_data, \r\n    setChegadaArtigosState,\r\n    refetch,\r\n    openArtigoChegadaForm,\r\n    setRefetch\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useSetArtigoState(pedidoID ,index,chegada_data)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            openArtigoChegadaForm(false)\r\n            refetch()\r\n            setChegadaArtigosState(false)\r\n            setRefetch(true)\r\n        }\r\n    }, [isFetching])\r\n    \r\n    // if(isFetching) return (<CircularProgress size={30} />)\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default ChageArtigosStatus","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\FaturarArtigos.jsx",["295","296"],"import React from 'react'\r\nimport {useSetArtigoFaturado} from \"../../Domain/useCases\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\n\r\nconst FaturarArtigos = ({\r\n    pedidoID, \r\n    index, \r\n    faturado, \r\n    refetch,\r\n    setRefetch,\r\n    setChangeArtigoFaturado\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useSetArtigoFaturado(pedidoID ,index,faturado)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            refetch()\r\n            setChangeArtigoFaturado(false)\r\n            setRefetch(true)\r\n        }\r\n    }, [isFetching])\r\n    \r\n    if(isFetching) return (<CircularProgress size={30} />)\r\n    return (<div></div>)\r\n}\r\nexport default FaturarArtigos","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\AddArtigo.jsx",["297","298"],"import React from 'react'\r\nimport {useAddArtigoToDB} from \"../../Domain/useCases\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\n\r\nconst AddArtigo = ({\r\n    setAddArtigoToDB,\r\n    setTempArticle,\r\n    setShowAddArtigoForm,\r\n    tempArticle,\r\n    artigo,\r\n    articlesMainPage, \r\n    refetch\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useAddArtigoToDB(artigo)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            if(!articlesMainPage){\r\n                setTempArticle({\r\n                    ...tempArticle,\r\n                    referencia_artigo: artigo.code,\r\n                    artigo: artigo.name\r\n                })\r\n            }else{\r\n                setTempArticle({\r\n                    name: \"\", \r\n                    code: \"\"\r\n                })\r\n                refetch()\r\n            }\r\n            setShowAddArtigoForm(false)\r\n            setAddArtigoToDB(false)\r\n        }\r\n    }, [isFetching])\r\n    \r\n    if(isFetching) return (<CircularProgress size={30} />)\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AddArtigo","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\ArtigosPage\\DeleteArtigo.jsx",["299"],"import React from 'react'\r\nimport {useDeleteArtigo} from \"../../Domain/useCases\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\n\r\nconst  DeleteArtigo = ({\r\n    id,\r\n    setOpenDelete,\r\n    setDeleteArtigo,\r\n    refetch\r\n}) => {\r\n    const {\r\n        isFetching \r\n    } = useDeleteArtigo(id)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setOpenDelete(false)\r\n            refetch()\r\n            setDeleteArtigo(false)\r\n        }\r\n    }, [isFetching])\r\n    \r\n    if(isFetching) return (<CircularProgress />)\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default DeleteArtigo","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\ConfigsRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\SaveConfigs.jsx",["300","301"],"import { CircularProgress } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {useSaveConfig} from \"../../Domain/useCases\"\r\n\r\nconst SaveConfigs = ({\r\n    configs, \r\n    setSaveConfigs,\r\n    setOpenSnackbar\r\n}) => {\r\n\r\n    const {\r\n        data: result, \r\n        isFetching,\r\n    } = useSaveConfig(configs)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setOpenSnackbar(true)\r\n            setSaveConfigs(false)\r\n        }\r\n    }, [isFetching])\r\n\r\n    if(isFetching) return <CircularProgress size={30}/>\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default  SaveConfigs","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Unauth\\Unauth.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DownloadDistCum.jsx",["302"],"import React from 'react'\r\nimport {useDownloadDistCum} from \"../../Domain/useCases\"\r\nimport {saveAs} from \"file-saver\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nconst DownloadDistCum = ({\r\n    setExportDistAnual\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useDownloadDistCum()\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            saveAs(result, `Distribuição Cumulativa ${new Date().getFullYear()}.pdf`)\r\n            setExportDistAnual(false)\r\n        }\r\n    }, [isFetching])\r\n    return (\r\n        <CircularProgress size={20} style={{color: \"white\", marginRight: 10}}/>\r\n    )\r\n}\r\n\r\nexport default DownloadDistCum","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DownloadDisGrupo.jsx",["303"],"import React from 'react'\r\nimport {useDownloadDistCumGrupo, useGetGrupoByID} from \"../../Domain/useCases\"\r\nimport {saveAs} from \"file-saver\"\r\n\r\nconst DownloadDisGrupo = ({\r\n    setExportDistAnualGrupo,\r\n    grupoID\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useDownloadDistCumGrupo(grupoID)\r\n\r\n    const {\r\n        data: grupo, \r\n        isFetching: fetchingGrupo \r\n    } = useGetGrupoByID(grupoID)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching && !fetchingGrupo){\r\n            saveAs(result, `Distribuição Cumulativa ${new Date().getFullYear()} - ${grupo.data.abrv}.pdf`)\r\n            setExportDistAnualGrupo(false)\r\n        }\r\n    }, [isFetching])\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DownloadDisGrupo\r\n",{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":56,"column":6,"nodeType":"310","endLine":56,"endColumn":23,"suggestions":"311"},{"ruleId":"308","severity":1,"message":"312","line":46,"column":9,"nodeType":"310","endLine":46,"endColumn":11,"suggestions":"313"},{"ruleId":"308","severity":1,"message":"314","line":59,"column":7,"nodeType":"310","endLine":59,"endColumn":19,"suggestions":"315"},{"ruleId":"308","severity":1,"message":"316","line":101,"column":8,"nodeType":"310","endLine":101,"endColumn":42,"suggestions":"317"},{"ruleId":"318","severity":1,"message":"319","line":14,"column":11,"nodeType":"320","messageId":"321","endLine":14,"endColumn":20},{"ruleId":"308","severity":1,"message":"322","line":32,"column":8,"nodeType":"310","endLine":32,"endColumn":30,"suggestions":"323"},{"ruleId":"318","severity":1,"message":"324","line":4,"column":280,"nodeType":"320","messageId":"321","endLine":4,"endColumn":287},{"ruleId":"318","severity":1,"message":"325","line":4,"column":299,"nodeType":"320","messageId":"321","endLine":4,"endColumn":306},{"ruleId":"318","severity":1,"message":"326","line":11,"column":8,"nodeType":"320","messageId":"321","endLine":11,"endColumn":17},{"ruleId":"318","severity":1,"message":"327","line":52,"column":12,"nodeType":"320","messageId":"321","endLine":52,"endColumn":24},{"ruleId":"308","severity":1,"message":"328","line":198,"column":12,"nodeType":"310","endLine":198,"endColumn":23,"suggestions":"329"},{"ruleId":"308","severity":1,"message":"330","line":955,"column":7,"nodeType":"310","endLine":955,"endColumn":25,"suggestions":"331"},{"ruleId":"308","severity":1,"message":"332","line":18,"column":7,"nodeType":"310","endLine":18,"endColumn":22,"suggestions":"333"},{"ruleId":"308","severity":1,"message":"334","line":25,"column":8,"nodeType":"310","endLine":25,"endColumn":20,"suggestions":"335"},{"ruleId":"318","severity":1,"message":"336","line":12,"column":15,"nodeType":"320","messageId":"321","endLine":12,"endColumn":23},{"ruleId":"318","severity":1,"message":"337","line":3,"column":27,"nodeType":"320","messageId":"321","endLine":3,"endColumn":33},{"ruleId":"308","severity":1,"message":"338","line":43,"column":7,"nodeType":"310","endLine":43,"endColumn":19,"suggestions":"339"},{"ruleId":"308","severity":1,"message":"340","line":28,"column":8,"nodeType":"310","endLine":28,"endColumn":20,"suggestions":"341"},{"ruleId":"318","severity":1,"message":"342","line":12,"column":15,"nodeType":"320","messageId":"321","endLine":12,"endColumn":21},{"ruleId":"308","severity":1,"message":"343","line":22,"column":8,"nodeType":"310","endLine":22,"endColumn":20,"suggestions":"344"},{"ruleId":"318","severity":1,"message":"345","line":23,"column":26,"nodeType":"320","messageId":"321","endLine":23,"endColumn":41},{"ruleId":"308","severity":1,"message":"346","line":74,"column":8,"nodeType":"310","endLine":74,"endColumn":19,"suggestions":"347"},{"ruleId":"308","severity":1,"message":"348","line":84,"column":8,"nodeType":"310","endLine":84,"endColumn":20,"suggestions":"349"},{"ruleId":"308","severity":1,"message":"350","line":22,"column":8,"nodeType":"310","endLine":22,"endColumn":20,"suggestions":"351"},{"ruleId":"308","severity":1,"message":"352","line":41,"column":8,"nodeType":"310","endLine":41,"endColumn":20,"suggestions":"353"},{"ruleId":"318","severity":1,"message":"354","line":4,"column":148,"nodeType":"320","messageId":"321","endLine":4,"endColumn":158},{"ruleId":"318","severity":1,"message":"324","line":4,"column":173,"nodeType":"320","messageId":"321","endLine":4,"endColumn":180},{"ruleId":"308","severity":1,"message":"355","line":80,"column":8,"nodeType":"310","endLine":80,"endColumn":33,"suggestions":"356"},{"ruleId":"318","severity":1,"message":"342","line":13,"column":15,"nodeType":"320","messageId":"321","endLine":13,"endColumn":21},{"ruleId":"308","severity":1,"message":"357","line":29,"column":7,"nodeType":"310","endLine":29,"endColumn":19,"suggestions":"358"},{"ruleId":"318","severity":1,"message":"342","line":12,"column":15,"nodeType":"320","messageId":"321","endLine":12,"endColumn":21},{"ruleId":"308","severity":1,"message":"359","line":22,"column":8,"nodeType":"310","endLine":22,"endColumn":20,"suggestions":"360"},{"ruleId":"318","severity":1,"message":"342","line":12,"column":15,"nodeType":"320","messageId":"321","endLine":12,"endColumn":21},{"ruleId":"308","severity":1,"message":"361","line":22,"column":8,"nodeType":"310","endLine":22,"endColumn":20,"suggestions":"362"},{"ruleId":"318","severity":1,"message":"342","line":15,"column":15,"nodeType":"320","messageId":"321","endLine":15,"endColumn":21},{"ruleId":"308","severity":1,"message":"363","line":41,"column":7,"nodeType":"310","endLine":41,"endColumn":19,"suggestions":"364"},{"ruleId":"318","severity":1,"message":"342","line":12,"column":15,"nodeType":"320","messageId":"321","endLine":12,"endColumn":21},{"ruleId":"308","severity":1,"message":"365","line":22,"column":8,"nodeType":"310","endLine":22,"endColumn":20,"suggestions":"366"},{"ruleId":"308","severity":1,"message":"367","line":24,"column":8,"nodeType":"310","endLine":24,"endColumn":20,"suggestions":"368"},{"ruleId":"318","severity":1,"message":"369","line":3,"column":9,"nodeType":"320","messageId":"321","endLine":3,"endColumn":25},{"ruleId":"318","severity":1,"message":"342","line":15,"column":15,"nodeType":"320","messageId":"321","endLine":15,"endColumn":21},{"ruleId":"308","severity":1,"message":"370","line":26,"column":8,"nodeType":"310","endLine":26,"endColumn":20,"suggestions":"371"},{"ruleId":"318","severity":1,"message":"342","line":14,"column":15,"nodeType":"320","messageId":"321","endLine":14,"endColumn":21},{"ruleId":"308","severity":1,"message":"372","line":24,"column":8,"nodeType":"310","endLine":24,"endColumn":20,"suggestions":"373"},{"ruleId":"318","severity":1,"message":"342","line":15,"column":15,"nodeType":"320","messageId":"321","endLine":15,"endColumn":21},{"ruleId":"308","severity":1,"message":"374","line":37,"column":8,"nodeType":"310","endLine":37,"endColumn":20,"suggestions":"375"},{"ruleId":"308","severity":1,"message":"376","line":21,"column":8,"nodeType":"310","endLine":21,"endColumn":20,"suggestions":"377"},{"ruleId":"318","severity":1,"message":"342","line":12,"column":15,"nodeType":"320","messageId":"321","endLine":12,"endColumn":21},{"ruleId":"308","severity":1,"message":"378","line":21,"column":8,"nodeType":"310","endLine":21,"endColumn":20,"suggestions":"379"},{"ruleId":"308","severity":1,"message":"380","line":17,"column":8,"nodeType":"310","endLine":17,"endColumn":20,"suggestions":"381"},{"ruleId":"308","severity":1,"message":"382","line":24,"column":8,"nodeType":"310","endLine":24,"endColumn":20,"suggestions":"383"},"no-native-reassign",["384"],"no-negated-in-lhs",["385"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.","ArrayExpression",["386"],"React Hook React.useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.",["387"],"React Hook React.useEffect has missing dependencies: 'configs.data.pedido_acabado' and 'configs.data.saldo_th'. Either include them or remove the dependency array.",["388"],"React Hook React.useEffect has a missing dependency: 'pedidos'. Either include it or remove the dependency array.",["389"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","React Hook React.useEffect has a missing dependency: 'pedidosAnual'. Either include it or remove the dependency array.",["390"],"'Popover' is defined but never used.","'Divider' is defined but never used.","'CloseIcon' is defined but never used.","'deleteResult' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'date', 'grupos.data', 'id', 'pedido.data.artigos', 'pedido.data.data_pedido', 'pedido.data.data_pedido_formated', 'pedido.data.day', 'pedido.data.grupo', 'pedido.data.grupo_abrv', 'pedido.data.grupo_id', 'pedido.data.mounth', 'pedido.data.notas', 'pedido.data.proposta', 'pedido.data.remetentes', 'pedido.data.responsavel', 'pedido.data.rubrica', 'pedido.data.valor_total', 'pedido.data.year', and 'today'. Either include them or remove the dependency array.",["391"],"React Hook React.useEffect has missing dependencies: 'empresas.data', 'id', 'pedido.data.cabimento', 'pedido.data.empresa', 'pedido.data.ne', 'pedido.data.ne_id', 'setEmpresasList', 'setFetchEmpresas', 'setSubmitData', and 'submitData'. Either include them or remove the dependency array. If 'setSubmitData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["392"],"React Hook React.useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["393"],"React Hook React.useEffect has missing dependencies: 'articles.data', 'setArticlesResult', and 'setPerformSearch'. Either include them or remove the dependency array. If 'setArticlesResult' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["394"],"'response' is assigned a value but never used.","'Button' is defined but never used.","React Hook React.useEffect has a missing dependency: 'artigos.data'. Either include it or remove the dependency array.",["395"],"React Hook React.useEffect has missing dependencies: 'pedidos' and 'setPedidosList'. Either include them or remove the dependency array. If 'setPedidosList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["396"],"'result' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'refetch', 'setDeletePedido', and 'setOpenDelete'. Either include them or remove the dependency array. If 'setOpenDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["397"],"'setSelectedYear' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'distAnual.data' and 'grupos.data'. Either include them or remove the dependency array.",["398"],"React Hook React.useEffect has missing dependencies: 'grupo.data.abrv', 'grupo.data.color', 'grupo.data.membros', 'grupo.data.name', and 'id'. Either include them or remove the dependency array.",["399"],"React Hook React.useEffect has missing dependencies: 'result', 'setDeleteGrupo', and 'setDeleteResult'. Either include them or remove the dependency array. If 'setDeleteResult' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["400"],"React Hook React.useEffect has missing dependencies: 'membros.data' and 'selectedYear'. Either include them or remove the dependency array.",["401"],"'Typography' is defined but never used.","React Hook React.useEffect has missing dependencies: 'empresa.data', 'id', and 'submitData'. Either include them or remove the dependency array. You can also do a functional update 'setSubmitData(s => ...)' if you only need 'submitData' in the 'setSubmitData' call.",["402"],"React Hook React.useEffect has missing dependencies: 'refetchFaturas', 'setAddFat', 'setSubmitFatura', and 'setTempFatura'. Either include them or remove the dependency array. If 'refetchFaturas' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["403"],"React Hook React.useEffect has missing dependencies: 'refetch', 'setDeleteFatura', and 'setOpenDelete'. Either include them or remove the dependency array. If 'setOpenDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["404"],"React Hook React.useEffect has missing dependencies: 'refetch', 'setDeleteNE', and 'setOpenDelete'. Either include them or remove the dependency array. If 'setOpenDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["405"],"React Hook React.useEffect has missing dependencies: 'refetch', 'setAddNe', 'setSubmitAddNE', and 'setTempNE'. Either include them or remove the dependency array. If 'refetch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["406"],"React Hook React.useEffect has missing dependencies: 'refetch', 'setDeleteEmpresa', and 'setOpenDelete'. Either include them or remove the dependency array. If 'setOpenDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["407"],"React Hook React.useEffect has missing dependencies: 'pedidoID', 'refecth', 'result', 'setFazerPedido', and 'setIsRefetch'. Either include them or remove the dependency array. If 'setIsRefetch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["408"],"'CircularProgress' is defined but never used.","React Hook React.useEffect has missing dependencies: 'openArtigoChegadaForm', 'refetch', 'setChegadaArtigosState', and 'setRefetch'. Either include them or remove the dependency array. If 'openArtigoChegadaForm' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["409"],"React Hook React.useEffect has missing dependencies: 'refetch', 'setChangeArtigoFaturado', and 'setRefetch'. Either include them or remove the dependency array. If 'refetch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["410"],"React Hook React.useEffect has missing dependencies: 'articlesMainPage', 'artigo.code', 'artigo.name', 'refetch', 'setAddArtigoToDB', 'setShowAddArtigoForm', 'setTempArticle', and 'tempArticle'. Either include them or remove the dependency array. If 'setShowAddArtigoForm' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["411"],"React Hook React.useEffect has missing dependencies: 'refetch', 'setDeleteArtigo', and 'setOpenDelete'. Either include them or remove the dependency array. If 'setOpenDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["412"],"React Hook React.useEffect has missing dependencies: 'setOpenSnackbar' and 'setSaveConfigs'. Either include them or remove the dependency array. If 'setOpenSnackbar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["413"],"React Hook React.useEffect has missing dependencies: 'result' and 'setExportDistAnual'. Either include them or remove the dependency array. If 'setExportDistAnual' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["414"],"React Hook React.useEffect has missing dependencies: 'fetchingGrupo', 'grupo.data.abrv', 'result', and 'setExportDistAnualGrupo'. Either include them or remove the dependency array. If 'setExportDistAnualGrupo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["415"],"no-global-assign","no-unsafe-negation",{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},"Update the dependencies array to be: [isAuthenticated, user.email]",{"range":"476","text":"477"},"Update the dependencies array to be: [getAccessTokenSilently]",{"range":"478","text":"479"},"Update the dependencies array to be: [configs.data.pedido_acabado, configs.data.saldo_th, isFetching]",{"range":"480","text":"481"},"Update the dependencies array to be: [fetchingPedidos, fetchingEmpresas, pedidos]",{"range":"482","text":"483"},"Update the dependencies array to be: [fetchingPedidosAnual, pedidosAnual]",{"range":"484","text":"485"},"Update the dependencies array to be: [date, grupos.data, id, isLoading, pedido.data.artigos, pedido.data.data_pedido, pedido.data.data_pedido_formated, pedido.data.day, pedido.data.grupo, pedido.data.grupo_abrv, pedido.data.grupo_id, pedido.data.mounth, pedido.data.notas, pedido.data.proposta, pedido.data.remetentes, pedido.data.responsavel, pedido.data.rubrica, pedido.data.valor_total, pedido.data.year, today]",{"range":"486","text":"487"},"Update the dependencies array to be: [empresas.data, fetchingEmpresas, id, pedido.data.cabimento, pedido.data.empresa, pedido.data.ne, pedido.data.ne_id, setEmpresasList, setFetchEmpresas, setSubmitData, submitData]",{"range":"488","text":"489"},"Update the dependencies array to be: [performSearch, refetch]",{"range":"490","text":"491"},"Update the dependencies array to be: [articles.data, isFetching, setArticlesResult, setPerformSearch]",{"range":"492","text":"493"},"Update the dependencies array to be: [artigos.data, isFetching]",{"range":"494","text":"495"},"Update the dependencies array to be: [isFetching, pedidos, setPedidosList]",{"range":"496","text":"497"},"Update the dependencies array to be: [isFetching, refetch, setDeletePedido, setOpenDelete]",{"range":"498","text":"499"},"Update the dependencies array to be: [distAnual.data, grupos.data, isLoading]",{"range":"500","text":"501"},"Update the dependencies array to be: [grupo.data.abrv, grupo.data.color, grupo.data.membros, grupo.data.name, id, isFetching]",{"range":"502","text":"503"},"Update the dependencies array to be: [isFetching, result, setDeleteGrupo, setDeleteResult]",{"range":"504","text":"505"},"Update the dependencies array to be: [isFetching, membros.data, selectedYear]",{"range":"506","text":"507"},"Update the dependencies array to be: [isFetching, fetchingNES, id, submitData, empresa.data]",{"range":"508","text":"509"},"Update the dependencies array to be: [isFetching, refetchFaturas, setAddFat, setSubmitFatura, setTempFatura]",{"range":"510","text":"511"},"Update the dependencies array to be: [isFetching, refetch, setDeleteFatura, setOpenDelete]",{"range":"512","text":"513"},"Update the dependencies array to be: [isFetching, refetch, setDeleteNE, setOpenDelete]",{"range":"514","text":"515"},"Update the dependencies array to be: [isFetching, refetch, setAddNe, setSubmitAddNE, setTempNE]",{"range":"516","text":"517"},"Update the dependencies array to be: [isFetching, refetch, setDeleteEmpresa, setOpenDelete]",{"range":"518","text":"519"},"Update the dependencies array to be: [isFetching, pedidoID, refecth, result, setFazerPedido, setIsRefetch]",{"range":"520","text":"521"},"Update the dependencies array to be: [isFetching, openArtigoChegadaForm, refetch, setChegadaArtigosState, setRefetch]",{"range":"522","text":"523"},"Update the dependencies array to be: [isFetching, refetch, setChangeArtigoFaturado, setRefetch]",{"range":"524","text":"525"},"Update the dependencies array to be: [articlesMainPage, artigo.code, artigo.name, isFetching, refetch, setAddArtigoToDB, setShowAddArtigoForm, setTempArticle, tempArticle]",{"range":"526","text":"527"},"Update the dependencies array to be: [isFetching, refetch, setDeleteArtigo, setOpenDelete]",{"range":"528","text":"529"},"Update the dependencies array to be: [isFetching, setOpenSnackbar, setSaveConfigs]",{"range":"530","text":"531"},"Update the dependencies array to be: [isFetching, result, setExportDistAnual]",{"range":"532","text":"533"},"Update the dependencies array to be: [fetchingGrupo, grupo.data.abrv, isFetching, result, setExportDistAnualGrupo]",{"range":"534","text":"535"},[1377,1394],"[isAuthenticated, user.email]",[1770,1772],"[getAccessTokenSilently]",[1876,1888],"[configs.data.pedido_acabado, configs.data.saldo_th, isFetching]",[3730,3764],"[fetchingPedidos, fetchingEmpresas, pedidos]",[1107,1129],"[fetchingPedidosAnual, pedidosAnual]",[7570,7581],"[date, grupos.data, id, isLoading, pedido.data.artigos, pedido.data.data_pedido, pedido.data.data_pedido_formated, pedido.data.day, pedido.data.grupo, pedido.data.grupo_abrv, pedido.data.grupo_id, pedido.data.mounth, pedido.data.notas, pedido.data.proposta, pedido.data.remetentes, pedido.data.responsavel, pedido.data.rubrica, pedido.data.valor_total, pedido.data.year, today]",[45168,45186],"[empresas.data, fetchingEmpresas, id, pedido.data.cabimento, pedido.data.empresa, pedido.data.ne, pedido.data.ne_id, setEmpresasList, setFetchEmpresas, setSubmitData, submitData]",[397,412],"[performSearch, refetch]",[572,584],"[articles.data, isFetching, setArticlesResult, setPerformSearch]",[1788,1800],"[artigos.data, isFetching]",[746,758],"[isFetching, pedidos, setPedidosList]",[499,511],"[isFetching, refetch, setDeletePedido, setOpenDelete]",[2965,2976],"[distAnual.data, grupos.data, isLoading]",[2693,2705],"[grupo.data.abrv, grupo.data.color, grupo.data.membros, grupo.data.name, id, isFetching]",[502,514],"[isFetching, result, setDeleteGrupo, setDeleteResult]",[1456,1468],"[isFetching, membros.data, selectedYear]",[2602,2627],"[isFetching, fetchingNES, id, submitData, empresa.data]",[691,703],"[isFetching, refetchFaturas, setAddFat, setSubmitFatura, setTempFatura]",[488,500],"[isFetching, refetch, setDeleteFatura, setOpenDelete]",[471,483],"[isFetching, refetch, setDeleteNE, setOpenDelete]",[989,1001],"[isFetching, refetch, setAddNe, setSubmitAddNE, setTempNE]",[493,505],"[isFetching, refetch, setDeleteEmpresa, setOpenDelete]",[550,562],"[isFetching, pedidoID, refecth, result, setFazerPedido, setIsRefetch]",[640,652],"[isFetching, openArtigoChegadaForm, refetch, setChegadaArtigosState, setRefetch]",[566,578],"[isFetching, refetch, setChangeArtigoFaturado, setRefetch]",[949,961],"[articlesMainPage, artigo.code, artigo.name, isFetching, refetch, setAddArtigoToDB, setShowAddArtigoForm, setTempArticle, tempArticle]",[464,476],"[isFetching, refetch, setDeleteArtigo, setOpenDelete]",[461,473],"[isFetching, setOpenSnackbar, setSaveConfigs]",[518,530],"[isFetching, result, setExportDistAnual]",[676,688],"[fetchingGrupo, grupo.data.abrv, isFetching, result, setExportDistAnualGrupo]"]