[{"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\index.js":"1","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\App.js":"2","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\reportWebVitals.js":"3","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Login\\Login.jsx":"4","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Admin.jsx":"5","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Domain\\useCases.jsx":"6","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Nav.jsx":"7","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\SwitchComponent.jsx":"8","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Footer.jsx":"9","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\MountTransition.jsx":"10","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\Dashboard.jsx":"11","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\SaldosPage.jsx":"12","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\PedidosPage.jsx":"13","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\Loading.jsx":"14","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\PedidosRepository.jsx":"15","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\FornecedoresRepository.jsx":"16","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\AnualRequestesComponent.jsx":"17","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\StatsComponent.jsx":"18","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\EmpresasComponent.jsx":"19","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\SearchPedidosComponent.jsx":"20","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\PedidosForm.jsx":"21","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\FormComponent.jsx":"22","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\RubricasComponent.jsx":"23","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\GruposRepository.jsx":"24","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\ArtigosRepository.jsx":"25","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SearchArticle.jsx":"26","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SubmitForm.jsx":"27","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\RubricasComponent.jsx":"28","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\FaturasComponent.jsx":"29","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\ArtigosPage\\ArtigosComponent.jsx":"30","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\PerformSearch.jsx":"31","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\DeletePedidoComponent.jsx":"32","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\GerirGruposPage.jsx":"33","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\AddGroup\\AddGroup.jsx":"34","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\AddGroup\\SubmitForm.jsx":"35","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DeleteGrupoComponent.jsx":"36","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\MembersComponent.jsx":"37"},{"size":780,"mtime":1611254711297,"results":"38","hashOfConfig":"39"},{"size":1135,"mtime":1611255098984,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":2216,"mtime":1611669610299,"results":"42","hashOfConfig":"39"},{"size":4473,"mtime":1611674605075,"results":"43","hashOfConfig":"39"},{"size":11807,"mtime":1611743326660,"results":"44","hashOfConfig":"39"},{"size":2080,"mtime":1611311971701,"results":"45","hashOfConfig":"39"},{"size":2704,"mtime":1611675790753,"results":"46","hashOfConfig":"39"},{"size":143,"mtime":1611257132553,"results":"47","hashOfConfig":"39"},{"size":463,"mtime":1611255907615,"results":"48","hashOfConfig":"39"},{"size":439,"mtime":1611345540598,"results":"49","hashOfConfig":"39"},{"size":6254,"mtime":1611526120821,"results":"50","hashOfConfig":"39"},{"size":23647,"mtime":1611700142717,"results":"51","hashOfConfig":"39"},{"size":411,"mtime":1598270308642,"results":"52","hashOfConfig":"39"},{"size":4834,"mtime":1611582967071,"results":"53","hashOfConfig":"39"},{"size":2504,"mtime":1611590016513,"results":"54","hashOfConfig":"39"},{"size":4673,"mtime":1611588349874,"results":"55","hashOfConfig":"39"},{"size":6571,"mtime":1611346537245,"results":"56","hashOfConfig":"39"},{"size":8275,"mtime":1611401148616,"results":"57","hashOfConfig":"39"},{"size":3315,"mtime":1611576815727,"results":"58","hashOfConfig":"39"},{"size":25755,"mtime":1611697858145,"results":"59","hashOfConfig":"39"},{"size":502,"mtime":1611419947257,"results":"60","hashOfConfig":"39"},{"size":2589,"mtime":1611688351302,"results":"61","hashOfConfig":"39"},{"size":2705,"mtime":1611743326659,"results":"62","hashOfConfig":"39"},{"size":904,"mtime":1611437231378,"results":"63","hashOfConfig":"39"},{"size":751,"mtime":1611441651857,"results":"64","hashOfConfig":"39"},{"size":905,"mtime":1611582967068,"results":"65","hashOfConfig":"39"},{"size":3756,"mtime":1611526058837,"results":"66","hashOfConfig":"39"},{"size":2579,"mtime":1611526058838,"results":"67","hashOfConfig":"39"},{"size":2684,"mtime":1611572549989,"results":"68","hashOfConfig":"39"},{"size":1577,"mtime":1611587813359,"results":"69","hashOfConfig":"39"},{"size":541,"mtime":1611699923101,"results":"70","hashOfConfig":"39"},{"size":9676,"mtime":1611744549227,"results":"71","hashOfConfig":"39"},{"size":7668,"mtime":1611681585416,"results":"72","hashOfConfig":"39"},{"size":963,"mtime":1611679272646,"results":"73","hashOfConfig":"39"},{"size":1048,"mtime":1611683107021,"results":"74","hashOfConfig":"39"},{"size":5602,"mtime":1611744576976,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"c7kid4",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\index.js",[],["159","160"],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\App.js",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\reportWebVitals.js",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Login\\Login.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Admin.jsx",["161"],"import React from 'react'\r\nimport { Link, BrowserRouter} from 'react-router-dom'\r\nimport { createBrowserHistory } from 'history'\r\nimport loadable from '@loadable/component'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport EuroIcon from '@material-ui/icons/Euro';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport { Typography, Drawer,Divider, IconButton } from '@material-ui/core';\r\nimport {useAuth0} from \"@auth0/auth0-react\"\r\nimport {useSetAccessToken} from \"../../Domain/useCases\"\r\nimport { AnimatePresence } from 'framer-motion'\r\nimport SwitchComponent from \"./SwitchComponent\"\r\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\r\n\r\nconst appBarHeight = 65\r\nconst Nav = loadable(() => import('.//Nav'))\r\nconst Footer = loadable(() => import('./Footer'))\r\n\r\nconst Admin = () => {\r\n    const [hideMenu, setHideMenu] = React.useState(true) \r\n    const closeMenu = ()=> setHideMenu(true)\r\n    const { getAccessTokenSilently } = useAuth0();\r\n    const [accessToken, setAccessToken] = React.useState(null) \r\n    const switchComponent = <SwitchComponent />\r\n    const history = React.useMemo(() => {\r\n        return createBrowserHistory()\r\n      }, [])\r\n   \r\n      React.useEffect(() => {\r\n        return history.listen(()=>{\r\n          window.scrollTo(0,0)\r\n        })  \r\n      }, [ history])\r\n\r\n      React.useEffect(()=>{\r\n        const setAccessTokenFun = async () => {        \r\n            try {\r\n                const access_token = await getAccessTokenSilently();\r\n                setAccessToken(access_token)\r\n            } catch (e) {\r\n              console.log(e.message);\r\n            }\r\n          };\r\n          setAccessTokenFun()\r\n     }, [])\r\n     \r\n     useSetAccessToken(accessToken) \r\n     \r\n    return (\r\n        <BrowserRouter history={history}>\r\n            <Drawer\r\n                variant=\"temporary\"\r\n                anchor=\"left\"\r\n                open={!hideMenu}\r\n                className=\"drawerContainer\">\r\n                    <div className=\"drawerHeader\">\r\n                        <Typography variant=\"h6\">Gestão de Pedidos</Typography>\r\n                        <IconButton onClick={closeMenu}>\r\n                            <ArrowBackIcon/>\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className=\"navListContainer\">\r\n                        <ul>\r\n                            <li onClick={closeMenu}>\r\n                                <Link to=\"/dashboard\">\r\n                                    <DashboardIcon/>\r\n                                     Resumo\r\n                                </Link>\r\n                            </li>\r\n                            <li onClick={closeMenu}>\r\n                                <Link to=\"/pedidos\">\r\n                                    <LocalShippingIcon/>\r\n                                      Pedidos de Encomendas\r\n                                </Link>\r\n                            </li>\r\n                            <li onClick={closeMenu}>\r\n                                <Link to=\"/gerirGrupos\">\r\n                                    <EuroIcon/>\r\n                                      Grupos de Investigação\r\n                                </Link>\r\n                            </li>\r\n                            <li onClick={closeMenu}>\r\n                                <Link to=\"/saldo\">\r\n                                    <CreditCardIcon/>\r\n                                      Saldo Empresarial\r\n                                </Link>\r\n                            </li>\r\n                            <li onClick={closeMenu}>\r\n                                <Link to=\"/artigos\">\r\n                                    <AllInboxIcon/>\r\n                                      Gestão de Artigos\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n            </Drawer>\r\n            <Nav hideMenu={hideMenu} setHideMenu={setHideMenu} height={appBarHeight}/>\r\n            <main  style={{marginTop: appBarHeight}}>\r\n              <AnimatePresence exitBeforeEnter={true} initial={false}>\r\n                {switchComponent}\r\n              </AnimatePresence>\r\n            </main>\r\n            <Footer />\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\nexport default Admin","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Domain\\useCases.jsx",["162"],"import { useQuery} from 'react-query'\r\nimport { Container } from 'typedi'\r\nimport Pedidos from \"../Services/PedidosRepository\"\r\nimport Fornecedores from \"../Services/FornecedoresRepository\"\r\nimport Grupos from \"../Services/GruposRepository\"\r\nimport Artigos from \"../Services/ArtigosRepository\"\r\n\r\nlet accessToken \r\n\r\nexport const useSetAccessToken =  at => accessToken = at\r\n\r\nexport const useGetNumPedidos = () =>{\r\n    const pedidos = Container.get(Pedidos)\r\n    return useQuery({\r\n        queryKey: ['get_num_pedidos'],\r\n        queryFn: async () => {\r\n            const info =  await pedidos.getNumPedidos()\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const useQueryPedidos = () =>{\r\n    const pedidos = Container.get(Pedidos)\r\n    return useQuery({\r\n        queryKey: ['query_pedidos'],\r\n        queryFn: async () => {\r\n            const info =  await pedidos.queryPedidos()\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\nexport const useGetPedidosAnual = () =>{\r\n    const pedidos = Container.get(Pedidos)\r\n    return useQuery({\r\n        queryKey: ['get_pedidos_anual'],\r\n        queryFn: async () => {\r\n            const info =  await pedidos.getPedidosAnual()\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\nexport const useGetPedidosNaoEncomendados = () =>{\r\n    const pedidos = Container.get(Pedidos)\r\n    return useQuery({\r\n        queryKey: ['get_pedidos_nao_encomendados'],\r\n        queryFn: async () => {\r\n            const info =  await pedidos.getPedidosNaoEncomendados()\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\nexport const useGetPedidosAtrasados = () =>{\r\n    const pedidos = Container.get(Pedidos)\r\n    return useQuery({\r\n        queryKey: ['get_pedidos_atrasados'],\r\n        queryFn: async () => {\r\n            const info =  await pedidos.getPedidosAtrasados()\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\n\r\nexport const useGetFornecedoresStats = () =>{\r\n    const fornecedores = Container.get(Fornecedores)\r\n    return useQuery({\r\n        queryKey: ['get_fornecedores_stats'],\r\n        queryFn: async () => {\r\n            const info =  await fornecedores.getFornecedoresStats()\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const useGetPedidos = () =>{\r\n    const pedidos = Container.get(Pedidos)\r\n    return useQuery({\r\n        queryKey: ['get_pedidos'],\r\n        queryFn: async () => {\r\n            const info =  await pedidos.getPedidos()\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\n\r\nexport const useGetGrupos = () =>{\r\n    const grupos = Container.get(Grupos)\r\n    return useQuery({\r\n        queryKey: ['get_grupos'],\r\n        queryFn: async () => {\r\n            const info =  await grupos.getGrupos()\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\n\r\nexport const useGetFornecedores = () =>{\r\n    const fornecedores = Container.get(Fornecedores)\r\n    return useQuery({\r\n        queryKey: ['get_fornecedores'],\r\n        queryFn: async () => {\r\n            const info =  await fornecedores.getFornecedores()\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\n\r\nexport const useGetArticle = term =>{\r\n    const artigos = Container.get(Artigos)\r\n    return useQuery({\r\n        queryKey: ['get_article'],\r\n        queryFn: async () => {\r\n            const info =  await artigos.getArticle(term)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\n\r\nexport const useSendPedidos = data =>{\r\n    const pedidos = Container.get(Pedidos)\r\n    return useQuery({\r\n        queryKey: ['send_pedido'],\r\n        queryFn: async () => {\r\n            const info =  await pedidos.sendPedidos(data)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\n\r\nexport const useGetDist = () =>{\r\n    const grupos = Container.get(Grupos)\r\n    return useQuery({\r\n        queryKey: ['get_dist'],\r\n        queryFn: async () => {\r\n            const info =  await grupos.getDist()\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\n\r\nexport const useGetRubricasByEmppresa = (empresa) =>{\r\n    const fornecedores = Container.get(Fornecedores)\r\n    return useQuery({\r\n        queryKey: ['get_rub_by_empresa'],\r\n        queryFn: async () => {\r\n            const info =  await fornecedores.getRubricasByEmpresa(empresa)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          cacheTime: 0\r\n        }\r\n    })\r\n}\r\n\r\nexport const useGetEmpresasByRubrica = (rubrica) =>{\r\n    const fornecedores = Container.get(Fornecedores)\r\n    return useQuery({\r\n        queryKey: ['get_emp_by_rub'],\r\n        queryFn: async () => {\r\n            const info =  await fornecedores.getEmpresasByRubrica(rubrica)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          cacheTime: 0\r\n        }\r\n    })\r\n}\r\n\r\nexport const useGetFaturasByEmppresa = (empresa) =>{\r\n    const fornecedores = Container.get(Fornecedores)\r\n    return useQuery({\r\n        queryKey: ['get_fat_by_empresa'],\r\n        queryFn: async () => {\r\n            const info =  await fornecedores.getFaturasByEmpresa(empresa)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\n\r\nexport const useGetArtigos = () =>{\r\n    const artigos = Container.get(Artigos)\r\n    return useQuery({\r\n        queryKey: ['get_articles'],\r\n        queryFn: async () => {\r\n            const info =  await artigos.fetchArticles()\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n        }\r\n    })\r\n}\r\n\r\nexport const useSearchPedidos = (word, field) =>{\r\n    const pedidos = Container.get(Pedidos)\r\n    return useQuery({\r\n        queryKey: ['search_pedidos'],\r\n        queryFn: async () => {\r\n            const info =  await pedidos.searchPedidos(word, field)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          cacheTime: 0\r\n        }\r\n    })\r\n}\r\n\r\nexport const useGetPedidoByID = (id) =>{\r\n    const pedidos = Container.get(Pedidos)\r\n    return useQuery({\r\n        queryKey: ['get_pedido_by_id'],\r\n        queryFn: async () => {\r\n            const info =  await pedidos.getPedidoById(id)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          cacheTime: 0\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEditPedido = (data, id) =>{\r\n    const pedidos = Container.get(Pedidos)\r\n    return useQuery({\r\n        queryKey: ['edit_pedido'],\r\n        queryFn: async () => {\r\n            const info =  await pedidos.editPedido(data, id)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          cacheTime: 0\r\n        }\r\n    })\r\n}\r\n\r\nexport const useDeletePedido = (id) =>{\r\n    const pedidos = Container.get(Pedidos)\r\n    return useQuery({\r\n        queryKey: ['delete_pedido'],\r\n        queryFn: async () => {\r\n            const info =  await pedidos.deletePedido(id)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          cacheTime: 0\r\n        }\r\n    })\r\n}\r\n\r\nexport const useNovoGrupo = (grupo) =>{\r\n    const grupos = Container.get(Grupos)\r\n    return useQuery({\r\n        queryKey: ['novo_grupo'],\r\n        queryFn: async () => {\r\n            const info =  await grupos.novoGrupo(grupo)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          cacheTime: 0\r\n        }\r\n    })\r\n}\r\n\r\nexport const useGetGrupoByID = (id) =>{\r\n    const grupos = Container.get(Grupos)\r\n    return useQuery({\r\n        queryKey: ['grupo_by_id'],\r\n        queryFn: async () => {\r\n            const info =  await grupos.getGrupoById(id)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          cacheTime: 0\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEditGrupo = (id) =>{\r\n    const grupos = Container.get(Grupos)\r\n    return useQuery({\r\n        queryKey: ['edit_grupo'],\r\n        queryFn: async () => {\r\n            const info =  await grupos.editGrupo(id)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          cacheTime: 0\r\n        }\r\n    })\r\n}\r\n\r\nexport const useDeleteGrupo = (id) =>{\r\n    const grupos = Container.get(Grupos)\r\n    return useQuery({\r\n        queryKey: ['delete_grupo'],\r\n        queryFn: async () => {\r\n            const info =  await grupos.deleteGrupo(id)\r\n            return info\r\n        },\r\n        config: { \r\n          refetchOnWindowFocus: false,\r\n          refetchInterval: false,\r\n          refetchIntervalInBackground: false,\r\n          cacheTime: 0\r\n        }\r\n    })\r\n}","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Nav.jsx",["163"],"import React from 'react'\r\nimport {AppBar, Toolbar, Typography,Menu, MenuItem ,Button} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Avatar} from \"@material-ui/core\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Nav = (props) => {\r\n    const { logout, user} = useAuth0();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n    return (\r\n        <AppBar className={props.hideMenu? \"navContainer\": \"navContainer openMenuNav\"} color=\"inherit\" height={props.height} position=\"fixed\">\r\n        <Toolbar className=\"contentContainer\">\r\n            <div className=\"iconContainer\">\r\n                <IconButton onClick={()=>props.setHideMenu(false)} className={!props.hideMenu? \"hide\": \"\"}>\r\n                    <MenuIcon  className=\"openMenu\" />\r\n                </IconButton>   \r\n                <Typography className={!props.hideMenu? \"titleText hide\": \"titleText\"}> \r\n                    <Link to=\"/\">\r\n                        Gestão de Pedidos\r\n                    </Link>\r\n                </Typography>\r\n            </div>\r\n            <div className=\"navAccountContainer\">\r\n                <Avatar style={{marginLeft: 20}}onClick={handleClick} alt=\"avatar\" src={user.picture} />\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                    className=\"navMenuContainer\"\r\n                >\r\n                    <MenuItem component={Link} to=\"/settings\" onClick={handleClose}>Configurações</MenuItem>\r\n                    <MenuItem onClick={()=>logout()}>Logout</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        </Toolbar>\r\n    </AppBar>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\SwitchComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Footer.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\MountTransition.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\Dashboard.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\SaldosPage.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\PedidosPage.jsx",["164"],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\Loading.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\PedidosRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\FornecedoresRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\AnualRequestesComponent.jsx",["165","166"],"import React from 'react'\r\nimport {useGetPedidosAnual} from \"../../Domain/useCases\"\r\nimport {Bar} from \"react-chartjs-2\"\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { Typography, Paper} from '@material-ui/core'\r\n\r\nconst AnualRequestesComponent = () => {\r\n    const [datasets, setDatasets] = React.useState(null)\r\n    const {\r\n        data: pedidosAnual, \r\n        isFetching: fetchingPedidosAnual\r\n    } = useGetPedidosAnual()\r\n   \r\n    const isLoading = React.useMemo(() => {\r\n        return  fetchingPedidosAnual\r\n    }, [fetchingPedidosAnual])\r\n\r\n    React.useEffect(()=>{\r\n        let tempDatasets=[]\r\n        if(!fetchingPedidosAnual){\r\n            Object.keys(pedidosAnual).forEach(group=>{\r\n                tempDatasets.push( {\r\n                    label: group, \r\n                    data:  Object.values(pedidosAnual[group].data), \r\n                    backgroundColor: pedidosAnual[group].color,\r\n                    fill: true,\r\n                    borderColor: pedidosAnual[group].color\r\n                })\r\n            })\r\n            setDatasets(tempDatasets)\r\n        }\r\n    }, [fetchingPedidosAnual])\r\n    return (\r\n        <>\r\n            {fetchingPedidosAnual && <LoadingComponent/>}\r\n            {!fetchingPedidosAnual && <Paper style={{\r\n                width: \"100%\", \r\n                background: \"white\", \r\n                padding: 20\r\n            }}>\r\n                {Object.keys(pedidosAnual).length === 0 && <Typography>Dados não disponíveis. Ainda não foi registado nenhum pedido.</Typography>   }\r\n                {Object.keys(pedidosAnual).length > 0 && <Bar\r\n                    width={100}\r\n                    height={25}\r\n                    data={{\r\n                        labels: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"], \r\n                        datasets: datasets\r\n                    }}\r\n                    options={{\r\n                        tooltips:{\r\n                            enabled: true\r\n                        },\r\n                        elements: {\r\n                            point:{\r\n                                radius: 0\r\n                            }\r\n                        },\r\n                        responsive: true, \r\n                        \r\n                        chartArea: {\r\n                            backgroundColor: 'rgba(251, 85, 85, 0.4)'\r\n                        }, \r\n                        maintainAspectRatio: true,\r\n                        legend:{\r\n                            display: false, \r\n                            position: \"top\",\r\n                            align:\"center\",\r\n                            labels: {\r\n                                fontColor: \"white\",\r\n                            }\r\n                            \r\n                        },\r\n                       \r\n                        scales:{\r\n                            xAxes: [{\r\n                                display: true,\r\n                                gridLines: {\r\n                                    display: true,\r\n                                    color: \"#ecf0f1\"\r\n                                },\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: `Ano de ${new Date().getFullYear()}`, \r\n                                    fontColor: \"#666\"\r\n                                },\r\n                                ticks:{\r\n                                    fontColor: \"#666\"\r\n                                }\r\n                            }],\r\n                            yAxes: [{\r\n                                display: true,\r\n                                gridLines: {\r\n                                    display: true,\r\n                                    color: \"#ecf0f1\"\r\n                                },\r\n                                stacked: true,\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: 'Nº de Pedidos', \r\n                                    fontColor: \"#666\"\r\n                                },\r\n                                ticks:{\r\n                                    fontColor: \"#666\"\r\n                                } \r\n                            }]\r\n                        }\r\n                    }}\r\n                />}\r\n                \r\n            </Paper>}\r\n        </>\r\n    )\r\n}\r\nexport default AnualRequestesComponent\r\n\r\nconst LoadingComponent = ()=>{\r\n    return  <Skeleton variant=\"rect\" width=\"100%\" height={300} />\r\n           \r\n}","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\StatsComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\EmpresasComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\SearchPedidosComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\PedidosForm.jsx",["167","168","169","170"],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\FormComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\RubricasComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\GruposRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\ArtigosRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SearchArticle.jsx",["171","172"],"import React from 'react'\r\nimport {useGetArticle} from \"../../Domain/useCases\"\r\nconst SearchArticle = ({\r\n    term, \r\n    setArticlesResult, \r\n    performSearch, \r\n    setPerformSearch\r\n}) => {\r\n    const {\r\n        data: articles, \r\n        isFetching, \r\n        refetch\r\n    } = useGetArticle(term)\r\n    React.useEffect(()=>{\r\n        if(performSearch){\r\n            refetch()\r\n        }\r\n    },[performSearch])\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching ){\r\n            setArticlesResult(articles.data)\r\n            setPerformSearch(false)\r\n        }\r\n    }, [isFetching])\r\n    return (\r\n        <>\r\n            {/* {performSearch && <CircularProgress size={20} color=\"primary\" />} */}\r\n        </>\r\n    )\r\n}\r\nexport default SearchArticle","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SubmitForm.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\RubricasComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\FaturasComponent.jsx",["173"],"import React from 'react'\r\nimport {useGetFaturasByEmppresa} from \"../../Domain/useCases\"\r\nimport {CircularProgress, Button,Table, TableHead, TableRow, TableBody, TableCell, Typography, Tooltip, IconButton} from \"@material-ui/core\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nconst FaturasComponent = ({empresa}) => {\r\n    const {\r\n        data: faturas, \r\n        isFetching\r\n    } = useGetFaturasByEmppresa(empresa)\r\n\r\n    console.log(faturas)\r\n    return (\r\n        <div className=\"optionsContainer\">\r\n            {isFetching && <CircularProgress size={60} style={{color: \"white\"}} />}\r\n            {!isFetching && <Table size=\"medium\">\r\n                <TableHead> \r\n                    <TableRow>\r\n                        <TableCell >Código da Fatura</TableCell>\r\n                        <TableCell >Data de Emissão</TableCell>\r\n                        <TableCell >Pedido</TableCell>\r\n                        <TableCell >Valor</TableCell>\r\n                        <TableCell >Notas</TableCell>\r\n                        <TableCell></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {faturas.data.map(f => {\r\n                        return (\r\n                        <TableRow>\r\n                            <TableCell  >{f.codigo_fatura}</TableCell>\r\n                            <TableCell >{f.data_emissao.slice(0,11)}</TableCell>\r\n                            <TableCell >\r\n                                <Button color=\"primary\">ver pedido</Button>\r\n                            </TableCell>\r\n                            <TableCell >{f.valor}</TableCell>\r\n                            <TableCell>\r\n                                <Tooltip title=\"Ver notas\">\r\n                                    <IconButton color=\"primary\">\r\n                                        <CommentIcon/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </TableCell>\r\n                        <TableCell>\r\n                            <Tooltip title=\"Apagar fatura\">\r\n                                <IconButton style={{color: \"#e74c3c\"}}>\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    )})}\r\n                </TableBody>\r\n            </Table>}\r\n        </div>\r\n    )\r\n}\r\nexport default FaturasComponent","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\ArtigosPage\\ArtigosComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\PerformSearch.jsx",["174"],"import React from 'react'\r\nimport {CircularProgress, IconButton, Snackbar } from \"@material-ui/core\"\r\nimport {useSearchPedidos} from \"../../Domain/useCases\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n const PerformSearch = ({\r\n    word,\r\n    field,\r\n    setSubmitSearch,\r\n    setPedidosList, \r\n    refetch\r\n}) => {\r\n    const {\r\n        data: pedidos, \r\n        isFetching\r\n    } = useSearchPedidos(word, field)\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            if(pedidos.data.length > 0){\r\n                setPedidosList(pedidos)\r\n            }else{\r\n                setOpen(true)\r\n            }\r\n        }\r\n    }, [isFetching])\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        } \r\n        setOpen(false);\r\n        setSubmitSearch(false)\r\n    };\r\n\r\n    if(isFetching) return <CircularProgress size={40} />\r\n\r\n    return (<>\r\n        <IconButton onClick={()=>{\r\n            refetch()\r\n            setSubmitSearch(false)\r\n        }}>\r\n        <CloseIcon />\r\n        </IconButton>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"warning\">\r\n            Não foi encontrado nenhum pedido com o termo pesquisado\r\n            </Alert>\r\n      </Snackbar>\r\n    </>\r\n    )\r\n}\r\nexport default PerformSearch\r\n\r\nconst Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\DeletePedidoComponent.jsx",["175"],"import React from 'react'\r\nimport {useDeletePedido} from \"../../Domain/useCases\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\n\r\n const DeletePedidoComponent = ({ \r\n    id,\r\n    setDeleteResult\r\n }) => {\r\n\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useDeletePedido(id)\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setDeleteResult(result)\r\n        }\r\n    }, [isFetching])\r\n    \r\n    if(isFetching) return (<CircularProgress />)\r\n    return <></>\r\n}\r\nexport default DeletePedidoComponent\r\n\r\n","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\GerirGruposPage.jsx",["176"],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\AddGroup\\AddGroup.jsx",["177","178"],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\AddGroup\\SubmitForm.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DeleteGrupoComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\MembersComponent.jsx",["179"],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":47,"column":9,"nodeType":"186","endLine":47,"endColumn":11,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":10,"column":41,"nodeType":"190","messageId":"191","endLine":10,"endColumn":52},{"ruleId":"188","severity":1,"message":"192","line":2,"column":53,"nodeType":"190","messageId":"191","endLine":2,"endColumn":59},{"ruleId":"184","severity":1,"message":"193","line":73,"column":8,"nodeType":"186","endLine":73,"endColumn":25,"suggestions":"194"},{"ruleId":"188","severity":1,"message":"195","line":14,"column":11,"nodeType":"190","messageId":"191","endLine":14,"endColumn":20},{"ruleId":"184","severity":1,"message":"196","line":32,"column":8,"nodeType":"186","endLine":32,"endColumn":30,"suggestions":"197"},{"ruleId":"188","severity":1,"message":"198","line":2,"column":20,"nodeType":"190","messageId":"191","endLine":2,"endColumn":24},{"ruleId":"188","severity":1,"message":"199","line":12,"column":58,"nodeType":"190","messageId":"191","endLine":12,"endColumn":82},{"ruleId":"184","severity":1,"message":"200","line":165,"column":8,"nodeType":"186","endLine":165,"endColumn":19,"suggestions":"201"},{"ruleId":"184","severity":1,"message":"202","line":639,"column":7,"nodeType":"186","endLine":639,"endColumn":19,"suggestions":"203"},{"ruleId":"184","severity":1,"message":"204","line":18,"column":7,"nodeType":"186","endLine":18,"endColumn":22,"suggestions":"205"},{"ruleId":"184","severity":1,"message":"206","line":25,"column":8,"nodeType":"186","endLine":25,"endColumn":20,"suggestions":"207"},{"ruleId":"188","severity":1,"message":"208","line":3,"column":84,"nodeType":"190","messageId":"191","endLine":3,"endColumn":94},{"ruleId":"184","severity":1,"message":"209","line":28,"column":8,"nodeType":"186","endLine":28,"endColumn":20,"suggestions":"210"},{"ruleId":"188","severity":1,"message":"211","line":10,"column":15,"nodeType":"190","messageId":"191","endLine":10,"endColumn":21},{"ruleId":"184","severity":1,"message":"212","line":63,"column":8,"nodeType":"186","endLine":63,"endColumn":19,"suggestions":"213"},{"ruleId":"188","severity":1,"message":"198","line":2,"column":20,"nodeType":"190","messageId":"191","endLine":2,"endColumn":24},{"ruleId":"184","severity":1,"message":"214","line":84,"column":8,"nodeType":"186","endLine":84,"endColumn":20,"suggestions":"215"},{"ruleId":"184","severity":1,"message":"216","line":39,"column":8,"nodeType":"186","endLine":39,"endColumn":20,"suggestions":"217"},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.","ArrayExpression",["220"],"no-unused-vars","'accessToken' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","React Hook React.useEffect has a missing dependency: 'pedidos'. Either include it or remove the dependency array.",["221"],"'isLoading' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'pedidosAnual'. Either include it or remove the dependency array.",["222"],"'Link' is defined but never used.","'useGetRubricasByEmppresa' is defined but never used.","React Hook React.useEffect has missing dependencies: 'date', 'empresasList', 'grupos.data', 'id', 'pedido.cabimento', 'pedido.data.artigos', 'pedido.data.data_pedido', 'pedido.data.data_pedido_formated', 'pedido.data.day', 'pedido.data.empresa', 'pedido.data.faturas', 'pedido.data.grupo', 'pedido.data.grupo_abrv', 'pedido.data.grupo_id', 'pedido.data.mounth', 'pedido.data.ne', 'pedido.data.notas', 'pedido.data.proposta', 'pedido.data.remetente', 'pedido.data.responsavel', 'pedido.data.rubrica', 'pedido.data.valor_total', 'pedido.data.year', and 'today'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSubmitData' needs the current value of 'empresasList'.",["223"],"React Hook React.useEffect has missing dependencies: 'empresas.data', 'setEmpresasList', 'setFetchEmpresas', 'setSubmitData', and 'submitData'. Either include them or remove the dependency array. If 'setSubmitData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["224"],"React Hook React.useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["225"],"React Hook React.useEffect has missing dependencies: 'articles.data', 'setArticlesResult', and 'setPerformSearch'. Either include them or remove the dependency array. If 'setArticlesResult' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["226"],"'Typography' is defined but never used.","React Hook React.useEffect has missing dependencies: 'pedidos' and 'setPedidosList'. Either include them or remove the dependency array. If 'setPedidosList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["227"],"'result' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'grupos.data'. Either include it or remove the dependency array.",["228"],"React Hook React.useEffect has missing dependencies: 'grupo.data.abrv', 'grupo.data.color', 'grupo.data.membros', 'grupo.data.name', and 'id'. Either include them or remove the dependency array.",["229"],"React Hook React.useEffect has a missing dependency: 'membros.data'. Either include it or remove the dependency array.",["230"],"no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},"Update the dependencies array to be: [getAccessTokenSilently]",{"range":"253","text":"254"},"Update the dependencies array to be: [fetchingPedidos, pedidos]",{"range":"255","text":"256"},"Update the dependencies array to be: [fetchingPedidosAnual, pedidosAnual]",{"range":"257","text":"258"},"Update the dependencies array to be: [date, empresasList, grupos.data, id, isLoading, pedido.cabimento, pedido.data.artigos, pedido.data.data_pedido, pedido.data.data_pedido_formated, pedido.data.day, pedido.data.empresa, pedido.data.faturas, pedido.data.grupo, pedido.data.grupo_abrv, pedido.data.grupo_id, pedido.data.mounth, pedido.data.ne, pedido.data.notas, pedido.data.proposta, pedido.data.remetente, pedido.data.responsavel, pedido.data.rubrica, pedido.data.valor_total, pedido.data.year, today]",{"range":"259","text":"260"},"Update the dependencies array to be: [empresas.data, isFetching, setEmpresasList, setFetchEmpresas, setSubmitData, submitData]",{"range":"261","text":"262"},"Update the dependencies array to be: [performSearch, refetch]",{"range":"263","text":"264"},"Update the dependencies array to be: [articles.data, isFetching, setArticlesResult, setPerformSearch]",{"range":"265","text":"266"},"Update the dependencies array to be: [isFetching, pedidos, setPedidosList]",{"range":"267","text":"268"},"Update the dependencies array to be: [grupos.data, isLoading]",{"range":"269","text":"270"},"Update the dependencies array to be: [grupo.data.abrv, grupo.data.color, grupo.data.membros, grupo.data.name, id, isFetching]",{"range":"271","text":"272"},"Update the dependencies array to be: [isFetching, membros.data]",{"range":"273","text":"274"},[1817,1819],"[getAccessTokenSilently]",[2570,2587],"[fetchingPedidos, pedidos]",[1107,1129],"[fetchingPedidosAnual, pedidosAnual]",[6210,6221],"[date, empresasList, grupos.data, id, isLoading, pedido.cabimento, pedido.data.artigos, pedido.data.data_pedido, pedido.data.data_pedido_formated, pedido.data.day, pedido.data.empresa, pedido.data.faturas, pedido.data.grupo, pedido.data.grupo_abrv, pedido.data.grupo_id, pedido.data.mounth, pedido.data.ne, pedido.data.notas, pedido.data.proposta, pedido.data.remetente, pedido.data.responsavel, pedido.data.rubrica, pedido.data.valor_total, pedido.data.year, today]",[25609,25621],"[empresas.data, isFetching, setEmpresasList, setFetchEmpresas, setSubmitData, submitData]",[397,412],"[performSearch, refetch]",[572,584],"[articles.data, isFetching, setArticlesResult, setPerformSearch]",[746,758],"[isFetching, pedidos, setPedidosList]",[2583,2594],"[grupos.data, isLoading]",[2747,2759],"[grupo.data.abrv, grupo.data.color, grupo.data.membros, grupo.data.name, id, isFetching]",[1339,1351],"[isFetching, membros.data]"]