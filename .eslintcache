[{"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\index.js":"1","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\App.js":"2","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\reportWebVitals.js":"3","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Login\\Login.jsx":"4","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Admin.jsx":"5","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Domain\\useCases.jsx":"6","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Nav.jsx":"7","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\SwitchComponent.jsx":"8","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Footer.jsx":"9","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\MountTransition.jsx":"10","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\Dashboard.jsx":"11","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\SaldosPage.jsx":"12","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\PedidosPage.jsx":"13","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\Loading.jsx":"14","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\PedidosRepository.jsx":"15","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\FornecedoresRepository.jsx":"16","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\AnualRequestesComponent.jsx":"17","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\StatsComponent.jsx":"18","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\EmpresasComponent.jsx":"19","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\SearchPedidosComponent.jsx":"20","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\PedidosForm.jsx":"21","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\FormComponent.jsx":"22","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\RubricasComponent.jsx":"23","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\GruposRepository.jsx":"24","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\ArtigosRepository.jsx":"25","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SearchArticle.jsx":"26","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SubmitForm.jsx":"27","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\RubricasComponent.jsx":"28","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\FaturasComponent.jsx":"29","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\ArtigosPage\\ArtigosComponent.jsx":"30","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\PerformSearch.jsx":"31","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\DeletePedidoComponent.jsx":"32","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\GerirGruposPage.jsx":"33","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\AddGroup\\AddGroup.jsx":"34","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\AddGroup\\SubmitForm.jsx":"35","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DeleteGrupoComponent.jsx":"36","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\MembersComponent.jsx":"37","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\EmpresasForm.jsx":"38","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\SubmitForm.jsx":"39","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SubmitFatura.jsx":"40","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\DeleteFatura.jsx":"41","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\GetFaturasPedido.jsx":"42","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\DeleteNES.jsx":"43","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\AddNE.jsx":"44","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\DeleteEmpresa.jsx":"45","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\DownloadPDF.jsx":"46","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\ChangeArtigosStatus.jsx":"47","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\FaturarArtigos.jsx":"48","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\AddArtigo.jsx":"49","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\ArtigosPage\\DeleteArtigo.jsx":"50","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\ConfigsRepository.jsx":"51","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\SaveConfigs.jsx":"52","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Unauth\\Unauth.jsx":"53","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DownloadDistCum.jsx":"54","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DownloadDisGrupo.jsx":"55"},{"size":803,"mtime":1612548455492,"results":"56","hashOfConfig":"57"},{"size":1663,"mtime":1612548455461,"results":"58","hashOfConfig":"57"},{"size":375,"mtime":1612548455492,"results":"59","hashOfConfig":"57"},{"size":2216,"mtime":1612548455476,"results":"60","hashOfConfig":"57"},{"size":4697,"mtime":1612549100651,"results":"61","hashOfConfig":"57"},{"size":27862,"mtime":1612613987867,"results":"62","hashOfConfig":"57"},{"size":6863,"mtime":1612548455461,"results":"63","hashOfConfig":"57"},{"size":3168,"mtime":1612548455461,"results":"64","hashOfConfig":"57"},{"size":143,"mtime":1612548455461,"results":"65","hashOfConfig":"57"},{"size":463,"mtime":1612548455461,"results":"66","hashOfConfig":"57"},{"size":439,"mtime":1612548455476,"results":"67","hashOfConfig":"57"},{"size":8113,"mtime":1612548455476,"results":"68","hashOfConfig":"57"},{"size":29201,"mtime":1612548455476,"results":"69","hashOfConfig":"57"},{"size":411,"mtime":1612548455461,"results":"70","hashOfConfig":"57"},{"size":5925,"mtime":1612548455476,"results":"71","hashOfConfig":"57"},{"size":7210,"mtime":1612548455476,"results":"72","hashOfConfig":"57"},{"size":4673,"mtime":1612548455461,"results":"73","hashOfConfig":"57"},{"size":12739,"mtime":1612548455476,"results":"74","hashOfConfig":"57"},{"size":4962,"mtime":1612548455476,"results":"75","hashOfConfig":"57"},{"size":3315,"mtime":1612548455476,"results":"76","hashOfConfig":"57"},{"size":34094,"mtime":1612548455476,"results":"77","hashOfConfig":"57"},{"size":502,"mtime":1612548455461,"results":"78","hashOfConfig":"57"},{"size":3804,"mtime":1612548455476,"results":"79","hashOfConfig":"57"},{"size":4796,"mtime":1612615878517,"results":"80","hashOfConfig":"57"},{"size":3255,"mtime":1612548455476,"results":"81","hashOfConfig":"57"},{"size":751,"mtime":1612548455476,"results":"82","hashOfConfig":"57"},{"size":884,"mtime":1612548455476,"results":"83","hashOfConfig":"57"},{"size":6068,"mtime":1612548455476,"results":"84","hashOfConfig":"57"},{"size":2924,"mtime":1612548455476,"results":"85","hashOfConfig":"57"},{"size":9622,"mtime":1612548455461,"results":"86","hashOfConfig":"57"},{"size":1577,"mtime":1612548455476,"results":"87","hashOfConfig":"57"},{"size":631,"mtime":1612548455476,"results":"88","hashOfConfig":"57"},{"size":11979,"mtime":1612616062884,"results":"89","hashOfConfig":"57"},{"size":8043,"mtime":1612548455461,"results":"90","hashOfConfig":"57"},{"size":868,"mtime":1612548455461,"results":"91","hashOfConfig":"57"},{"size":632,"mtime":1612548455476,"results":"92","hashOfConfig":"57"},{"size":5686,"mtime":1612548455476,"results":"93","hashOfConfig":"57"},{"size":12491,"mtime":1612548455476,"results":"94","hashOfConfig":"57"},{"size":893,"mtime":1612548455476,"results":"95","hashOfConfig":"57"},{"size":850,"mtime":1612548455476,"results":"96","hashOfConfig":"57"},{"size":667,"mtime":1612548455476,"results":"97","hashOfConfig":"57"},{"size":4209,"mtime":1612548455476,"results":"98","hashOfConfig":"57"},{"size":649,"mtime":1612548455476,"results":"99","hashOfConfig":"57"},{"size":1147,"mtime":1612548455476,"results":"100","hashOfConfig":"57"},{"size":671,"mtime":1612548455476,"results":"101","hashOfConfig":"57"},{"size":725,"mtime":1612612795563,"results":"102","hashOfConfig":"57"},{"size":826,"mtime":1612548455476,"results":"103","hashOfConfig":"57"},{"size":705,"mtime":1612548455476,"results":"104","hashOfConfig":"57"},{"size":1129,"mtime":1612548455476,"results":"105","hashOfConfig":"57"},{"size":631,"mtime":1612548455461,"results":"106","hashOfConfig":"57"},{"size":1120,"mtime":1612548455476,"results":"107","hashOfConfig":"57"},{"size":631,"mtime":1612548455461,"results":"108","hashOfConfig":"57"},{"size":158,"mtime":1612548455476,"results":"109","hashOfConfig":"57"},{"size":672,"mtime":1612613987867,"results":"110","hashOfConfig":"57"},{"size":797,"mtime":1612616273526,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"c7kid4",{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"114"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"114"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"114"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"114"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"114"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"114"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\index.js",[],["249","250"],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\App.js",["251"],"import React from 'react';\r\nimport './Styles/styles.sass';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\r\nimport {CssBaseline} from '@material-ui/core'\r\nimport loadable from '@loadable/component'\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      '\"Work Sans\"',\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: '#21BCE9'\r\n    },\r\n    secondary: {\r\n      main: '#434343'\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 4\r\n  }\r\n})\r\n\r\n\r\nconst LoginPage = loadable(() => import('./Pages/Login/Login'))\r\nconst Admin = loadable(() => import('./Pages/Admin/Admin'))\r\nconst Unauth = loadable(() => import('./Pages/Unauth/Unauth'))\r\n\r\nconst App = () => {\r\n  const {user, isAuthenticated } = useAuth0();\r\n  const [allowed, setAllowed] = React.useState(false)\r\n\r\n  React.useEffect(()=>{\r\n    if (isAuthenticated){\r\n      const emails = process.env.REACT_APP_AUTH0_EMAIL.split(\",\")\r\n      emails.forEach(email=>{\r\n        if(user.email === email){\r\n          setAllowed(true)\r\n          return null\r\n        }\r\n      })\r\n    }\r\n  }, [isAuthenticated])\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n      {!isAuthenticated && <LoginPage/>}\r\n      {isAuthenticated && allowed && <Admin/>}  \r\n      {isAuthenticated && !allowed && <Unauth/>}  \r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\reportWebVitals.js",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Login\\Login.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Admin.jsx",["252"],"import React from 'react'\r\nimport { Link, BrowserRouter} from 'react-router-dom'\r\nimport { createBrowserHistory } from 'history'\r\nimport loadable from '@loadable/component'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport { Typography, Drawer,Divider, IconButton } from '@material-ui/core';\r\nimport {useAuth0} from \"@auth0/auth0-react\"\r\nimport {useSetAccessToken} from \"../../Domain/useCases\"\r\nimport { AnimatePresence } from 'framer-motion'\r\nimport SwitchComponent from \"./SwitchComponent\"\r\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nconst appBarHeight = 65\r\nconst Nav = loadable(() => import('.//Nav'))\r\nconst Footer = loadable(() => import('./Footer'))\r\n\r\nconst Admin = () => {\r\n    const [hideMenu, setHideMenu] = React.useState(true) \r\n    const closeMenu = ()=> setHideMenu(true)\r\n    const { getAccessTokenSilently } = useAuth0();\r\n    const [accessToken, setAccessToken] = React.useState(null) \r\n    const history = React.useMemo(() => {\r\n        return createBrowserHistory()\r\n      }, [])\r\n   \r\n      React.useEffect(() => {\r\n        return history.listen(()=>{\r\n          window.scrollTo(0,0)\r\n        })  \r\n      }, [ history])\r\n\r\n      React.useEffect(()=>{\r\n        const setAccessTokenFun = async () => {        \r\n            try {\r\n                const access_token = await getAccessTokenSilently();\r\n                setAccessToken(access_token)\r\n            } catch (e) {\r\n              console.log(e.message);\r\n            }\r\n          };\r\n          setAccessTokenFun()\r\n     }, [])\r\n     \r\n     useSetAccessToken(accessToken) \r\n     \r\n    return (\r\n        <BrowserRouter history={history}>\r\n            {accessToken && <>\r\n                <Drawer\r\n                    variant=\"temporary\"\r\n                    anchor=\"left\"\r\n                    open={!hideMenu}\r\n                    className=\"drawerContainer\">\r\n                        <div className=\"drawerHeader\">\r\n                            <Typography variant=\"h6\">Gestão de Pedidos</Typography>\r\n                            <IconButton onClick={closeMenu}>\r\n                                <ArrowBackIcon/>\r\n                            </IconButton>\r\n                        </div>\r\n                        <Divider />\r\n                        <div className=\"navListContainer\">\r\n                            <ul>\r\n                                <li onClick={closeMenu}>\r\n                                    <Link to=\"/dashboard\">\r\n                                        <DashboardIcon/>\r\n                                        Resumo\r\n                                    </Link>\r\n                                </li>\r\n                                <li onClick={closeMenu}>\r\n                                    <Link to=\"/pedidos\">\r\n                                        <LocalShippingIcon/>\r\n                                        Pedidos de Encomendas\r\n                                    </Link>\r\n                                </li>\r\n                                <li onClick={closeMenu}>\r\n                                    <Link to=\"/gerirGrupos\">\r\n                                        <GroupIcon/>\r\n                                        Grupos de Investigação\r\n                                    </Link>\r\n                                </li>\r\n                                <li onClick={closeMenu}>\r\n                                    <Link to=\"/empresas\">\r\n                                        <CreditCardIcon/>\r\n                                        Saldo Empresarial\r\n                                    </Link>\r\n                                </li>\r\n                                <li onClick={closeMenu}>\r\n                                    <Link to=\"/artigos\">\r\n                                        <AllInboxIcon/>\r\n                                        Gestão de Artigos\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                </Drawer>\r\n                <Nav hideMenu={hideMenu} setHideMenu={setHideMenu} height={appBarHeight}/>\r\n                <AnimatePresence exitBeforeEnter={true} initial={false}>\r\n                    <main  style={{marginTop: appBarHeight}}>\r\n                        <SwitchComponent />\r\n                    </main>\r\n                </AnimatePresence>\r\n                <Footer />\r\n            </>}\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\nexport default Admin","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Domain\\useCases.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Nav.jsx",["253"],"import React from 'react'\r\nimport {AppBar, Toolbar,Snackbar , Typography,Menu, MenuItem ,Button,  Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, TextField, CircularProgress} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Avatar} from \"@material-ui/core\"\r\nimport { Link } from 'react-router-dom'\r\nimport SaveConfigs from './SaveConfigs';\r\nimport {useGetConfigs} from \"../../Domain/useCases\"\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst Nav = (props) => {\r\n    const { logout, user} = useAuth0();\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [showConfigs, setShowConfigs] = React.useState(false);\r\n    const [saveConfigs, setSaveConfigs] = React.useState(null);\r\n    const [tempConfig, setTempConfig] = React.useState({\r\n        pedido_acabado: 0,\r\n        saldo_th: 0,\r\n    })\r\n\r\n    const {\r\n        data: configs, \r\n        isFetching,\r\n    } = useGetConfigs()\r\n\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpenSnackbar(false);\r\n      };\r\n\r\n    const handleChangeInputConfigs = (e) => {\r\n        setTempConfig({\r\n            ...tempConfig, \r\n            [e.target.id]: e.target.value\r\n        })\r\n      };\r\n  \r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setTempConfig({\r\n                pedido_acabado: configs.data.pedido_acabado/1000/60/60/24,\r\n                saldo_th: configs.data.saldo_th,\r\n            })\r\n        }\r\n    },[isFetching])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={showConfigs} onClose={()=>{\r\n                setShowConfigs(false)\r\n            }} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Preferências</DialogTitle>\r\n                {isFetching && <CircularProgress />}\r\n                {!isFetching && <>\r\n                    <DialogContent>\r\n                        \r\n                        <DialogContentText>\r\n                            Preencha o formulário se quiser alterar as configurações\r\n                        </DialogContentText>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"pedido_acabado\"\r\n                            label=\"Pedido Atrasado\"\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            value={tempConfig.pedido_acabado}\r\n                            onChange={handleChangeInputConfigs}\r\n                            helperText=\"Coloque o nº de dias para que um pedido seja considerado atrasado, após ter sido feito\"\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            id=\"saldo_th\"\r\n                            label=\"Limiar de Saldo Baixo\"\r\n                            fullWidth\r\n                            value={tempConfig.saldo_th}\r\n                            onChange={handleChangeInputConfigs}\r\n                            helperText=\"Coloque o valor monetário a ser considerado para que um empresa seja considerada com baixo saldo disponível\"\r\n\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={()=>{\r\n                            setShowConfigs(false)\r\n                        }}>\r\n                            Cancel\r\n                        </Button>\r\n                        {!saveConfigs && <Button \r\n                        disabled={tempConfig.pedido_acabado=== 0 || tempConfig.saldo_th === 0}\r\n                        onClick={()=>{\r\n                            setSaveConfigs(true)\r\n                        }} color=\"primary\">\r\n                            guardar\r\n                        </Button>}\r\n                        {saveConfigs && <SaveConfigs \r\n                             configs={{\r\n                                 ...tempConfig,\r\n                                 pedido_acabado: tempConfig.pedido_acabado *24*60*60*1000\r\n                             }} \r\n                             setSaveConfigs={setSaveConfigs}\r\n                             setOpenSnackbar={setOpenSnackbar}\r\n                        />}\r\n                    </DialogActions>\r\n                </>}\r\n                \r\n            </Dialog>\r\n            <AppBar className={props.hideMenu? \"navContainer\": \"navContainer openMenuNav\"} color=\"inherit\" height={props.height} position=\"fixed\">\r\n            <Toolbar className=\"contentContainer\">\r\n                <div className=\"iconContainer\">\r\n                    <IconButton onClick={()=>props.setHideMenu(false)} className={!props.hideMenu? \"hide\": \"\"}>\r\n                        <MenuIcon  className=\"openMenu\" />\r\n                    </IconButton>   \r\n                    <Typography className={!props.hideMenu? \"titleText hide\": \"titleText\"}> \r\n                        <Link to=\"/\">\r\n                            Gestão de Pedidos\r\n                        </Link>\r\n                    </Typography>\r\n                </div>\r\n                <div className=\"navAccountContainer\">\r\n                    <Button component={Link} to=\"/pedidos/registo\">registar pedido</Button>\r\n                    <Avatar style={{marginLeft: 20}}onClick={handleClick} alt=\"avatar\" src={user.picture} />\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                        className=\"navMenuContainer\"\r\n                    >\r\n                        <MenuItem component={Link} to=\"/settings\" onClick={()=>{\r\n                            setShowConfigs(true)\r\n                            handleClose()\r\n                        }}>Configurações</MenuItem>\r\n                        <MenuItem onClick={()=>logout()}>Logout</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n            </Toolbar>\r\n            <Snackbar open={openSnackbar} autoHideDuration={4000} onClose={handleCloseSnackbar}>\r\n                <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n                    As configurações foram guardadas com sucesso!\r\n                </Alert>\r\n            </Snackbar>\r\n        </AppBar>\r\n    </>\r\n    )\r\n}\r\n\r\nconst Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\nexport default Nav","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\SwitchComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\Footer.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\MountTransition.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\Dashboard.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\SaldosPage.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\PedidosPage.jsx",["254"],"import React from 'react'\r\nimport Loading from \"../../Components/Loading\"\r\nimport {Link} from \"react-router-dom\"\r\nimport { Paper,\r\n    Button,\r\n    Typography,\r\n    TableContainer,\r\n    Menu, \r\n    MenuItem,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    Tooltip, \r\n    Popover, \r\n    IconButton, \r\n    Collapse,\r\n    DialogTitle,\r\n    Dialog,\r\n    DialogActions, \r\n    DialogContent,\r\n    DialogContentText, \r\n    TextField,\r\n    CircularProgress\r\n} from '@material-ui/core'\r\nimport {\r\n    useGetPedidos,\r\n    getPedidoTemplate,\r\n    useGetFornecedores\r\n} from \"../../Domain/useCases\"\r\nimport SearchComponent from \"./SearchPedidosComponent\"\r\nimport WidgetsIcon from '@material-ui/icons/Widgets';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GestureIcon from '@material-ui/icons/Gesture';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport DeletePedido from \"./DeletePedidoComponent\"\r\nimport GetFaturasPedido from \"./GetFaturasPedido\"\r\nimport DownloadPDF from \"./DownloadPDF\"\r\nimport ChangeArtigosState from \"./ChangeArtigosStatus\"\r\nimport FaturarArtigos from \"./FaturarArtigos\"\r\nimport BuildIcon from '@material-ui/icons/Build';\r\n\r\nconst PedidosPage = () => {\r\n    const [pedidosList, setPedidosList] = React.useState(null);\r\n    const [anchorPedidos, setAnchorPedidos] = React.useState(null);\r\n    const [anchorFaturacao, setAnchorFaturacao] = React.useState(null);\r\n    const [selectedPedido, setSelectedPedido] = React.useState(null);\r\n    const [selectedPedidoData, setSelectedPedidoData] = React.useState(null);\r\n    const [openCollapsePedido, setOpenCollapsePedido] = React.useState(null);\r\n    const [showComment, setShowComment] = React.useState(null)\r\n    const [openDelete, setOpenDelete] = React.useState(false);\r\n    const [deletePedido, setDeletePedido] = React.useState(false);\r\n    const [fazerPedido, setFazerPedido] = React.useState(false)\r\n    const [isRefetch, setIsRefetch] = React.useState(false)\r\n    const [tempChegadaData, setTempChegadaData] = React.useState({\r\n        guia: \"\",\r\n        quantidade: 0\r\n    })\r\n    const [openArtigoChegadaForm, setOpenArtigoChegadaForm] = React.useState(false)\r\n    const [chegadaArtigosState, setChegadaArtigosState] = React.useState(false)\r\n    const [selectedArtigoIndex, setSelectedArtigoIndex] = React.useState(0)\r\n    const [maxArtigo, setMaxArtigo] = React.useState(0)\r\n    const [changeArtigoFaturado, setChangeArtigoFaturado] = React.useState(false)\r\n    const [artigoFaturado, setArtigoFaturado] = React.useState(false)\r\n\r\n\r\n    const Rubricas = {\r\n        \"gestures\": ()=> <GestureIcon style={{color: \"#9b59b6\"}}/>, \r\n        \"whatshot\":()=>  <WhatshotIcon style={{color: \"#e74c3c\"}}/>,\r\n        \"widget\": ()=> <WidgetsIcon style={{color: \"#3498db\"}}/>,\r\n        \"build\": ()=> <BuildIcon style={{color: \"#f39c12\"}}/>,\r\n    }\r\n\r\n    const {\r\n        data: pedidos, \r\n        isFetching: fetchingPedidos, \r\n        refetch\r\n    } = useGetPedidos()\r\n\r\n\r\n    const {\r\n        data: empresas, \r\n        isFetching: fetchingEmpresas, \r\n    } = useGetFornecedores()\r\n\r\n    React.useEffect(()=>{\r\n        if(!fetchingPedidos && !fetchingEmpresas){\r\n            setIsRefetch(false)\r\n            setPedidosList(pedidos)\r\n        }\r\n    }, [fetchingPedidos,fetchingEmpresas])\r\n\r\n    if((fetchingPedidos || !pedidosList) && !isRefetch) return <Loading msg=\"A carregar os pedidos\" />\r\n    return (\r\n        <>\r\n        {changeArtigoFaturado  && <FaturarArtigos\r\n            pedidoID={selectedPedido}\r\n            index={selectedArtigoIndex}\r\n            faturado={artigoFaturado}\r\n            refetch={refetch}\r\n            setChangeArtigoFaturado={setChangeArtigoFaturado}\r\n            setRefetch={setIsRefetch}\r\n        />}\r\n\r\n        {chegadaArtigosState && <ChangeArtigosState\r\n            pedidoID={selectedPedido}\r\n            index={selectedArtigoIndex}\r\n            chegada_data={tempChegadaData}\r\n            refetch={refetch}\r\n            setChegadaArtigosState={setChegadaArtigosState}\r\n            openArtigoChegadaForm={setOpenArtigoChegadaForm}\r\n            setRefetch={setIsRefetch}\r\n        />}\r\n        {pedidosList.data.length === 0 && <Paper style={{\r\n            padding: \"10px 20px\",\r\n            width: \"calc(100% - 300px)\",\r\n            marginTop: 50\r\n        }}>\r\n            <Typography>Sem pedidos para apresentar. <Button component={Link} to=\"/pedidos/registo\" color=\"primary\">registar pedido</Button></Typography>    \r\n        </Paper>}\r\n       {pedidosList.data.length > 0 && <div className=\"pedidosContainer\">\r\n            \r\n            {fazerPedido && <DownloadPDF\r\n                template={getPedidoTemplate(selectedPedidoData, empresas.data.filter(e=>e.empresa === selectedPedidoData.empresa)[0])}\r\n                setFazerPedido={setFazerPedido}\r\n                refecth={refetch}\r\n                setIsRefetch={setIsRefetch}\r\n                pedidoID={selectedPedido}\r\n            /> }\r\n            <Dialog open={openArtigoChegadaForm} onClose={()=>setOpenArtigoChegadaForm(false)} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Chegada de artigo</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText>\r\n                    Preencha todos os campos para notificar a chegada do artigo\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"normal\"\r\n                    id=\"guia\"\r\n                    label=\"Guia de Remessa\"\r\n                    fullWidth\r\n                    value={tempChegadaData.guia}\r\n                    onChange={(e)=>{\r\n                        setTempChegadaData({\r\n                            ...tempChegadaData,\r\n                            guia: e.target.value\r\n                        })\r\n                    }}\r\n                />\r\n                 <TextField\r\n                    autoFocus\r\n                    margin=\"normal\"\r\n                    id=\"quantidade\"\r\n                    label=\"Quantidade\"\r\n                    type=\"number\"\r\n                    inputProps={{ min: \"0\", max: maxArtigo}}\r\n                    fullWidth\r\n                    onBlur={(e)=>{\r\n                        if(e.target.value > maxArtigo) setTempChegadaData({...tempChegadaData, quantidade: maxArtigo})\r\n                    }}\r\n                    value={tempChegadaData.quantidade}\r\n                    helperText={`Chegaram: ${tempChegadaData.quantidade}/${maxArtigo}`}\r\n                    onChange={(e)=>{\r\n                        setTempChegadaData({\r\n                            ...tempChegadaData,\r\n                            quantidade: Number(e.target.value)\r\n                        })\r\n                    }}\r\n                />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={()=>setOpenArtigoChegadaForm(false)}>\r\n                    Cancel\r\n                </Button>\r\n                \r\n               {!chegadaArtigosState &&  <Button disabled={tempChegadaData.guia === \"\"|| tempChegadaData.quantidade===0} onClick={()=>{\r\n                    if(tempChegadaData.guia !== \"\" &&  tempChegadaData.quantidade > 0){\r\n                        setChegadaArtigosState(true)\r\n                        setOpenArtigoChegadaForm(false)\r\n                    }\r\n                }} color=\"primary\">\r\n                    submeter\r\n                </Button>}\r\n                </DialogActions>\r\n            </Dialog> \r\n            <Dialog open={openDelete}  onClose={()=>{\r\n                setOpenDelete(false)\r\n            }} aria-labelledby=\"simple-dialog-title\">\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Tem a certeza que pretende apagar o pedido\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        O pedido será apagado permanentemente da base de dados. Tem a certeza que pretende continuar?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!deletePedido && <Button style={{color: \"#e74c3c\"}}onClick={()=>{setDeletePedido(true)}}>\r\n                        apagar\r\n                    </Button>}\r\n                    {deletePedido && <DeletePedido\r\n                        id={selectedPedido} \r\n                        setOpenDelete={setOpenDelete}\r\n                        setDeletePedido={setDeletePedido}\r\n                        refetch={refetch}\r\n                        />}\r\n                    <Button onClick={()=>setOpenDelete(false)} autoFocus>\r\n                        cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n            <div className=\"pedidosHeader\">\r\n                <Button component={Link} to=\"/pedidos/registo\" color=\"primary\" variant=\"contained\">registar pedido</Button>\r\n                <Paper className=\"searchContainer\">\r\n                    <SearchComponent setPedidosList={setPedidosList} refetch={refetch}/>\r\n                </Paper>\r\n            </div>\r\n            <TableContainer style={{paddingTop: \"20px\"}} component={Paper}>\r\n                <Table size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow >\r\n                            <TableCell ></TableCell>\r\n                            <TableCell style={{color: \"#878787\"}} >Data Pedido</TableCell>\r\n                            <TableCell align=\"center\" style={{color: \"#878787\"}} >Rúbrica</TableCell>\r\n                            <TableCell style={{color: \"#878787\"}} >Remetente</TableCell>\r\n                            <TableCell style={{color: \"#878787\"}} >Grupo</TableCell>\r\n                            <TableCell style={{color: \"#878787\"}} >Empresa</TableCell>\r\n                            <TableCell style={{color: \"#878787\"}} >Valor Total</TableCell>\r\n                            <TableCell style={{color: \"#878787\"}} >Fatura</TableCell>\r\n                            <TableCell ></TableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {pedidosList.data.map((p,i)=>{\r\n                            return (\r\n                                <>\r\n                                    <TableRow key={`pedido_${i}`}>\r\n                                        <TableCell  component=\"th\" scope=\"row\">\r\n                                            {!fazerPedido && <Tooltip title={ p.pedido_feito? `Pedido feito em ${p.pedido_feito_formated_date.substring(0,10)}`: \"Este pedido ainda não foi realizado\"}>\r\n                                                <StarIcon style={{\r\n                                                    color: p.pedido_feito? \"#f1c40f\": \"#DCDCDC\",\r\n                                                    fontSize: 30\r\n                                                }}/>\r\n                                            </Tooltip>}\r\n                                            {fazerPedido && selectedPedido === p.id && <CircularProgress size={30} />}\r\n                                        </TableCell>\r\n                                        <TableCell  component=\"th\" scope=\"row\">\r\n                                            {String(p.day).length > 1?p.day: `0${p.day}` }/{String(p.mounth).length > 1?p.mounth: `0${p.mounth}` }/{p.year}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                            <Tooltip title={p.rubrica.name}>\r\n                                                {Rubricas[p.rubrica.icon]()}\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell  component=\"th\" scope=\"row\">\r\n                                            {p.remetente}\r\n                                        </TableCell>\r\n                                        <TableCell  component=\"th\" scope=\"row\">\r\n                                            <Tooltip title={p.grupo.length < 30? \"\":p.grupo}>\r\n                                                <Typography>\r\n                                                    {p.grupo.length > 30? `${p.grupo.substring(0,30)}...`: p.grupo}\r\n                                                </Typography>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell  component=\"th\" scope=\"row\">\r\n                                            <Tooltip title={p.empresa.length < 30? \"\":p.empresa}>\r\n                                                <Typography>\r\n                                                    {p.empresa.length > 30? `${p.empresa.substring(0,30)}...`: p.empresa}\r\n                                                </Typography>\r\n                                            </Tooltip>\r\n\r\n                                        </TableCell>\r\n                                        <TableCell  component=\"th\" scope=\"row\">\r\n                                            {p.valor_total} €\r\n                                        </TableCell>\r\n                                        <TableCell  component=\"th\" scope=\"row\">\r\n                                            <Tooltip title=\"Ver faturas\">\r\n                                                <IconButton onClick={(e)=>{\r\n                                                    setAnchorFaturacao(e.target)\r\n                                                    setSelectedPedido(p.id)\r\n                                                }}style={{color: \"#2ecc71\"}}>\r\n                                                    <FileCopyIcon />\r\n                                                </IconButton> \r\n                                            </Tooltip> \r\n                                        </TableCell>\r\n                                        <TableCell  component=\"th\" scope=\"row\">\r\n                                            <IconButton onClick={(e)=>{\r\n                                                setSelectedPedido(p.id)\r\n                                                setAnchorPedidos(e.target)\r\n                                                setSelectedPedidoData(p)\r\n                                            }}>\r\n                                                <MoreVertIcon />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow key={`Collapse_${i}`}>\r\n                                        <TableCell style={{padding:0 }} colSpan={9}>\r\n                                            <Collapse style={{backgroundColor: \"#2d3436\"}} in={openCollapsePedido === p.id} timeout=\"auto\" unmountOnExit>\r\n                                                <Table size=\"small\">\r\n                                                    <TableHead>\r\n                                                        <TableRow >\r\n                                                            <TableCell style={{borderColor: \"#232323\"}}></TableCell>\r\n                                                            <TableCell style={{borderColor: \"#232323\",color: \"#3498db\"}} align=\"right\">Referência</TableCell>\r\n                                                            <TableCell style={{borderColor: \"#232323\",color: \"#3498db\"}} align=\"right\">Artigo</TableCell>\r\n                                                            <TableCell style={{borderColor: \"#232323\",color: \"#3498db\"}} align=\"right\">Quantidade</TableCell>\r\n                                                            <TableCell style={{borderColor: \"#232323\",color: \"#3498db\"}} align=\"right\">Preço Unitário</TableCell>\r\n                                                            <TableCell style={{borderColor: \"#232323\",color: \"#3498db\"}} align=\"right\">Preço Total</TableCell>\r\n                                                            <TableCell style={{borderColor: \"#232323\",color: \"#3498db\"}} align=\"center\">Chegada</TableCell>\r\n                                                            <TableCell style={{borderColor: \"#232323\",color: \"#3498db\"}} align=\"right\">Guia</TableCell>\r\n                                                            <TableCell style={{borderColor: \"#232323\",color: \"#3498db\"}} align=\"center\">Faturado</TableCell>\r\n                                                            <TableCell style={{borderColor: \"#232323\"}} align=\"center\">\r\n                                                                <IconButton style={{color: \"white\"}} onClick={()=>{\r\n                                                                    setOpenCollapsePedido(null)\r\n                                                                }}>\r\n                                                                    <CloseIcon />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    </TableHead>\r\n                                                    <TableBody>\r\n                                                        {p.artigos.map((a,index_artigos)=>{\r\n                                                            return ( <TableRow key={`artigo_${a.referencia_artigo}`}>\r\n                                                             <TableCell style={{borderColor: \"#232323\"}} align=\"right\" component=\"th\" scope=\"row\">\r\n                                                                 {a.entrega.chegada && Number(a.quantidade) === Number(a.entrega.quantidade)  && <CheckIcon style={{\r\n                                                                     color: \"#2ecc71\",\r\n                                                                     fontSize: 20\r\n                                                                 }}/>}\r\n                                                                  {!a.entrega.chegada && <ScheduleIcon style={{\r\n                                                                     color: \"#f1c40f\",\r\n                                                                     fontSize: 20\r\n                                                                 }}/>}\r\n                                                             </TableCell>\r\n                                                             <TableCell style={{borderColor: \"#232323\",color: \"white\"}}  align=\"right\" component=\"th\" scope=\"row\">\r\n                                                                 {a.referencia_artigo}\r\n                                                             </TableCell>\r\n                                                             <TableCell style={{borderColor: \"#232323\",color: \"white\"}}  align=\"right\" component=\"th\" scope=\"row\">\r\n                                                                 {a.artigo}\r\n                                                             </TableCell>\r\n                                                             <TableCell style={{borderColor: \"#232323\",color: \"white\"}}  align=\"right\" component=\"th\" scope=\"row\">\r\n                                                                 {a.quantidade}\r\n                                                             </TableCell>\r\n                                                             <TableCell style={{borderColor: \"#232323\",color: \"white\"}}  align=\"right\" component=\"th\" scope=\"row\">\r\n                                                                {a.preco} €\r\n                                                             </TableCell>\r\n                                                             <TableCell style={{borderColor: \"#232323\",color: \"white\"}}  align=\"right\" component=\"th\" scope=\"row\">\r\n                                                                 {a.preco * a.quantidade} €\r\n                                                             </TableCell>\r\n                                                             <TableCell style={{borderColor: \"#232323\"}}  align=\"center\" component=\"th\" scope=\"row\">\r\n                                                                {!chegadaArtigosState && !a.entrega.chegada && <Tooltip title=\"Chegada de artigo\">\r\n                                                                    <IconButton onClick={()=>{\r\n                                                                        setSelectedArtigoIndex(index_artigos)\r\n                                                                        setSelectedPedido(p.id)\r\n                                                                        setOpenArtigoChegadaForm(true)\r\n                                                                        setMaxArtigo(a.quantidade)\r\n                                                                    }}>\r\n                                                                        <VerifiedUserIcon style={{color: \"#bdc3c7\"}}/>\r\n                                                                    </IconButton>\r\n                                                                 </Tooltip>}\r\n                                                                 {a.entrega.chegada && Number(a.quantidade) === Number(a.entrega.quantidade) &&\r\n                                                                 <Tooltip title=\"Chegaram todos os artigos\">\r\n                                                                     <VerifiedUserIcon style={{color: \"#2980b9\"}}/>\r\n                                                                 </Tooltip>\r\n                                                                 }\r\n                                                                 {!chegadaArtigosState && Number(a.entrega.quantidade) > 0 && Number(a.entrega.quantidade) < a.quantidade && <Tooltip title={`Chegaram ${a.entrega.quantidade}/${a.quantidade}`}>\r\n                                                                    <IconButton onClick={()=>{\r\n                                                                        setSelectedArtigoIndex(index_artigos)\r\n                                                                        setSelectedPedido(p.id)\r\n                                                                        setOpenArtigoChegadaForm(true)\r\n                                                                        setMaxArtigo(a.quantidade)\r\n                                                                    }}>\r\n                                                                        <VerifiedUserIcon style={{color: \"#e67e22\"}}/>\r\n                                                                    </IconButton>\r\n                                                                 </Tooltip>}\r\n                                                                 {chegadaArtigosState && <CircularProgress size={30} />}    \r\n                                                             </TableCell>\r\n                                                             <TableCell style={{borderColor: \"#232323\",color: \"white\"}}  align=\"right\" component=\"th\" scope=\"row\">\r\n                                                                {a.entrega.chegada? a.entrega.guia: \"ND\"}\r\n                                                             </TableCell>\r\n                                                             <TableCell style={{borderColor: \"#232323\"}} align=\"center\" component=\"th\" scope=\"row\">\r\n                                                                {!changeArtigoFaturado && <IconButton onClick={()=>{\r\n                                                                    setArtigoFaturado(!a.faturado)\r\n                                                                    setChangeArtigoFaturado(true)\r\n                                                                }} style={{color: a.faturado? \"#2ecc71\" : \"#bdc3c7\"}}>\r\n                                                                    <DescriptionIcon />\r\n                                                                </IconButton>}\r\n                                                                {changeArtigoFaturado && <CircularProgress size={30} />}\r\n                                                             </TableCell>\r\n                                                             <TableCell style={{borderColor: \"#232323\"}} align=\"center\" component=\"th\" scope=\"row\"></TableCell>\r\n                                                         </TableRow>)\r\n                                                        })}\r\n                                                    </TableBody>\r\n                                                </Table>\r\n                                                <div className=\"artigoInfoContainer\">\r\n                                                    <Typography> <strong style={{color: \"#3498db\"}}>Proposta:</strong> {p.proposta}</Typography>\r\n                                                    <Typography> <strong style={{color: \"#3498db\"}}>NE:</strong> {p.ne}</Typography>\r\n                                                    <Typography> <strong style={{color: \"#3498db\"}}>Cabimento:</strong> {p.cabimento}</Typography>\r\n                                                    {p.notas !== \"\" && <Tooltip title=\"Comentários\">\r\n                                                            <IconButton onClick={(e)=>{\r\n                                                                setShowComment(p.id)\r\n                                                            }} color=\"primary\">\r\n                                                                <CommentIcon/>\r\n                                                            </IconButton>\r\n                                                        </Tooltip>}\r\n                                                </div>\r\n                                                <Collapse  in={showComment === p.id} timeout=\"auto\" unmountOnExit>\r\n                                                    <div className=\"commentContainer\">\r\n                                                        {p.notas}\r\n                                                        <Button style={{color: \"white\"}} onClick={(e)=>{\r\n                                                            setShowComment(false)\r\n                                                        }} >\r\n                                                            fechar\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </Collapse>\r\n                                            </Collapse>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n           \r\n            <Popover \r\n                open={Boolean(anchorFaturacao)}\r\n                onClose={()=>setAnchorFaturacao(null)}\r\n                anchorEl={anchorFaturacao}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n            >\r\n                <GetFaturasPedido \r\n                    pedidoID={selectedPedido}\r\n                />\r\n            </Popover>\r\n            <Menu\r\n                id=\"pedidos_menu\"\r\n                anchorEl={anchorPedidos}\r\n                keepMounted\r\n                open={Boolean(anchorPedidos)}\r\n                onClose={()=>setAnchorPedidos(null)}\r\n            >\r\n                <MenuItem onClick={()=>{\r\n                    setOpenCollapsePedido(selectedPedido)\r\n                    setAnchorPedidos(null)\r\n                }}>MAIS DETALHES</MenuItem>\r\n               <MenuItem onClick={()=>{\r\n                    setAnchorPedidos(null)\r\n                    setFazerPedido(true)\r\n                    }}>FAZER PEDIDO</MenuItem>\r\n                <MenuItem component={Link} to={`/pedidos/edit/${selectedPedido}`} onClick={()=>setAnchorPedidos(null)}>EDITAR</MenuItem>\r\n                <MenuItem onClick={()=>{\r\n                    setAnchorPedidos(null)\r\n                    setOpenDelete(true)\r\n                }}>ELIMINAR</MenuItem>\r\n            </Menu>\r\n        </div>}\r\n        </>\r\n    )\r\n}\r\nexport default  PedidosPage\r\n\r\n","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\Loading.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\PedidosRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\FornecedoresRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\AnualRequestesComponent.jsx",["255","256"],"import React from 'react'\r\nimport {useGetPedidosAnual} from \"../../Domain/useCases\"\r\nimport {Bar} from \"react-chartjs-2\"\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { Typography, Paper} from '@material-ui/core'\r\n\r\nconst AnualRequestesComponent = () => {\r\n    const [datasets, setDatasets] = React.useState(null)\r\n    const {\r\n        data: pedidosAnual, \r\n        isFetching: fetchingPedidosAnual\r\n    } = useGetPedidosAnual()\r\n   \r\n    const isLoading = React.useMemo(() => {\r\n        return  fetchingPedidosAnual\r\n    }, [fetchingPedidosAnual])\r\n\r\n    React.useEffect(()=>{\r\n        let tempDatasets=[]\r\n        if(!fetchingPedidosAnual){\r\n            Object.keys(pedidosAnual).forEach(group=>{\r\n                tempDatasets.push( {\r\n                    label: group, \r\n                    data:  Object.values(pedidosAnual[group].data), \r\n                    backgroundColor: pedidosAnual[group].color,\r\n                    fill: true,\r\n                    borderColor: pedidosAnual[group].color\r\n                })\r\n            })\r\n            setDatasets(tempDatasets)\r\n        }\r\n    }, [fetchingPedidosAnual])\r\n    return (\r\n        <>\r\n            {fetchingPedidosAnual && <LoadingComponent/>}\r\n            {!fetchingPedidosAnual && <Paper style={{\r\n                width: \"100%\", \r\n                background: \"white\", \r\n                padding: 20\r\n            }}>\r\n                {Object.keys(pedidosAnual).length === 0 && <Typography>Dados não disponíveis. Ainda não foi registado nenhum pedido.</Typography>   }\r\n                {Object.keys(pedidosAnual).length > 0 && <Bar\r\n                    width={100}\r\n                    height={25}\r\n                    data={{\r\n                        labels: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"], \r\n                        datasets: datasets\r\n                    }}\r\n                    options={{\r\n                        tooltips:{\r\n                            enabled: true\r\n                        },\r\n                        elements: {\r\n                            point:{\r\n                                radius: 0\r\n                            }\r\n                        },\r\n                        responsive: true, \r\n                        \r\n                        chartArea: {\r\n                            backgroundColor: 'rgba(251, 85, 85, 0.4)'\r\n                        }, \r\n                        maintainAspectRatio: true,\r\n                        legend:{\r\n                            display: false, \r\n                            position: \"top\",\r\n                            align:\"center\",\r\n                            labels: {\r\n                                fontColor: \"white\",\r\n                            }\r\n                            \r\n                        },\r\n                       \r\n                        scales:{\r\n                            xAxes: [{\r\n                                display: true,\r\n                                gridLines: {\r\n                                    display: true,\r\n                                    color: \"#ecf0f1\"\r\n                                },\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: `Ano de ${new Date().getFullYear()}`, \r\n                                    fontColor: \"#666\"\r\n                                },\r\n                                ticks:{\r\n                                    fontColor: \"#666\"\r\n                                }\r\n                            }],\r\n                            yAxes: [{\r\n                                display: true,\r\n                                gridLines: {\r\n                                    display: true,\r\n                                    color: \"#ecf0f1\"\r\n                                },\r\n                                stacked: true,\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: 'Nº de Pedidos', \r\n                                    fontColor: \"#666\"\r\n                                },\r\n                                ticks:{\r\n                                    fontColor: \"#666\"\r\n                                } \r\n                            }]\r\n                        }\r\n                    }}\r\n                />}\r\n                \r\n            </Paper>}\r\n        </>\r\n    )\r\n}\r\nexport default AnualRequestesComponent\r\n\r\nconst LoadingComponent = ()=>{\r\n    return  <Skeleton variant=\"rect\" width=\"100%\" height={300} />\r\n           \r\n}","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\StatsComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Dashboard\\EmpresasComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\SearchPedidosComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\PedidosForm.jsx",["257","258","259","260"],"import React from 'react'\r\nimport {useParams} from \"react-router-dom\"\r\nimport FormComponent from \"../../Components/FormComponent\"\r\nimport {List,Dialog,DialogTitle,DialogContent,DialogContentText,DialogActions, ListItem,FormHelperText, CircularProgress,Button,ListItemText,ListItemSecondaryAction, TextField,  MenuItem, Typography, InputAdornment , IconButton,InputLabel, Input, FormControl, Popover, Collapse, Divider} from \"@material-ui/core\"\r\nimport RubricasComponent from \"./RubricasComponent\"\r\nimport Loading from \"../../Components/Loading\"\r\nimport {useGetGrupos, useGetEmpresasByRubrica} from \"../../Domain/useCases\"\r\nimport SearchArticle from \"./SearchArticle\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SubmitForm from \"./SubmitForm\"\r\nimport {useSendPedidos, useGetPedidoByID, useEditPedido,useGetFaturasByPedido} from \"../../Domain/useCases\"\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport SubmitFatura from \"./SubmitFatura\"\r\nimport DeleteFatura from \"./DeleteFatura\"\r\nimport AddArtigo from \"./AddArtigo\"\r\n\r\n\r\nconst getFormatedNumber = (number)=> String(number).length === 1 ? `0${number}`: number \r\n\r\nconst PedidosForm = () => {\r\n    let { id } = useParams();\r\n    const [selectedRubrica, setSelectedRubrica] = React.useState(\"PM\")\r\n    const [fetchEmpresas, setFetchEmpresas] = React.useState(true)\r\n    const [empresasList, setEmpresasList] = React.useState([])\r\n\r\n    const {\r\n        data: grupos, \r\n        isFetching: fetchingGrupos\r\n    } = useGetGrupos()\r\n\r\n    const {\r\n        data: faturas, \r\n        isFetching: fetchingFaturas,\r\n        refetch: refetchFaturas\r\n    } = useGetFaturasByPedido(id)\r\n\r\n    const {\r\n        data: pedido, \r\n        isFetching: fetchingPedido\r\n    } = useGetPedidoByID(id)\r\n\r\n    const date = new Date()\r\n    const today = `${date.getFullYear()}-${getFormatedNumber(date.getMonth()+1)}-${getFormatedNumber(date.getDate())}`\r\n    const [articlesResult, setArticlesResult] = React.useState([])\r\n    const [addArtigo, setAddArtigo] = React.useState(false);\r\n    const [addFat, setAddFat] = React.useState(false);\r\n    const [submitFatura, setSubmitFatura] = React.useState(false);\r\n    const [openDelete, setOpenDelete] = React.useState(false);\r\n    const [deleteFatura, setDeleteFatura] = React.useState(false);\r\n    const [deleteResult, setDeleteResult] = React.useState(null);\r\n    const [selectedFaturaID, setSelectedFaturaID] = React.useState(null);\r\n    const [articleSearchTerm, setArticlesSearchTerm] = React.useState(\"\")\r\n    const [performSearch, setPerformSearch] = React.useState(false)\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [submitForm, setSubmitForm] = React.useState(false);\r\n    const [showAddArtigoForm, setShowAddArtigoForm] = React.useState(false);\r\n    const [addArtigoToDB, setAddArtigoToDB] = React.useState(false);\r\n    \r\n    const [tempArticle, setTempArticle] = React.useState({\r\n        artigo: \"\", \r\n        preco: 0, \r\n        quantidade: 0, \r\n        referencia_artigo: \"\", \r\n        faturado: false,\r\n        entrega: {\r\n            chegada: false, \r\n            data_chegada: \"\", \r\n            guia: \"\", \r\n            quantidade: 0\r\n        }\r\n    });\r\n    const [tempFatura, setTempFatura] = React.useState({\r\n        name: \"\", \r\n        data_emissao: today, \r\n        notas: \"\", \r\n        valor_fatura: 0, \r\n       \r\n    });\r\n    const [submitData, setSubmitData] = React.useState({})\r\n    \r\n    const [error, setError] = React.useState({\r\n        data_pedido: false, \r\n        remetente: false,\r\n        empresa: false,\r\n        ne: false,\r\n        proposta: false,\r\n        artigos: false,\r\n    })\r\n    \r\n    const onChangeInput = (e)=>{\r\n        setSubmitData({\r\n            ...submitData,\r\n            [e.target.id]: e.target.value\r\n        })\r\n        setError({\r\n            ...error, \r\n            [e.target.id]: false\r\n        })\r\n    }\r\n\r\n    const onChangeInputArticle = e=>{\r\n        setTempArticle({\r\n            ...tempArticle,\r\n            [e.target.id]: e.target.value\r\n        })\r\n        setError({\r\n            ...error, \r\n            artigos: false\r\n        })\r\n    }\r\n\r\n    const onChangeInputFatura = e=>{\r\n        setTempFatura({\r\n            ...tempFatura,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmitForm = ()=>{\r\n        let tempError = {}\r\n        Object.keys(error).forEach(key=>{\r\n            if(key!== \"artigos\" && submitData[key] === \"\"){\r\n                tempError={\r\n                    ...tempError,\r\n                    [key]: true\r\n                }\r\n            }\r\n            else if (key === \"artigos\" && submitData.artigos.length === 0){\r\n                tempError={\r\n                    ...tempError,\r\n                    [key]: true\r\n                }\r\n            }            \r\n        })\r\n        setError({\r\n            ...error, \r\n            ...tempError\r\n        })\r\n        if(Object.values(tempError).length === 0){\r\n            setSubmitForm(true)\r\n        }\r\n        \r\n    }\r\n\r\n    const isLoading = React.useMemo(() => {\r\n        return  fetchingGrupos \r\n            || fetchingPedido\r\n            ||fetchingFaturas\r\n    }, [fetchingGrupos, \r\n        fetchingPedido,\r\n        fetchingFaturas\r\n    ])\r\n\r\n    React.useEffect(()=>{\r\n        if(!isLoading){\r\n                setSubmitData({\r\n                    rubrica:id?  pedido.data.rubrica: {\r\n                            code: \"PM\", \r\n                            icon: \"widget\",\r\n                            name: \"Materiais\"\r\n                    },\r\n                    data_pedido:id?  pedido.data.data_pedido : Date.now(),\r\n                    data_pedido_formated:id?  pedido.data.data_pedido_formated: today,\r\n                    day:id?  pedido.data.day :  date.getDate(),\r\n                    mounth:id?  pedido.data.mounth: date.getMonth()+1,\r\n                    year:id?  pedido.data.year : date.getFullYear(),\r\n                    remetente: id? pedido.data.remetente : \"\",\r\n                    grupo:id?  pedido.data.grupo : grupos.data[0].name,\r\n                    grupo_abrv:id?  pedido.data.grupo_abrv : grupos.data[0].abrv,\r\n                    grupo_id :id?  pedido.data.grupo_id : grupos.data[0].id,\r\n                    responsavel:id?  pedido.data.responsavel :  grupos.data[0].membros[0],\r\n                    proposta:id?  pedido.data.proposta : \"\",\r\n                    notas:id?  pedido.data.notas: \"\",\r\n                    valor_total: id?  pedido.data.valor_total: \"\",\r\n                    artigos: id?  pedido.data.artigos : [],\r\n                })\r\n                if(id){\r\n                    setSelectedRubrica(pedido.data.rubrica.code)\r\n                }\r\n            }\r\n        }, [isLoading])\r\n        \r\n\r\n    if((isLoading || Object.keys(submitData).length=== 0)) return <Loading msg=\"A carregar dados necessários...\" />\r\n    if(submitForm)  return <SubmitForm data={submitData}  id={id} submitFunction={id? useEditPedido: useSendPedidos}/>\r\n    return (\r\n        <FormComponent title={id? \"Editar Pedido\": \"Registo de Novo Pedido\"}>\r\n            <Dialog open={addArtigo} onClose={()=>setAddArtigo(false)} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Adicionar Artigo</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Por favor preencha todos os dados para adicionar um novo artigo a este pedido\r\n                    </DialogContentText>\r\n                    <FormControl \r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        error={error.artigos}\r\n                        style={{\r\n                            marginBottom: 20\r\n                        }}\r\n                    > \r\n                        <InputLabel htmlFor=\"standard-adornment-password\">Pesquisar referência do artigo</InputLabel>\r\n                        <Input\r\n                            id=\"articleSearch\"\r\n                            value={articleSearchTerm}\r\n                            onChange={(e)=>{\r\n                                setArticlesSearchTerm(e.target.value)\r\n                            }}\r\n                            style={{padding: \"0px 0px 0px 15px\"}}\r\n                            onKeyDown={(e)=>{\r\n                                if(e.key === \"Enter\"){\r\n                                    if(articleSearchTerm !== \"\" ) {\r\n                                        setPerformSearch(true)\r\n                                        setAnchorEl(e.target)\r\n                                    }\r\n                                }\r\n                            }}\r\n                            endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <SearchArticle \r\n                                    term={articleSearchTerm}\r\n                                    setArticlesResult={setArticlesResult}\r\n                                    performSearch={performSearch}\r\n                                    setPerformSearch={setPerformSearch}\r\n                                />\r\n                            <IconButton disabled={performSearch} onClick={(e)=>{\r\n                                    if(articleSearchTerm !== \"\" ) {\r\n                                        setPerformSearch(true)\r\n                                        setAnchorEl(e.target)\r\n                                    }\r\n                                }\r\n                            } color=\"primary\">\r\n                                <SearchIcon/>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                            }\r\n                            />\r\n                            {tempArticle.artigo!== \"\" && <FormHelperText>Artigo: {tempArticle.artigo}</FormHelperText>}\r\n                        </FormControl>\r\n                        <Popover \r\n                            id={id}\r\n                            open={Boolean(anchorEl)}\r\n                            anchorEl={anchorEl}\r\n                            onClose={()=>setAnchorEl(null)}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                        >\r\n                            <div className=\"formSearchResultContainer\">\r\n                                {performSearch && <CircularProgress />}\r\n                                {!performSearch&& articlesResult.length > 0 &&  <List dense={true}>\r\n                                    {articlesResult.map(a=>{\r\n                                        return (\r\n                                            <ListItem button key={a.id} onClick={()=>{\r\n                                                setAnchorEl(null)\r\n                                                setArticlesSearchTerm(a.code)\r\n                                                setTempArticle({\r\n                                                    ...tempArticle,\r\n                                                    artigo: a.name,\r\n                                                    referencia_artigo: a.code, \r\n                                                })\r\n                                                \r\n                                            }}>\r\n                                                <ListItemText primary={a.name} secondary={a.code} />\r\n                                            </ListItem>\r\n                                        )\r\n                                    })}\r\n                                    \r\n                                    </List>\r\n                                }\r\n                                {!performSearch&& articlesResult.length === 0 && <Typography style={{\r\n                                    padding: 20\r\n                                }}>\r\n                                    O artigo não se encontra na base de dados. <Button onClick={()=>{\r\n                                        setShowAddArtigoForm(true)\r\n                                        setAnchorEl(null)\r\n                                    }} color=\"primary\">adicionar artigo</Button>    \r\n                                </Typography>}\r\n                            </div>\r\n                        </Popover>\r\n                        \r\n                        <Collapse in={showAddArtigoForm} timeout=\"auto\" unmountOnExit > \r\n                            <TextField\r\n                                id=\"artigo\"\r\n                                label=\"Artigo\"\r\n                                value={tempArticle.artigo}\r\n                                onChange={onChangeInputArticle}\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                            />\r\n                            <div style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"flex-end\"\r\n                                }}\r\n                            >\r\n                            \r\n                                {!addArtigoToDB && <Button disabled={tempArticle.artigo === \"\" || articleSearchTerm=== \"\"} onClick={()=>{\r\n                                    setAddArtigoToDB(true)\r\n                                }} color=\"primary\">guardar</Button>}\r\n                                {addArtigoToDB && <AddArtigo\r\n                                    setAddArtigoToDB={setAddArtigoToDB}\r\n                                    setTempArticle={setTempArticle}\r\n                                    setShowAddArtigoForm={setShowAddArtigoForm}\r\n                                    tempArticle={tempArticle}\r\n                                    artigo={{\r\n                                        code: articleSearchTerm,\r\n                                        name: tempArticle.artigo\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n\r\n                        </Collapse>\r\n\r\n\r\n                <TextField\r\n                    id=\"quantidade\"\r\n                    label=\"Quantidade\"\r\n                    value={tempArticle.quantidade}\r\n                    onChange={onChangeInputArticle}\r\n                    variant=\"filled\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    id=\"preco\"\r\n                    label=\"Preço\"\r\n                    type=\"number\"\r\n                    value={tempArticle.preco}\r\n                    onChange={onChangeInputArticle}\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={()=>setAddArtigo(false)} color=\"primary\">\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button disabled={tempArticle.artigo === \"\" || tempArticle.quantidade === 0 || tempArticle.preco === 0} onClick={()=>{\r\n                            if(tempArticle.quantidade !== 0 && tempArticle.preco !== 0){\r\n                                let tempArtigo = submitData.artigos\r\n                                tempArtigo.push(tempArticle)\r\n                                setSubmitData({\r\n                                    ...submitData,\r\n                                    artigos: tempArtigo,\r\n                                    valor_total: Number(submitData.valor_total) + Number(tempArticle.quantidade * tempArticle.preco)\r\n                                })\r\n                                setTempArticle({\r\n                                    artigo: \"\", \r\n                                    preco: 0, \r\n                                    quantidade: 0, \r\n                                    referencia_artigo: \"\", \r\n                                    faturado: false,\r\n                                    entrega: {\r\n                                        chegada: false, \r\n                                        data_chegada: \"\", \r\n                                        guia: \"\", \r\n                                        quantidade: 0\r\n                                    }\r\n                                })\r\n                                setArticlesSearchTerm(\"\")\r\n                                setAddArtigo(false)\r\n                            }\r\n                        }} >adicionar</Button>\r\n                                \r\n                </DialogActions>\r\n            </Dialog>\r\n            \r\n           {id && <Dialog open={addFat} onClose={()=>setAddFat(false)} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Adicionar Fatura</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Por favor preencha todos os dados para adicionar uma nova fatura\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        id=\"name\"\r\n                        label=\"Código da Fatura\"\r\n                        value={tempFatura.name}\r\n                        onChange={onChangeInputFatura}\r\n                        variant=\"filled\"\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        id=\"data_emissao\"\r\n                        label=\"Data de Emissão\"\r\n                        value={tempFatura.data_emissao.substring(0,10)}\r\n                        type=\"date\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={(e)=>{\r\n                            const selectedDate = new Date(e.target.value)\r\n                            setTempFatura({\r\n                                ...tempFatura, \r\n                                data_emissao: selectedDate.toJSON(),\r\n                                data_emissao_timestamp: selectedDate.getTime()\r\n                            })\r\n                        }}\r\n                        variant=\"filled\"\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        id=\"valor_fatura\"\r\n                        label=\"Valor\"\r\n                        type=\"number\"\r\n                        value={tempFatura.valor_fatura}\r\n                        onChange={onChangeInputFatura}\r\n                        variant=\"filled\"\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        id=\"notas\"\r\n                        multiline\r\n                        rows={4}\r\n                        label=\"Notas\"\r\n                        value={tempFatura.notas}\r\n                        onChange={onChangeInputFatura}\r\n                        variant=\"filled\"\r\n                    />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={()=>setAddFat(false)} color=\"primary\">\r\n                            Cancelar\r\n                        </Button>\r\n                       {submitFatura&& <SubmitFatura\r\n                            fatura={{\r\n                                ...tempFatura,\r\n                                pedido: id\r\n                            }}\r\n                            setSubmitFatura={setSubmitFatura}\r\n                            refetchFaturas={refetchFaturas}\r\n                            setAddFat={setAddFat}\r\n                            setTempFatura={setTempFatura}\r\n                        />}\r\n                        {!submitFatura && <Button\r\n                            disabled={tempFatura.name===\"\" ||tempFatura.data_emissao=== \"\" || tempFatura.valor_fatura === 0 }\r\n                            onClick={()=>{\r\n                                setSubmitFatura(true)\r\n                            }}\r\n                        >\r\n                            adicionar fatura\r\n                        </Button>}\r\n                                \r\n                </DialogActions>\r\n            </Dialog>}\r\n\r\n            <Dialog onClose={()=>{\r\n                setOpenDelete(false)\r\n                setDeleteResult(null)\r\n            }} aria-labelledby=\"simple-dialog-title\" open={openDelete}>\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Tem a certeza que pretende apagar a fatura\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        A fatura será apagada permanentemente da base de dados. Tem a certeza que pretende continuar?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!deleteFatura && <Button style={{color: \"#e74c3c\"}}onClick={()=>{setDeleteFatura(true)}}>\r\n                        apagar\r\n                    </Button>}\r\n                    {deleteFatura && <DeleteFatura\r\n                        id={selectedFaturaID} \r\n                        setDeleteResult={setDeleteResult}\r\n                        setOpenDelete={setOpenDelete}\r\n                        refetch={refetchFaturas}\r\n                        setDeleteFatura={setDeleteFatura}\r\n                        />}\r\n                    <Button onClick={()=>setOpenDelete(false)} autoFocus>\r\n                        cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n            \r\n            <div style={{display: \"flex\"}}>\r\n                <RubricasComponent \r\n                        submitData={submitData}\r\n                        setSubmitData={setSubmitData}\r\n                        setSelectedRubrica={setSelectedRubrica}\r\n                        setFetchEmpresas={setFetchEmpresas}\r\n                    />\r\n\r\n                    {fetchEmpresas && <FetchEmpresasByRubrica \r\n                        setFetchEmpresas={setFetchEmpresas}\r\n                        setSubmitData={setSubmitData}\r\n                        submitData={submitData}\r\n                        selectedRubrica={selectedRubrica}\r\n                        setEmpresasList={setEmpresasList}\r\n                        id={id}\r\n                        pedido={pedido}\r\n                    />}\r\n            </div>\r\n            {empresasList.length === 0 && <Typography style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    marginBottom: 30\r\n                }} color=\"error\">\r\n                    <ErrorIcon/>\r\n                    Não existem notas de encomenda para a rúbirca selecionada    \r\n                </Typography>}\r\n            \r\n           <TextField\r\n                id=\"data_pedido\"\r\n                label=\"Data do Pedido\"\r\n                type=\"date\"\r\n                error={error.data_pedido}\r\n                required\r\n                variant=\"filled\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                value={submitData.data_pedido_formated}\r\n                onChange={(e)=>{\r\n                    const selectedDate = new Date(e.target.value)\r\n                    setSubmitData({\r\n                        ...submitData,\r\n                        data_pedido_formated: e.target.value,\r\n                        data_pedido: selectedDate.getTime(), \r\n                        day: selectedDate.getDate(), \r\n                        mounth: selectedDate.getMonth()+1,\r\n                        year: selectedDate.getFullYear(),\r\n                    })\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                error={error.remetente}\r\n                required\r\n                id=\"remetente\"\r\n                label=\"Remetente\"\r\n                value={submitData.remetente}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n            <TextField\r\n                id=\"grupo\"\r\n                variant=\"filled\"\r\n                select\r\n                label=\"Grupo\"\r\n                value={submitData.grupo}\r\n                onChange={(e)=>{\r\n                    setSubmitData({\r\n                        ...submitData, \r\n                        grupo: e.target.value,\r\n                        grupo_abrv: grupos.data.filter(g=>g.name===e.target.value)[0].abrv,\r\n                        grupo_id: grupos.data.filter(g=>g.name===e.target.value)[0].id,\r\n                        responsavel: grupos.data.filter(g=>g.name===e.target.value)[0].membros[0],\r\n                    })\r\n                }}\r\n            >\r\n                {grupos.data.map(g=>{\r\n                    return (\r\n                        <MenuItem  key={g.name} value={g.name}>\r\n                            {g.name}\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n            </TextField>\r\n            \r\n            {submitData.grupo && <TextField\r\n                id=\"responsavel\"\r\n                variant=\"filled\"\r\n                select\r\n                label=\"Responsável\"\r\n                value={submitData.responsavel}\r\n                onChange={(e)=>{\r\n                    setSubmitData({\r\n                        ...submitData, \r\n                        responsavel: e.target.value\r\n                    })\r\n                }}\r\n            >\r\n                {grupos.data.filter(g=>g.name===submitData.grupo)[0].membros.map(m=>{\r\n                    return (\r\n                        <MenuItem key={m} value={m}>\r\n                            {m}\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n            </TextField>}\r\n            \r\n           {submitData.empresa && <TextField\r\n                variant=\"filled\"\r\n                id=\"empresa\"\r\n                required\r\n                error={error.empresa}\r\n                select\r\n                disabled={empresasList.length === 0}\r\n                label=\"Empresa\"\r\n                value={submitData.empresa}\r\n                onChange={(e)=>{\r\n                    setSubmitData({\r\n                        ...submitData, \r\n                        empresa: e.target.value, \r\n                        empresa_id:  empresasList.filter(n=>n.empresa===e.target.value)[0].id,\r\n                        ne: empresasList.filter(n=>n.empresa===e.target.value)[0].ne,\r\n                        ne_id: empresasList.filter(n=>n.empresa===e.target.value)[0].id,\r\n                        cabimento: empresasList.filter(n=>n.empresa===e.target.value)[0].cabimento\r\n                    })\r\n                }}\r\n            >\r\n                {[...new Set(empresasList.map(e=>e.empresa))].map(e=>{\r\n                    return (\r\n                        <MenuItem key={e} value={e}>\r\n                            {e}\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n            </TextField>}\r\n           \r\n             {submitData.ne && <TextField\r\n                variant=\"filled\"\r\n                id=\"ne\"\r\n                required\r\n                disabled={empresasList.length === 0}\r\n                select\r\n                label=\"Nota de Encomenda\"\r\n                value={submitData.ne}\r\n                helperText={submitData.ne !== \"\" && empresasList.length > 0 ? `Saldo disponível: ${empresasList.filter(e=> e.ne === submitData.ne)[0].saldo_disponivel}€`: \"\"}\r\n                onChange={(evt, name)=>{\r\n                    setSubmitData({\r\n                        ...submitData, \r\n                        ne: evt.target.value,\r\n                        cabimento: name.props.name,\r\n                        ne_id: name.key.substring(2,name.key.length)\r\n                    })\r\n                }}\r\n            >\r\n                {empresasList.filter(n=>n.empresa===submitData.empresa).map(n =>{\r\n                    \r\n                    return (\r\n                        <MenuItem id={n.id} name={n.cabimento} key={n.id} value={n.ne}>\r\n                            {n.ne}\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n            </TextField>}\r\n\r\n            <TextField\r\n                required\r\n                error={error.proposta}\r\n                id=\"proposta\"\r\n                label=\"Proposta\"\r\n                value={submitData.proposta}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n            \r\n            <TextField\r\n                id=\"notas\"\r\n                label=\"Notas\"\r\n                value={submitData.notas}\r\n                onChange={onChangeInput}\r\n                multiline\r\n                rows={4}\r\n                variant=\"filled\"\r\n            />\r\n\r\n            <Button onClick={()=>setAddArtigo(true)}>adicionar artigo</Button>\r\n            \r\n            <List dense={true}>\r\n                {\r\n                    submitData.artigos.map((a, index)=>{\r\n                        return (\r\n                            <ListItem style={{\r\n                                background: \"#D1E9FF\"\r\n                            }} key={\"artigo_\" + a.id}>\r\n                                    <ListItemText primary={`${a.quantidade} unidade(s) de ${a.artigo}`} secondary={`${a.referencia_artigo} -  ${a.preco*a.quantidade} €`} />\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton onClick={()=>{\r\n                                                let tempArtigo = submitData.artigos\r\n                                                tempArtigo.splice(index,1)\r\n                                                setSubmitData({\r\n                                   \r\n                                                    ...submitData,\r\n                                                    artigos: tempArtigo,\r\n                                                    valor_total: submitData.valor_total - (a.preco*a.quantidade)\r\n                                                })\r\n                                        }} style={{color: \"#e74c3c\"}}>\r\n                                            <DeleteIcon/>\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n            \r\n           {id && <Button color=\"error\" onClick={()=>setAddFat(true)}>adicionar fatura</Button>}\r\n\r\n           {id && <List dense={true}>\r\n                {\r\n                    faturas.data.map((f, index)=>{\r\n                        return (\r\n                            <ListItem style={{\r\n                                background: \"#f8e6ff\"\r\n                            }} key={\"fatura_\" + f.id}>\r\n                                    <ListItemText primary={`${f.name} com o valor de ${f.valor_fatura}€`} secondary={`Emitida a ${f.data_emissao.substring(0,10)}`} />\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton onClick={()=>{\r\n                                                setOpenDelete(true)\r\n                                                setSelectedFaturaID(f.id) \r\n                                        }} style={{color: \"#e74c3c\"}}>\r\n                                            <DeleteIcon/>\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>}\r\n\r\n            {empresasList.length > 0 && !id &&<>\r\n                {Number(empresasList.filter(e=> e.ne === submitData.ne)[0].saldo_disponivel) < submitData.valor_total && <Typography color=\"error\">\r\n                    A nota de encomenda selecionada não tem saldo suficiente\r\n                </Typography>}\r\n            </>}\r\n\r\n            \r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{\r\n                    marginTop: 30\r\n                }}\r\n                onClick={()=>onSubmitForm()}\r\n                disabled={\r\n                    !id? empresasList.length > 0? Number(empresasList.filter(e=> e.ne === submitData.ne)[0].saldo_disponivel) < Number(submitData.valor_total) : true: false\r\n                }\r\n            >\r\n                Submeter\r\n            </Button>\r\n        </FormComponent>\r\n\r\n       \r\n        \r\n    )\r\n}\r\n\r\nconst FetchEmpresasByRubrica = ({\r\n    setFetchEmpresas,\r\n    setSubmitData,\r\n    submitData,\r\n    selectedRubrica,\r\n    setEmpresasList,\r\n    id,\r\n    pedido\r\n})=>{\r\n    const {\r\n        data: empresas, \r\n        isFetching: fetchingEmpresas, \r\n    } = useGetEmpresasByRubrica(selectedRubrica)\r\n \r\n    React.useEffect(()=>{\r\n        if(!fetchingEmpresas){    \r\n            setSubmitData({\r\n                ...submitData, \r\n                empresa: id? pedido.data.empresa :empresas.data.length > 0?empresas.data[0].empresa : \"\",\r\n                ne: id? pedido.data.ne :empresas.data.length > 0? empresas.data[0].ne: \"\",\r\n                cabimento: id? pedido.data.cabimento :empresas.data.length > 0? empresas.data[0].cabimento: \"\",\r\n                ne_id: id? pedido.data.ne_id :empresas.data.length > 0? empresas.data[0].id: \"\"\r\n            })\r\n            setEmpresasList(empresas.data)\r\n            setFetchEmpresas(false)\r\n        }\r\n    },[fetchingEmpresas])\r\n    return <CircularProgress color=\"primary\" />\r\n}\r\n\r\nexport default  PedidosForm\r\n\r\n","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Components\\FormComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\RubricasComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\GruposRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\ArtigosRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SearchArticle.jsx",["261","262"],"import React from 'react'\r\nimport {useGetArticle} from \"../../Domain/useCases\"\r\nconst SearchArticle = ({\r\n    term, \r\n    setArticlesResult, \r\n    performSearch, \r\n    setPerformSearch\r\n}) => {\r\n    const {\r\n        data: articles, \r\n        isFetching, \r\n        refetch\r\n    } = useGetArticle(term)\r\n    React.useEffect(()=>{\r\n        if(performSearch){\r\n            refetch()\r\n        }\r\n    },[performSearch])\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching ){\r\n            setArticlesResult(articles.data)\r\n            setPerformSearch(false)\r\n        }\r\n    }, [isFetching])\r\n    return (\r\n        <>\r\n            {/* {performSearch && <CircularProgress size={20} color=\"primary\" />} */}\r\n        </>\r\n    )\r\n}\r\nexport default SearchArticle","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SubmitForm.jsx",["263"],"import React from 'react'\r\nimport Loading from \"../../Components/Loading\"\r\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nconst SubmitForm = ({\r\n    data,\r\n    id,\r\n    submitFunction\r\n}) => {\r\n    const {\r\n        data: response, \r\n        isFetching\r\n    } = submitFunction(data, id)\r\n    \r\n    if(isFetching) return <Loading msg=\"A registar pedido...\" />\r\n    return (\r\n        <div className=\"formSubmitedContainer\">\r\n            <LibraryAddCheckIcon style={{fontSize: 200, color: \"#2ecc71\"}} />\r\n            <Typography variant=\"h4\">A operação foi realizada com sucesso</Typography>\r\n            <Button variant=\"contained\"component={Link} to=\"/pedidos\" color=\"primary\">Ver lista de pedidos</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitForm","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\RubricasComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\FaturasComponent.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\ArtigosPage\\ArtigosComponent.jsx",["264"],"import React from 'react'\r\nimport {useGetArtigos} from \"../../Domain/useCases\"\r\nimport Loading from \"../../Components/Loading\"\r\nimport {List, Paper,Button, IconButton,InputBase,ListItem, Avatar,ListItemAvatar,ListItemText, ListItemSecondaryAction, Typography, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, TextField} from \"@material-ui/core\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchArticle from \"../PedidosFormPage/SearchArticle\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddArtigo from \"../PedidosFormPage/AddArtigo\"\r\nimport DeleteArtigo from \"./DeleteArtigo\"\r\n\r\n\r\nconst ArtigosComponent = () => {\r\n    const [searchTerm, setSearchData] = React.useState(\"\")\r\n    const [performSearch, setPerfomSearch] = React.useState(\"\")\r\n    const [articlesList, setArticlesList] = React.useState([])\r\n    const [error, setError] = React.useState(false)\r\n    const [searchPerformed, setSearchPerformed] = React.useState(false)\r\n    const [openDelete, setOpenDelete] = React.useState(false);\r\n    const [deleteArtigo, setDeleteArtigo] = React.useState(false);\r\n    const [selectedArtigo, setSelectedArtigo] = React.useState(false);\r\n\r\n    const [addArtigoToDB, setAddArtigoToDB] = React.useState(false)\r\n    const [showAddArtigoForm, setShowAddArtigoForm] = React.useState(false)\r\n    const [tempArticle, setTempArticle] = React.useState({\r\n        name: \"\", \r\n        code: \"\"\r\n    })\r\n    \r\n    const {\r\n        data: artigos, \r\n        isFetching,\r\n        refetch\r\n    } = useGetArtigos()\r\n\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setArticlesList(artigos.data)\r\n            setSearchData(\"\")\r\n            setSearchPerformed(false)\r\n        }\r\n    },[isFetching])\r\n\r\n    if(isFetching) return <Loading msg=\"A carregar artigos...\" />\r\n    return (\r\n        <div className=\"artigosContainer\">\r\n            <Dialog onClose={()=>{\r\n                setOpenDelete(false)\r\n            }} aria-labelledby=\"simple-dialog-title\" open={openDelete}>\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Tem a certeza que pretende apagar o artigo?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        O artigo será apagado permanentemente da base de dados. Tem a certeza que pretende continuar?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!deleteArtigo && <Button style={{color: \"#e74c3c\"}}onClick={()=>{setDeleteArtigo(true)}}>\r\n                        apagar\r\n                    </Button>}\r\n                    {deleteArtigo && <DeleteArtigo\r\n                        id={selectedArtigo} \r\n                        setOpenDelete={setOpenDelete}\r\n                        setDeleteArtigo={setDeleteArtigo}\r\n                        refetch={refetch}\r\n                        />}\r\n                    <Button onClick={()=>setOpenDelete(false)} autoFocus>\r\n                        cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n            <Dialog open={showAddArtigoForm} onClose={()=>{\r\n                setShowAddArtigoForm(false)\r\n            }} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Adicionar Artigo</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText>\r\n                    Preencha o formulário para adicionar o artigo na base de dados\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"normal\"\r\n                    id=\"name\"\r\n                    label=\"Artigo\"\r\n                    fullWidth\r\n                    value={tempArticle.name}\r\n                    onChange={(e)=>{\r\n                        setTempArticle({\r\n                            ...tempArticle, \r\n                            name: e.target.value\r\n                        })\r\n                    }}\r\n                />\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"normal\"\r\n                    id=\"code\"\r\n                    label=\"Código do artigo\"\r\n                    fullWidth\r\n                    value={tempArticle.code}\r\n                    onChange={(e)=>{\r\n                        setTempArticle({\r\n                            ...tempArticle, \r\n                            code: e.target.value\r\n                        })\r\n                    }}\r\n                />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>{\r\n                        setShowAddArtigoForm(false)\r\n                    }}>\r\n                        Cancel\r\n                    </Button>\r\n                    {!addArtigoToDB && <Button \r\n                    disabled={tempArticle.name=== \"\" || tempArticle.code === \"\"}\r\n                    onClick={()=>{\r\n                        setShowAddArtigoForm(false)\r\n                        setAddArtigoToDB(true)\r\n                    }} color=\"primary\">\r\n                        adicionar\r\n                    </Button>}\r\n                    {addArtigoToDB && <AddArtigo \r\n                        setAddArtigoToDB={setAddArtigoToDB}\r\n                        setTempArticle={setTempArticle}\r\n                        setShowAddArtigoForm={setShowAddArtigoForm}\r\n                        tempArticle={null}\r\n                        artigo={tempArticle}\r\n                        articlesMainPage={true} \r\n                        refetch={refetch}\r\n                    />}\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n\r\n            {performSearch && <SearchArticle\r\n                 term={searchTerm}\r\n                 setArticlesResult={setArticlesList}\r\n                 performSearch={false}\r\n                 setPerformSearch={setPerfomSearch}\r\n            />}\r\n             <div className=\"artigosHeader\">\r\n                <Button  onClick={()=>setShowAddArtigoForm(true)} style={{backgroundColor: \"#2ecc71\"}} variant=\"contained\">adicionar artigo</Button>\r\n                <Paper className=\"searchContainer\">\r\n                <form action=\"\" onSubmit={(e)=>e.preventDefault()}>\r\n                    <InputBase style={{\r\n                        marginRight: 10\r\n                    }}\r\n                    error={error}\r\n                    onKeyDown={e=>{\r\n                        if(e.key === \"Enter\" && searchTerm !== \"\"){\r\n                            setPerfomSearch(true)\r\n                            setSearchPerformed(true)\r\n                        }else{\r\n                            setError(true)\r\n                        }\r\n                    }}\r\n                    fullWidth id=\"term\" placeholder=\"Pesquisar código do artigo\" value={searchTerm} \r\n                    onChange={(e)=>{\r\n                        setSearchData(e.target.value)\r\n                        setError(false)\r\n                    }} />\r\n                        {!searchPerformed && <IconButton onClick={()=>{\r\n                            if(searchTerm !== \"\"){\r\n                                setPerfomSearch(true)\r\n                                setSearchPerformed(true)\r\n                            }else{\r\n                                setError(true)\r\n                            }\r\n                        }}>\r\n                            <SearchIcon />\r\n                        </IconButton>}\r\n                        {searchPerformed && <IconButton onClick={()=>{\r\n                            refetch()\r\n                            setSearchData(\"\")\r\n                            setSearchPerformed(false)\r\n                        }}>\r\n                            <CloseIcon />    \r\n                        </IconButton>}\r\n                    </form>\r\n                </Paper>\r\n            </div>\r\n            <Paper className=\"artigosListContainer\">\r\n               {articlesList.length > 0 && <List dense={true}>\r\n                    {articlesList.sort((a,b)=>{\r\n                        return a.name > b.name? 1 : a.name < b.name ? -1: 0\r\n                    }).map(a=>{\r\n                        return  (\r\n                            <ListItem key={a.id}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar style={{backgroundColor: \"#2ecc71\"}}>\r\n                                        {a.name[0].toUpperCase()}\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={a.name}\r\n                                    secondary={a.code}\r\n                                />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton onClick={()=>{\r\n                                        setSelectedArtigo(a.id)\r\n                                        setOpenDelete(true)\r\n                                    }}edge=\"end\" aria-label=\"delete\">\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                  \r\n                </List>}\r\n                {articlesList.length === 0 && <Typography>\r\n                    Sem artigos para apresentar    \r\n                </Typography>}\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\nexport default ArtigosComponent","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\PerformSearch.jsx",["265"],"import React from 'react'\r\nimport {CircularProgress, IconButton, Snackbar } from \"@material-ui/core\"\r\nimport {useSearchPedidos} from \"../../Domain/useCases\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n const PerformSearch = ({\r\n    word,\r\n    field,\r\n    setSubmitSearch,\r\n    setPedidosList, \r\n    refetch\r\n}) => {\r\n    const {\r\n        data: pedidos, \r\n        isFetching\r\n    } = useSearchPedidos(word, field)\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            if(pedidos.data.length > 0){\r\n                setPedidosList(pedidos)\r\n            }else{\r\n                setOpen(true)\r\n            }\r\n        }\r\n    }, [isFetching])\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        } \r\n        setOpen(false);\r\n        setSubmitSearch(false)\r\n    };\r\n\r\n    if(isFetching) return <CircularProgress size={40} />\r\n\r\n    return (<>\r\n        <IconButton onClick={()=>{\r\n            refetch()\r\n            setSubmitSearch(false)\r\n        }}>\r\n        <CloseIcon />\r\n        </IconButton>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"warning\">\r\n            Não foi encontrado nenhum pedido com o termo pesquisado\r\n            </Alert>\r\n      </Snackbar>\r\n    </>\r\n    )\r\n}\r\nexport default PerformSearch\r\n\r\nconst Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\DeletePedidoComponent.jsx",["266","267"],"import React from 'react'\r\nimport {useDeletePedido} from \"../../Domain/useCases\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\n\r\n const DeletePedidoComponent = ({ \r\n    id,\r\n    setOpenDelete,\r\n    setDeletePedido,\r\n    refetch\r\n }) => {\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useDeletePedido(id)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setOpenDelete(false)\r\n            refetch()\r\n            setDeletePedido(false)\r\n        }\r\n    }, [isFetching])\r\n    \r\n    if(isFetching) return (<CircularProgress />)\r\n    return <></>\r\n}\r\nexport default DeletePedidoComponent\r\n\r\n","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\GerirGruposPage.jsx",["268","269"],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\AddGroup\\AddGroup.jsx",["270"],"import React from 'react'\r\nimport {useParams} from \"react-router-dom\"\r\nimport FormComponent from \"../../Components/FormComponent\"\r\nimport {List , ListItem,Button,ListItemText,ListItemSecondaryAction, TextField,  Typography, IconButton,  Popover, ListItemIcon} from \"@material-ui/core\"\r\nimport Loading from \"../../Components/Loading\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SubmitForm from \"./SubmitForm\"\r\nimport {useNovoGrupo, useGetGrupoByID, useEditGrupo} from \"../../Domain/useCases\"\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ColorPicker, { useColor } from \"react-color-palette\";\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\n\r\nconst AddGroup = () => {\r\n    let { id } = useParams();\r\n    \r\n    const {\r\n        data: grupo, \r\n        isFetching\r\n    } = useGetGrupoByID(id)\r\n\r\n    const [color, setColor] = useColor(\"hex\", \"#121212\");\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [submitForm, setSubmitForm] = React.useState(false);\r\n    const [tempMembro, setTempMembro] = React.useState(\"\");\r\n    const [submitData, setSubmitData] = React.useState({\r\n        name: \"\",\r\n        abrv: \"\", \r\n        color: \"\", \r\n        membros: []\r\n    })\r\n    const [error, setError] = React.useState({\r\n        name: false,\r\n        abrv: false, \r\n        color: false, \r\n        membros: false\r\n    })\r\n    \r\n    const onChangeInput = (e)=>{\r\n        setSubmitData({\r\n            ...submitData,\r\n            [e.target.id]: e.target.value\r\n        })\r\n        setError({\r\n            ...error, \r\n            [e.target.id]: false\r\n        })\r\n    }\r\n    const onSubmitForm = ()=>{\r\n        let tempError = {}\r\n        Object.keys(error).forEach(key=>{\r\n            if(key!== \"membros\" && submitData[key] === \"\"){\r\n                tempError={\r\n                    ...tempError,\r\n                    [key]: true\r\n                }\r\n            }\r\n            else if (key === \"membros\" && submitData.membros.length === 0){\r\n                tempError={\r\n                    ...tempError,\r\n                    [key]: true\r\n                }\r\n            }            \r\n        })\r\n        setError({\r\n            ...error, \r\n            ...tempError\r\n        })\r\n        if(Object.values(tempError).length === 0){\r\n            setSubmitForm(true)\r\n        }\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching ){\r\n            if(id){\r\n                setSubmitData({\r\n                    name: grupo.data.name,\r\n                    abrv: grupo.data.abrv, \r\n                    color: grupo.data.color, \r\n                    membros: grupo.data.membros\r\n                })\r\n            }\r\n        }\r\n    }, [isFetching])\r\n\r\n\r\n\r\n    if(isFetching) return <Loading msg=\"A carregar dados do grupo\" />\r\n    if(submitForm)  return <SubmitForm data={submitData}  id={id} submitFunction={id? useEditGrupo: useNovoGrupo}/>\r\n    return (\r\n        <FormComponent title={id? `Editar o Grupo ${grupo.data.name}`: \"Registo de Novo Grupo\"}>\r\n            <TextField\r\n                error={error.name}\r\n                required\r\n                id=\"name\"\r\n                label=\"Nome do Grupo\"\r\n                value={submitData.name}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n           \r\n            <div style={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                alignItems: \"center\"\r\n            }}>\r\n                <IconButton style={{\r\n                    marginRight: 10,\r\n                    marginBottom: 20\r\n                }} onClick={(e)=>{\r\n                    setAnchorEl(e.target)\r\n                }}>\r\n                    <ColorLensIcon style={{color: submitData.color}}/>\r\n                </IconButton>\r\n                <TextField\r\n                    fullWidth\r\n                    required\r\n                    error={error.abrv}\r\n                    id=\"abrv\"\r\n                    label=\"Abreviatura\"\r\n                    value={submitData.abrv}\r\n                    onChange={onChangeInput}\r\n                    variant=\"filled\"\r\n                />\r\n                \r\n            </div>\r\n            <Popover\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={()=>setAnchorEl(null)}\r\n                 anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                  }}\r\n            >\r\n                <ColorPicker width={200} height={100} color={color} onChange={(c)=>{\r\n                    setSubmitData({\r\n                        ...submitData,\r\n                        color: c.hex\r\n                    })\r\n                    setColor(c)\r\n                    }} dark />\r\n\r\n            </Popover>\r\n            \r\n            <div className=\"formTitleContainer\">\r\n                <Typography color=\"primary\" >Adicionar Membro</Typography>\r\n            </div>\r\n            <TextField\r\n                id=\"name\"\r\n                label=\"Nome\"\r\n                onKeyDown={(e)=>{\r\n                    if(e.key=== \"Enter\"){\r\n                        let tmpM = submitData.membros\r\n                        tmpM.push(tempMembro)\r\n                        setSubmitData({\r\n                            ...submitData,\r\n                            membros: tmpM\r\n                        })\r\n                        setTempMembro(\"\")\r\n                    }\r\n                }}\r\n                value={tempMembro}\r\n                onChange={(e)=>{setTempMembro(e.target.value)}}\r\n                variant=\"filled\"\r\n            />\r\n           \r\n            <Button\r\n                variant=\"contained\"\r\n                disabled={tempMembro === \"\"}\r\n                onClick={()=>{\r\n                    let tmpM = submitData.membros\r\n                    tmpM.push(tempMembro)\r\n                    setSubmitData({\r\n                        ...submitData,\r\n                        membros: tmpM\r\n                    })\r\n                    setTempMembro(\"\")\r\n                }}\r\n            >\r\n                adicionar membro\r\n            </Button>\r\n            <List>\r\n                {\r\n                    submitData.membros.map((m, index)=>{\r\n                        return (\r\n                            <ListItem style={{\r\n                                background: \"#ecf0f1\"\r\n                            }} key={\"membro_\" + index}>\r\n                                <ListItemIcon>\r\n                                    <AccountCircleIcon color=\"primary\" />\r\n                                </ListItemIcon>\r\n                                    <ListItemText primary={m} />\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton onClick={()=>{\r\n                                                let tempM = submitData.membros\r\n                                                tempM.splice(index,1)\r\n                                                setSubmitData({\r\n                                                    ...submitData,\r\n                                                    membros: tempM\r\n                                                })\r\n                                        }} style={{color: \"#e74c3c\"}}>\r\n                                            <DeleteIcon/>\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{\r\n                    marginTop: 30\r\n                }}\r\n                onClick={()=>onSubmitForm()}\r\n            >\r\n                Submeter\r\n            </Button>\r\n        </FormComponent>\r\n\r\n    )\r\n}\r\nexport default AddGroup","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\AddGroup\\SubmitForm.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DeleteGrupoComponent.jsx",["271"],"import React from 'react'\r\nimport {useDeleteGrupo} from \"../../Domain/useCases\"\r\nimport { CircularProgress} from \"@material-ui/core\"\r\n\r\n const DeletePedidoComponent = ({\r\n    id,\r\n    selectedDistID,\r\n    setDeleteResult,\r\n    setDeleteGrupo\r\n }) => {\r\n\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useDeleteGrupo(id, selectedDistID)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setDeleteResult(result)\r\n            setDeleteGrupo(false)\r\n        }\r\n    }, [isFetching])\r\n\r\n    if(isFetching) return (<CircularProgress />)\r\n    return (<></>)\r\n}\r\nexport default DeletePedidoComponent\r\n\r\n","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\MembersComponent.jsx",["272"],"import React from 'react'\r\nimport {useGetGrupoMembros} from \"../../Domain/useCases\"\r\nimport {Typography, IconButton,CircularProgress, List, ListItem,ListItemText, ListItemIcon} from \"@material-ui/core\"\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {Bar} from \"react-chartjs-2\"\r\nimport RandomColor from \"randomcolor\"\r\n\r\nconst MembersComponent = ({\r\n    id,\r\n    setCollapse,\r\n    selectedYear\r\n}) => {\r\n    const [membersDatasets, setMemberDataset] = React.useState([])\r\n    const {\r\n        data: membros, \r\n        isFetching\r\n    } = useGetGrupoMembros(id)\r\n\r\n    React.useEffect(()=>{\r\n        let tempMembersDatasets=[]\r\n            if(!isFetching){\r\n            membros.data.forEach(m=>{\r\n                const orderedDataMembers = []\r\n                const rc = RandomColor()\r\n                const currentMembroDist = m.dist.filter(d=>d.year=== selectedYear)[0]\r\n                for (let j = 1; j< 13; j++){\r\n                    orderedDataMembers.push(Number(currentMembroDist[`m${j}`]))\r\n                }\r\n                tempMembersDatasets.push({\r\n                    label: m.name, \r\n                    data: orderedDataMembers, \r\n                    backgroundColor: rc,\r\n                    fill: true,\r\n                    borderColor: rc\r\n                })\r\n            })\r\n            \r\n            setMemberDataset(tempMembersDatasets)\r\n        }\r\n    }, [isFetching])\r\n\r\n    if (isFetching) \r\n    return <div style={{\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        margin: \"20px\"\r\n    }}>\r\n        <CircularProgress />\r\n    </div>\r\n\r\n    return (\r\n         <div className=\"groupDetailsContainer\">\r\n            <div className=\"titleContainer\">\r\n                <Typography >Distribuição Monetária Anual</Typography>\r\n                <IconButton onClick={()=>setCollapse(null)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </div>\r\n            <div className=\"graphContainer\">\r\n                <Bar\r\n                    width={80}\r\n                    height={25}\r\n                    data={{\r\n                        labels: [\"Jan\", \"Fev\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Ag\", \"Set\", \"Out\", \"Nov\", \"Dez\"], \r\n                        datasets: membersDatasets? membersDatasets: []\r\n                    }}\r\n                    options={{\r\n                        tooltips:{\r\n                            enabled: true\r\n                        },\r\n                        elements: {\r\n                            point:{\r\n                                radius: 0\r\n                            }\r\n                        },\r\n                        responsive: true, \r\n                        \r\n                        chartArea: {\r\n                            backgroundColor: 'rgba(251, 85, 85, 0.4)'\r\n                        }, \r\n                        maintainAspectRatio: true,\r\n                        legend:{\r\n                            display: false, \r\n                            position: \"top\",\r\n                            align:\"center\",\r\n                            labels: {\r\n                                fontColor: \"white\",\r\n                            }\r\n                            \r\n                        },\r\n                    \r\n                        scales:{\r\n                            xAxes: [{\r\n                                display: true,\r\n                                gridLines: {\r\n                                    display: true,\r\n                                    color: \"#ecf0f1\"\r\n                                },\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: `Ano de ${new Date().getFullYear()}`, \r\n                                    fontColor: \"#666\"\r\n                                },\r\n                                ticks:{\r\n                                    fontColor: \"#666\"\r\n                                },\r\n                                stacked: true,\r\n                            }],\r\n                            yAxes: [{\r\n                                display: true,\r\n                                gridLines: {\r\n                                    display: true,\r\n                                    color: \"#ecf0f1\"\r\n                                },\r\n                                \r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: 'Montante gasto (€)', \r\n                                    fontColor: \"#666\"\r\n                                },\r\n                                ticks:{\r\n                                    fontColor: \"#666\"\r\n                                } \r\n                            }]\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"titleContainer\">\r\n                <Typography color=\"primary\">Membros do Grupo</Typography>\r\n            </div>\r\n            <List style={{paddingLeft: 20}} component=\"div\" >\r\n                {membros.data.map(m=>{\r\n                    return (\r\n                        <ListItem key={m.id}>\r\n                            <ListItemIcon >\r\n                                <AccountCircleIcon color=\"primary\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={m.name} />\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\nexport default MembersComponent","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\EmpresasForm.jsx",["273","274","275"],"import React from 'react'\r\nimport {useParams} from \"react-router-dom\"\r\nimport FormComponent from \"../../Components/FormComponent\"\r\nimport {List ,Dialog,DialogTitle,DialogContent,DialogContentText,DialogActions, ListItem, Button,ListItemText,ListItemSecondaryAction, TextField,  Typography, IconButton,  Popover, ListItemIcon, MenuItem} from \"@material-ui/core\"\r\nimport Loading from \"../../Components/Loading\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SubmitForm from \"./SubmitForm\"\r\nimport {useAddEmpresa, useGetEmpresaById, useEditEmpresa, useGetRubricasByEmppresa} from \"../../Domain/useCases\"\r\nimport WidgetsIcon from '@material-ui/icons/Widgets';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GestureIcon from '@material-ui/icons/Gesture';\r\nimport AddNE from \"./AddNE\"\r\nimport DeleteNES from \"./DeleteNES\"\r\nimport BuildIcon from '@material-ui/icons/Build';\r\n\r\nconst EmpresasForm = () => {\r\n    let { id } = useParams();\r\n\r\n    const {\r\n        data: empresa, \r\n        isFetching\r\n    } = useGetEmpresaById(id)\r\n    \r\n    const {\r\n        data: nes, \r\n        isFetching: fetchingNES,\r\n        refetch\r\n    } = useGetRubricasByEmppresa(id)\r\n\r\n    const [submitForm, setSubmitForm] = React.useState(false);\r\n    const [addNE, setAddNe] = React.useState(false);\r\n    const [submitAddNE, setSubmitAddNE] = React.useState(false);\r\n    const [openDelete, setOpenDelete] = React.useState(false);\r\n    const [deleteNE, setDeleteNE] = React.useState(false);\r\n    const [selectedNEID, setSelectedNEID] = React.useState(null);\r\n\r\n    const [tempNE, setTempNE] = React.useState({\r\n        ne: \"\",\r\n        cabimento: \"\",\r\n        compromisso: \"\",\r\n        rubrica: \"PM\",\r\n        saldo_abertura: 0,\r\n        data_registo: \"\",\r\n        data_registo_timestamp: \"\",\r\n    });\r\n\r\n    const [submitData, setSubmitData] = React.useState({\r\n        empresa: \"\",\r\n        nif: \"\",\r\n        morada: \"\",\r\n        cp: \"\", \r\n        localidade: \"\",\r\n        distrito: \"\",\r\n    })\r\n    const [error, setError] = React.useState(false)\r\n\r\n    const onChangeInput = (e)=>{\r\n        setSubmitData({\r\n            ...submitData,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onChangeInputNE = (e)=>{\r\n        setTempNE({\r\n            ...tempNE,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching  && !fetchingNES){\r\n            if(id){\r\n                setSubmitData({\r\n                    ...submitData, \r\n                    ...empresa.data,\r\n                })\r\n            }\r\n        }\r\n    }, [isFetching, fetchingNES])\r\n\r\n    if(isFetching || fetchingNES) return <Loading msg=\"A carregar dados da empresa\" />\r\n    if(submitForm)  return <SubmitForm data={submitData} nesIDs={nes.data? nes.data.map(n=>n.id): null} id={id} submitFunction={id? useEditEmpresa: useAddEmpresa}/>\r\n    return (\r\n        <FormComponent title={id? `Editar a empresa ${empresa.data.empresa}`: \"Registo de Novo Fornecedor\"}>\r\n            {id && <Dialog open={addNE} onClose={()=>setAddNe(false)} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Adicionar Nota de Encomenda</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Por favor preencha todos os dados para adicionar uma nova nota de encomenda associada a esta empresa\r\n                    </DialogContentText>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                            variant=\"filled\"\r\n                            id=\"ne\"\r\n                            label=\"Nota de Encomenda\"\r\n                            fullWidth\r\n                            onChange={onChangeInputNE}\r\n                            value={tempNE.ne}\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            id=\"cabimento\"\r\n                            label=\"Cabimento\"\r\n                            fullWidth\r\n                            onChange={onChangeInputNE}\r\n                            value={tempNE.cabimento}\r\n                        />\r\n                         <TextField\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            id=\"compromisso\"\r\n                            label=\"Comprimisso\"\r\n                            fullWidth\r\n                            onChange={onChangeInputNE}\r\n                            value={tempNE.compromisso}\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            id=\"rubrica\"\r\n                            fullWidth\r\n                            required\r\n                            select\r\n                            label=\"Rúbrica\"\r\n                            value={tempNE.rubrica}\r\n                            onChange={(e)=>{\r\n                                setTempNE({\r\n                                    ...tempNE, \r\n                                    rubrica: e.target.value,\r\n                                })\r\n                            }}\r\n                        >\r\n                            <MenuItem value=\"PM\">\r\n                               <WidgetsIcon style={{color: \"#3498db\", marginRight: 10}} /> Materiais\r\n                            </MenuItem>\r\n                            <MenuItem value=\"PR\">\r\n                               <WhatshotIcon style={{color: \"#e74c3c\", marginRight: 10}}/> Reagentes\r\n                            </MenuItem>\r\n                            <MenuItem value=\"SEQ\">\r\n                               <GestureIcon style={{color: \"#9b59b6\", marginRight: 10}}/> Sequenciação\r\n                            </MenuItem>\r\n                            <MenuItem value=\"SEQ\">\r\n                               <BuildIcon style={{color: \"#f39c12\", marginRight: 10}}/> Reparações\r\n                            </MenuItem>\r\n                        </TextField>\r\n                         <TextField\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            id=\"saldo_abertura\"\r\n                            label=\"Montante\"\r\n                            fullWidth\r\n                            onChange={onChangeInputNE}\r\n                            type=\"number\"\r\n                            value={tempNE.saldo_abertura}\r\n                        />\r\n                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={()=>setAddNe(false)} color=\"primary\">\r\n                            Cancelar\r\n                        </Button>\r\n                        {submitAddNE && <AddNE \r\n                            ne={tempNE}\r\n                            empresa={submitData.empresa}\r\n                            empresaID={id}\r\n                            refetch={refetch}\r\n                            setAddNe={setAddNe}\r\n                            setSubmitAddNE={setSubmitAddNE}\r\n                            setTempNE={setTempNE}\r\n                        />}\r\n                        {!submitAddNE && <Button onClick={()=>{\r\n                            if(tempNE.ne !== \"\"){\r\n                               setSubmitAddNE(true)\r\n                            }\r\n                        }} color=\"primary\">\r\n                            Adicionar\r\n                        </Button>}\r\n                </DialogActions>\r\n            </Dialog>}\r\n            <Dialog onClose={()=>{\r\n                setOpenDelete(false)\r\n            }} aria-labelledby=\"simple-dialog-title\" open={openDelete}>\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Tem a certeza que pretende apagar a nota de encomenda\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        A nota de encomenda será apagada permanentemente da base de dados. Tem a certeza que pretende continuar?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!deleteNE && <Button style={{color: \"#e74c3c\"}}onClick={()=>{setDeleteNE(true)}}>\r\n                        apagar\r\n                    </Button>}\r\n                    {deleteNE && <DeleteNES\r\n                        id={selectedNEID} \r\n                        setOpenDelete={setOpenDelete}\r\n                        refetch={refetch}\r\n                        setDeleteNE={setDeleteNE}\r\n                        />}\r\n                    <Button onClick={()=>setOpenDelete(false)} autoFocus>\r\n                        cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n            <TextField\r\n                error={error}\r\n                required\r\n                id=\"empresa\"\r\n                label=\"Empresa\"\r\n                value={submitData.empresa}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n           \r\n           <TextField\r\n                id=\"nif\"\r\n                label=\"NIF\"\r\n                value={submitData.nif}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n             <TextField\r\n                id=\"morada\"\r\n                label=\"Morada\"\r\n                value={submitData.morada}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n             <TextField\r\n                id=\"cp\"\r\n                label=\"Código Postal\"\r\n                value={submitData.cp}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n             <TextField\r\n                id=\"localidade\"\r\n                label=\"Localidade\"\r\n                value={submitData.localidade}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n            <TextField\r\n                id=\"distrito\"\r\n                label=\"Distrito\"\r\n                value={submitData.distrito}\r\n                onChange={onChangeInput}\r\n                variant=\"filled\"\r\n            />\r\n\r\n           {id && <Button onClick={()=>{\r\n                setAddNe(true)\r\n            }} color=\"primary\" >adicionar nota de encomenda</Button>}\r\n\r\n            {id && <List dense={true}>\r\n                {nes.data.map((n, index)=>{\r\n                        return (\r\n                            <ListItem style={{\r\n                                background: \"#D1E9FF\"\r\n                            }} key={\"ne_\" + n.id}>\r\n                                <ListItemIcon>\r\n                                    {n.rubrica === \"PM\" && <WidgetsIcon style={{color: \"#3498db\"}} />}\r\n                                    {n.rubrica === \"PR\" && <WhatshotIcon style={{color: \"#e74c3c\"}}/>}\r\n                                    {n.rubrica === \"SEQ\" && <GestureIcon style={{color: \"#9b59b6\"}}/>}\r\n                                    {n.rubrica === \"REP\" && <BuildIcon style={{color: \"#f39c12\"}}/>}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={`${n.ne}`} secondary={`Saldo de abertura: ${n.saldo_abertura}`} />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton onClick={()=>{\r\n                                           setOpenDelete(true)\r\n                                           setSelectedNEID(n.id)\r\n                                    }} style={{color: \"#e74c3c\"}}>\r\n                                        <DeleteIcon/>\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n            </List>}\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{\r\n                    marginTop: 30\r\n                }}\r\n                onClick={()=>{\r\n                    if(submitData.empresa !== \"\" ){\r\n                        setSubmitForm(true)\r\n                    }else setError(true)\r\n                }}\r\n            >\r\n                Submeter\r\n            </Button>\r\n        </FormComponent>\r\n    )\r\n}\r\nexport default EmpresasForm","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\SubmitForm.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\SubmitFatura.jsx",["276","277"],"import React from 'react'\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport { useAddFatura} from \"../../Domain/useCases\"\r\n\r\nconst SubmitFatura = ({\r\n    fatura,\r\n    setSubmitFatura,\r\n    refetchFaturas,\r\n    setAddFat,\r\n    setTempFatura\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching\r\n    } = useAddFatura(fatura)\r\n    \r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            refetchFaturas()\r\n            setAddFat(false)\r\n            setTempFatura({\r\n                name: \"\", \r\n                data_emissao: \"\", \r\n                valor_fatura: 0, \r\n                notas: \"\", \r\n            })\r\n            setSubmitFatura(false)\r\n        }\r\n    },[isFetching])\r\n\r\n    if(isFetching)return <CircularProgress/>\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default SubmitFatura","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\DeleteFatura.jsx",["278","279"],"import React from 'react'\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport { useDeleteFatura} from \"../../Domain/useCases\"\r\n\r\nconst DeleteFatura = ({\r\n    id,\r\n    setOpenDelete,\r\n    refetch,\r\n    setDeleteFatura\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching,\r\n    } = useDeleteFatura(id)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setOpenDelete(false)\r\n            refetch()\r\n            setDeleteFatura(false)\r\n        }\r\n    }, [isFetching])\r\n\r\n    if(isFetching) return <CircularProgress color=\"primary\" />\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteFatura","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\GetFaturasPedido.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\DeleteNES.jsx",["280","281"],"import React from 'react'\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport { useDeleteNES} from \"../../Domain/useCases\"\r\n\r\nconst DeleteNES = ({\r\n    id,\r\n    setOpenDelete,\r\n    refetch,\r\n    setDeleteNE\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching,\r\n    } = useDeleteNES(id)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setOpenDelete(false)\r\n            refetch()\r\n            setDeleteNE(false)\r\n        }\r\n    }, [isFetching])\r\n\r\n    if(isFetching) return <CircularProgress color=\"primary\" />\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DeleteNES","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\EmpresasForm\\AddNE.jsx",["282","283"],"import React from 'react'\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport { useAddNE} from \"../../Domain/useCases\"\r\n\r\nconst AddNE =({\r\n    ne,\r\n    empresa,\r\n    empresaID,\r\n    refetch, \r\n    setAddNe,\r\n    setSubmitAddNE,\r\n    setTempNE\r\n})=> {\r\n    const {\r\n        data: result, \r\n        isFetching\r\n    } = useAddNE({\r\n        ...ne,\r\n        data_registo: new Date().toJSON(),\r\n        data_registo_timestamp: Date.now(),\r\n        saldo_disponivel: ne.saldo_abertura,\r\n        empresa, \r\n        empresa_id: empresaID\r\n    })\r\n    \r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            refetch()\r\n            setAddNe(false)\r\n            setTempNE({\r\n                ne: \"\",\r\n                cabimento: \"\",\r\n                compromisso: \"\",\r\n                rubrica: \"PM\",\r\n                saldo_abertura: 0,\r\n                data_registo: \"\",\r\n                data_registo_timestamp: \"\",\r\n            })\r\n            setSubmitAddNE(false)\r\n        }\r\n    },[isFetching])\r\n\r\n    if(isFetching)return <CircularProgress/>\r\n    \r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default AddNE","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Saldos\\DeleteEmpresa.jsx",["284","285"],"import React from 'react'\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport { useDeleteEmpresa} from \"../../Domain/useCases\"\r\n\r\nconst DeleteEmpresa = ({\r\n    id,\r\n    setOpenDelete,\r\n    refetch,\r\n    setDeleteEmpresa\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching,\r\n    } = useDeleteEmpresa(id)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setOpenDelete(false)\r\n            refetch()\r\n            setDeleteEmpresa(false)\r\n        }\r\n    }, [isFetching])\r\n\r\n    if(isFetching) return <CircularProgress color=\"primary\" />\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default DeleteEmpresa","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\DownloadPDF.jsx",["286"],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\ChangeArtigosStatus.jsx",["287","288","289"],"import React from 'react'\r\nimport {useSetArtigoState} from \"../../Domain/useCases\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\n\r\nconst ChageArtigosStatus = ({\r\n    pedidoID, \r\n    index, \r\n    chegada_data, \r\n    setChegadaArtigosState,\r\n    refetch,\r\n    openArtigoChegadaForm,\r\n    setRefetch\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useSetArtigoState(pedidoID ,index,chegada_data)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            openArtigoChegadaForm(false)\r\n            refetch()\r\n            setChegadaArtigosState(false)\r\n            setRefetch(true)\r\n        }\r\n    }, [isFetching])\r\n    \r\n    // if(isFetching) return (<CircularProgress size={30} />)\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default ChageArtigosStatus","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Pedidos\\FaturarArtigos.jsx",["290","291"],"import React from 'react'\r\nimport {useSetArtigoFaturado} from \"../../Domain/useCases\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\n\r\nconst FaturarArtigos = ({\r\n    pedidoID, \r\n    index, \r\n    faturado, \r\n    refetch,\r\n    setRefetch,\r\n    setChangeArtigoFaturado\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useSetArtigoFaturado(pedidoID ,index,faturado)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            refetch()\r\n            setChangeArtigoFaturado(false)\r\n            setRefetch(true)\r\n        }\r\n    }, [isFetching])\r\n    \r\n    if(isFetching) return (<CircularProgress size={30} />)\r\n    return (<div></div>)\r\n}\r\nexport default FaturarArtigos","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\PedidosFormPage\\AddArtigo.jsx",["292","293"],"import React from 'react'\r\nimport {useAddArtigoToDB} from \"../../Domain/useCases\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\n\r\nconst AddArtigo = ({\r\n    setAddArtigoToDB,\r\n    setTempArticle,\r\n    setShowAddArtigoForm,\r\n    tempArticle,\r\n    artigo,\r\n    articlesMainPage, \r\n    refetch\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useAddArtigoToDB(artigo)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            if(!articlesMainPage){\r\n                setTempArticle({\r\n                    ...tempArticle,\r\n                    referencia_artigo: artigo.code,\r\n                    artigo: artigo.name\r\n                })\r\n            }else{\r\n                setTempArticle({\r\n                    name: \"\", \r\n                    code: \"\"\r\n                })\r\n                refetch()\r\n            }\r\n            setShowAddArtigoForm(false)\r\n            setAddArtigoToDB(false)\r\n        }\r\n    }, [isFetching])\r\n    \r\n    if(isFetching) return (<CircularProgress size={30} />)\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AddArtigo","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\ArtigosPage\\DeleteArtigo.jsx",["294"],"import React from 'react'\r\nimport {useDeleteArtigo} from \"../../Domain/useCases\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\n\r\nconst  DeleteArtigo = ({\r\n    id,\r\n    setOpenDelete,\r\n    setDeleteArtigo,\r\n    refetch\r\n}) => {\r\n    const {\r\n        isFetching \r\n    } = useDeleteArtigo(id)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setOpenDelete(false)\r\n            refetch()\r\n            setDeleteArtigo(false)\r\n        }\r\n    }, [isFetching])\r\n    \r\n    if(isFetching) return (<CircularProgress />)\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default DeleteArtigo","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Services\\ConfigsRepository.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Admin\\SaveConfigs.jsx",["295","296"],"import { CircularProgress } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {useSaveConfig} from \"../../Domain/useCases\"\r\n\r\nconst SaveConfigs = ({\r\n    configs, \r\n    setSaveConfigs,\r\n    setOpenSnackbar\r\n}) => {\r\n\r\n    const {\r\n        data: result, \r\n        isFetching,\r\n    } = useSaveConfig(configs)\r\n\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            setOpenSnackbar(true)\r\n            setSaveConfigs(false)\r\n        }\r\n    }, [isFetching])\r\n\r\n    if(isFetching) return <CircularProgress size={30}/>\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default  SaveConfigs","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\Unauth\\Unauth.jsx",[],"C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DownloadDistCum.jsx",["297"],"import React from 'react'\r\nimport {useDownloadDistCum} from \"../../Domain/useCases\"\r\nimport {saveAs} from \"file-saver\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nconst DownloadDistCum = ({\r\n    setExportDistAnual\r\n}) => {\r\n    const {\r\n        data: result, \r\n        isFetching \r\n    } = useDownloadDistCum()\r\n    React.useEffect(()=>{\r\n        if(!isFetching){\r\n            saveAs(result, `Distribuição Cumulativa ${new Date().getFullYear()}.pdf`)\r\n            setExportDistAnual(false)\r\n        }\r\n    }, [isFetching])\r\n    return (\r\n        <CircularProgress size={20} style={{color: \"white\", marginRight: 10}}/>\r\n    )\r\n}\r\n\r\nexport default DownloadDistCum","C:\\Users\\danie\\Desktop\\gestaopedidos\\src\\Pages\\GerirGrupos\\DownloadDisGrupo.jsx",["298"],{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":56,"column":6,"nodeType":"305","endLine":56,"endColumn":23,"suggestions":"306"},{"ruleId":"303","severity":1,"message":"307","line":46,"column":9,"nodeType":"305","endLine":46,"endColumn":11,"suggestions":"308"},{"ruleId":"303","severity":1,"message":"309","line":59,"column":7,"nodeType":"305","endLine":59,"endColumn":19,"suggestions":"310"},{"ruleId":"303","severity":1,"message":"311","line":100,"column":8,"nodeType":"305","endLine":100,"endColumn":42,"suggestions":"312"},{"ruleId":"313","severity":1,"message":"314","line":14,"column":11,"nodeType":"315","messageId":"316","endLine":14,"endColumn":20},{"ruleId":"303","severity":1,"message":"317","line":32,"column":8,"nodeType":"305","endLine":32,"endColumn":30,"suggestions":"318"},{"ruleId":"313","severity":1,"message":"319","line":4,"column":280,"nodeType":"315","messageId":"316","endLine":4,"endColumn":287},{"ruleId":"313","severity":1,"message":"320","line":51,"column":12,"nodeType":"315","messageId":"316","endLine":51,"endColumn":24},{"ruleId":"303","severity":1,"message":"321","line":182,"column":12,"nodeType":"305","endLine":182,"endColumn":23,"suggestions":"322"},{"ruleId":"303","severity":1,"message":"323","line":781,"column":7,"nodeType":"305","endLine":781,"endColumn":25,"suggestions":"324"},{"ruleId":"303","severity":1,"message":"325","line":18,"column":7,"nodeType":"305","endLine":18,"endColumn":22,"suggestions":"326"},{"ruleId":"303","severity":1,"message":"327","line":25,"column":8,"nodeType":"305","endLine":25,"endColumn":20,"suggestions":"328"},{"ruleId":"313","severity":1,"message":"329","line":12,"column":15,"nodeType":"315","messageId":"316","endLine":12,"endColumn":23},{"ruleId":"303","severity":1,"message":"330","line":43,"column":7,"nodeType":"305","endLine":43,"endColumn":19,"suggestions":"331"},{"ruleId":"303","severity":1,"message":"332","line":28,"column":8,"nodeType":"305","endLine":28,"endColumn":20,"suggestions":"333"},{"ruleId":"313","severity":1,"message":"334","line":12,"column":15,"nodeType":"315","messageId":"316","endLine":12,"endColumn":21},{"ruleId":"303","severity":1,"message":"335","line":22,"column":8,"nodeType":"305","endLine":22,"endColumn":20,"suggestions":"336"},{"ruleId":"313","severity":1,"message":"337","line":23,"column":26,"nodeType":"315","messageId":"316","endLine":23,"endColumn":41},{"ruleId":"303","severity":1,"message":"338","line":74,"column":8,"nodeType":"305","endLine":74,"endColumn":19,"suggestions":"339"},{"ruleId":"303","severity":1,"message":"340","line":84,"column":8,"nodeType":"305","endLine":84,"endColumn":20,"suggestions":"341"},{"ruleId":"303","severity":1,"message":"342","line":22,"column":8,"nodeType":"305","endLine":22,"endColumn":20,"suggestions":"343"},{"ruleId":"303","severity":1,"message":"344","line":41,"column":8,"nodeType":"305","endLine":41,"endColumn":20,"suggestions":"345"},{"ruleId":"313","severity":1,"message":"346","line":4,"column":148,"nodeType":"315","messageId":"316","endLine":4,"endColumn":158},{"ruleId":"313","severity":1,"message":"347","line":4,"column":173,"nodeType":"315","messageId":"316","endLine":4,"endColumn":180},{"ruleId":"303","severity":1,"message":"348","line":80,"column":8,"nodeType":"305","endLine":80,"endColumn":33,"suggestions":"349"},{"ruleId":"313","severity":1,"message":"334","line":13,"column":15,"nodeType":"315","messageId":"316","endLine":13,"endColumn":21},{"ruleId":"303","severity":1,"message":"350","line":29,"column":7,"nodeType":"305","endLine":29,"endColumn":19,"suggestions":"351"},{"ruleId":"313","severity":1,"message":"334","line":12,"column":15,"nodeType":"315","messageId":"316","endLine":12,"endColumn":21},{"ruleId":"303","severity":1,"message":"352","line":22,"column":8,"nodeType":"305","endLine":22,"endColumn":20,"suggestions":"353"},{"ruleId":"313","severity":1,"message":"334","line":12,"column":15,"nodeType":"315","messageId":"316","endLine":12,"endColumn":21},{"ruleId":"303","severity":1,"message":"354","line":22,"column":8,"nodeType":"305","endLine":22,"endColumn":20,"suggestions":"355"},{"ruleId":"313","severity":1,"message":"334","line":15,"column":15,"nodeType":"315","messageId":"316","endLine":15,"endColumn":21},{"ruleId":"303","severity":1,"message":"356","line":41,"column":7,"nodeType":"305","endLine":41,"endColumn":19,"suggestions":"357"},{"ruleId":"313","severity":1,"message":"334","line":12,"column":15,"nodeType":"315","messageId":"316","endLine":12,"endColumn":21},{"ruleId":"303","severity":1,"message":"358","line":22,"column":8,"nodeType":"305","endLine":22,"endColumn":20,"suggestions":"359"},{"ruleId":"303","severity":1,"message":"360","line":24,"column":8,"nodeType":"305","endLine":24,"endColumn":20,"suggestions":"361"},{"ruleId":"313","severity":1,"message":"362","line":3,"column":9,"nodeType":"315","messageId":"316","endLine":3,"endColumn":25},{"ruleId":"313","severity":1,"message":"334","line":15,"column":15,"nodeType":"315","messageId":"316","endLine":15,"endColumn":21},{"ruleId":"303","severity":1,"message":"363","line":26,"column":8,"nodeType":"305","endLine":26,"endColumn":20,"suggestions":"364"},{"ruleId":"313","severity":1,"message":"334","line":14,"column":15,"nodeType":"315","messageId":"316","endLine":14,"endColumn":21},{"ruleId":"303","severity":1,"message":"365","line":24,"column":8,"nodeType":"305","endLine":24,"endColumn":20,"suggestions":"366"},{"ruleId":"313","severity":1,"message":"334","line":15,"column":15,"nodeType":"315","messageId":"316","endLine":15,"endColumn":21},{"ruleId":"303","severity":1,"message":"367","line":37,"column":8,"nodeType":"305","endLine":37,"endColumn":20,"suggestions":"368"},{"ruleId":"303","severity":1,"message":"369","line":21,"column":8,"nodeType":"305","endLine":21,"endColumn":20,"suggestions":"370"},{"ruleId":"313","severity":1,"message":"334","line":12,"column":15,"nodeType":"315","messageId":"316","endLine":12,"endColumn":21},{"ruleId":"303","severity":1,"message":"371","line":21,"column":8,"nodeType":"305","endLine":21,"endColumn":20,"suggestions":"372"},{"ruleId":"303","severity":1,"message":"373","line":18,"column":8,"nodeType":"305","endLine":18,"endColumn":20,"suggestions":"374"},{"ruleId":"303","severity":1,"message":"375","line":24,"column":8,"nodeType":"305","endLine":24,"endColumn":20,"suggestions":"376"},"no-native-reassign",["377"],"no-negated-in-lhs",["378"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.","ArrayExpression",["379"],"React Hook React.useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.",["380"],"React Hook React.useEffect has missing dependencies: 'configs.data.pedido_acabado' and 'configs.data.saldo_th'. Either include them or remove the dependency array.",["381"],"React Hook React.useEffect has a missing dependency: 'pedidos'. Either include it or remove the dependency array.",["382"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","React Hook React.useEffect has a missing dependency: 'pedidosAnual'. Either include it or remove the dependency array.",["383"],"'Divider' is defined but never used.","'deleteResult' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'date', 'grupos.data', 'id', 'pedido.data.artigos', 'pedido.data.data_pedido', 'pedido.data.data_pedido_formated', 'pedido.data.day', 'pedido.data.grupo', 'pedido.data.grupo_abrv', 'pedido.data.grupo_id', 'pedido.data.mounth', 'pedido.data.notas', 'pedido.data.proposta', 'pedido.data.remetente', 'pedido.data.responsavel', 'pedido.data.rubrica', 'pedido.data.valor_total', 'pedido.data.year', and 'today'. Either include them or remove the dependency array.",["384"],"React Hook React.useEffect has missing dependencies: 'empresas.data', 'id', 'pedido.data.cabimento', 'pedido.data.empresa', 'pedido.data.ne', 'pedido.data.ne_id', 'setEmpresasList', 'setFetchEmpresas', 'setSubmitData', and 'submitData'. Either include them or remove the dependency array. If 'setSubmitData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["385"],"React Hook React.useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["386"],"React Hook React.useEffect has missing dependencies: 'articles.data', 'setArticlesResult', and 'setPerformSearch'. Either include them or remove the dependency array. If 'setArticlesResult' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["387"],"'response' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'artigos.data'. Either include it or remove the dependency array.",["388"],"React Hook React.useEffect has missing dependencies: 'pedidos' and 'setPedidosList'. Either include them or remove the dependency array. If 'setPedidosList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["389"],"'result' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'refetch', 'setDeletePedido', and 'setOpenDelete'. Either include them or remove the dependency array. If 'setOpenDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["390"],"'setSelectedYear' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'distAnual.data' and 'grupos.data'. Either include them or remove the dependency array.",["391"],"React Hook React.useEffect has missing dependencies: 'grupo.data.abrv', 'grupo.data.color', 'grupo.data.membros', 'grupo.data.name', and 'id'. Either include them or remove the dependency array.",["392"],"React Hook React.useEffect has missing dependencies: 'result', 'setDeleteGrupo', and 'setDeleteResult'. Either include them or remove the dependency array. If 'setDeleteResult' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["393"],"React Hook React.useEffect has missing dependencies: 'membros.data' and 'selectedYear'. Either include them or remove the dependency array.",["394"],"'Typography' is defined but never used.","'Popover' is defined but never used.","React Hook React.useEffect has missing dependencies: 'empresa.data', 'id', and 'submitData'. Either include them or remove the dependency array. You can also do a functional update 'setSubmitData(s => ...)' if you only need 'submitData' in the 'setSubmitData' call.",["395"],"React Hook React.useEffect has missing dependencies: 'refetchFaturas', 'setAddFat', 'setSubmitFatura', and 'setTempFatura'. Either include them or remove the dependency array. If 'refetchFaturas' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["396"],"React Hook React.useEffect has missing dependencies: 'refetch', 'setDeleteFatura', and 'setOpenDelete'. Either include them or remove the dependency array. If 'setOpenDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["397"],"React Hook React.useEffect has missing dependencies: 'refetch', 'setDeleteNE', and 'setOpenDelete'. Either include them or remove the dependency array. If 'setOpenDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["398"],"React Hook React.useEffect has missing dependencies: 'refetch', 'setAddNe', 'setSubmitAddNE', and 'setTempNE'. Either include them or remove the dependency array. If 'refetch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["399"],"React Hook React.useEffect has missing dependencies: 'refetch', 'setDeleteEmpresa', and 'setOpenDelete'. Either include them or remove the dependency array. If 'setOpenDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["400"],"React Hook React.useEffect has missing dependencies: 'pedidoID', 'refecth', 'result', 'setFazerPedido', and 'setIsRefetch'. Either include them or remove the dependency array. If 'setIsRefetch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["401"],"'CircularProgress' is defined but never used.","React Hook React.useEffect has missing dependencies: 'openArtigoChegadaForm', 'refetch', 'setChegadaArtigosState', and 'setRefetch'. Either include them or remove the dependency array. If 'openArtigoChegadaForm' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["402"],"React Hook React.useEffect has missing dependencies: 'refetch', 'setChangeArtigoFaturado', and 'setRefetch'. Either include them or remove the dependency array. If 'refetch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["403"],"React Hook React.useEffect has missing dependencies: 'articlesMainPage', 'artigo.code', 'artigo.name', 'refetch', 'setAddArtigoToDB', 'setShowAddArtigoForm', 'setTempArticle', and 'tempArticle'. Either include them or remove the dependency array. If 'setShowAddArtigoForm' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["404"],"React Hook React.useEffect has missing dependencies: 'refetch', 'setDeleteArtigo', and 'setOpenDelete'. Either include them or remove the dependency array. If 'setOpenDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["405"],"React Hook React.useEffect has missing dependencies: 'setOpenSnackbar' and 'setSaveConfigs'. Either include them or remove the dependency array. If 'setOpenSnackbar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["406"],"React Hook React.useEffect has missing dependencies: 'result' and 'setExportDistAnual'. Either include them or remove the dependency array. If 'setExportDistAnual' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["407"],"React Hook React.useEffect has missing dependencies: 'fetchingGrupo', 'grupo.data.abrv', 'result', and 'setExportDistAnualGrupo'. Either include them or remove the dependency array. If 'setExportDistAnualGrupo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["408"],"no-global-assign","no-unsafe-negation",{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},"Update the dependencies array to be: [isAuthenticated, user.email]",{"range":"469","text":"470"},"Update the dependencies array to be: [getAccessTokenSilently]",{"range":"471","text":"472"},"Update the dependencies array to be: [configs.data.pedido_acabado, configs.data.saldo_th, isFetching]",{"range":"473","text":"474"},"Update the dependencies array to be: [fetchingPedidos, fetchingEmpresas, pedidos]",{"range":"475","text":"476"},"Update the dependencies array to be: [fetchingPedidosAnual, pedidosAnual]",{"range":"477","text":"478"},"Update the dependencies array to be: [date, grupos.data, id, isLoading, pedido.data.artigos, pedido.data.data_pedido, pedido.data.data_pedido_formated, pedido.data.day, pedido.data.grupo, pedido.data.grupo_abrv, pedido.data.grupo_id, pedido.data.mounth, pedido.data.notas, pedido.data.proposta, pedido.data.remetente, pedido.data.responsavel, pedido.data.rubrica, pedido.data.valor_total, pedido.data.year, today]",{"range":"479","text":"480"},"Update the dependencies array to be: [empresas.data, fetchingEmpresas, id, pedido.data.cabimento, pedido.data.empresa, pedido.data.ne, pedido.data.ne_id, setEmpresasList, setFetchEmpresas, setSubmitData, submitData]",{"range":"481","text":"482"},"Update the dependencies array to be: [performSearch, refetch]",{"range":"483","text":"484"},"Update the dependencies array to be: [articles.data, isFetching, setArticlesResult, setPerformSearch]",{"range":"485","text":"486"},"Update the dependencies array to be: [artigos.data, isFetching]",{"range":"487","text":"488"},"Update the dependencies array to be: [isFetching, pedidos, setPedidosList]",{"range":"489","text":"490"},"Update the dependencies array to be: [isFetching, refetch, setDeletePedido, setOpenDelete]",{"range":"491","text":"492"},"Update the dependencies array to be: [distAnual.data, grupos.data, isLoading]",{"range":"493","text":"494"},"Update the dependencies array to be: [grupo.data.abrv, grupo.data.color, grupo.data.membros, grupo.data.name, id, isFetching]",{"range":"495","text":"496"},"Update the dependencies array to be: [isFetching, result, setDeleteGrupo, setDeleteResult]",{"range":"497","text":"498"},"Update the dependencies array to be: [isFetching, membros.data, selectedYear]",{"range":"499","text":"500"},"Update the dependencies array to be: [isFetching, fetchingNES, id, submitData, empresa.data]",{"range":"501","text":"502"},"Update the dependencies array to be: [isFetching, refetchFaturas, setAddFat, setSubmitFatura, setTempFatura]",{"range":"503","text":"504"},"Update the dependencies array to be: [isFetching, refetch, setDeleteFatura, setOpenDelete]",{"range":"505","text":"506"},"Update the dependencies array to be: [isFetching, refetch, setDeleteNE, setOpenDelete]",{"range":"507","text":"508"},"Update the dependencies array to be: [isFetching, refetch, setAddNe, setSubmitAddNE, setTempNE]",{"range":"509","text":"510"},"Update the dependencies array to be: [isFetching, refetch, setDeleteEmpresa, setOpenDelete]",{"range":"511","text":"512"},"Update the dependencies array to be: [isFetching, pedidoID, refecth, result, setFazerPedido, setIsRefetch]",{"range":"513","text":"514"},"Update the dependencies array to be: [isFetching, openArtigoChegadaForm, refetch, setChegadaArtigosState, setRefetch]",{"range":"515","text":"516"},"Update the dependencies array to be: [isFetching, refetch, setChangeArtigoFaturado, setRefetch]",{"range":"517","text":"518"},"Update the dependencies array to be: [articlesMainPage, artigo.code, artigo.name, isFetching, refetch, setAddArtigoToDB, setShowAddArtigoForm, setTempArticle, tempArticle]",{"range":"519","text":"520"},"Update the dependencies array to be: [isFetching, refetch, setDeleteArtigo, setOpenDelete]",{"range":"521","text":"522"},"Update the dependencies array to be: [isFetching, setOpenSnackbar, setSaveConfigs]",{"range":"523","text":"524"},"Update the dependencies array to be: [isFetching, result, setExportDistAnual]",{"range":"525","text":"526"},"Update the dependencies array to be: [fetchingGrupo, grupo.data.abrv, isFetching, result, setExportDistAnualGrupo]",{"range":"527","text":"528"},[1377,1394],"[isAuthenticated, user.email]",[1770,1772],"[getAccessTokenSilently]",[1876,1888],"[configs.data.pedido_acabado, configs.data.saldo_th, isFetching]",[3716,3750],"[fetchingPedidos, fetchingEmpresas, pedidos]",[1107,1129],"[fetchingPedidosAnual, pedidosAnual]",[6752,6763],"[date, grupos.data, id, isLoading, pedido.data.artigos, pedido.data.data_pedido, pedido.data.data_pedido_formated, pedido.data.day, pedido.data.grupo, pedido.data.grupo_abrv, pedido.data.grupo_id, pedido.data.mounth, pedido.data.notas, pedido.data.proposta, pedido.data.remetente, pedido.data.responsavel, pedido.data.rubrica, pedido.data.valor_total, pedido.data.year, today]",[33970,33988],"[empresas.data, fetchingEmpresas, id, pedido.data.cabimento, pedido.data.empresa, pedido.data.ne, pedido.data.ne_id, setEmpresasList, setFetchEmpresas, setSubmitData, submitData]",[397,412],"[performSearch, refetch]",[572,584],"[articles.data, isFetching, setArticlesResult, setPerformSearch]",[1788,1800],"[artigos.data, isFetching]",[746,758],"[isFetching, pedidos, setPedidosList]",[499,511],"[isFetching, refetch, setDeletePedido, setOpenDelete]",[2965,2976],"[distAnual.data, grupos.data, isLoading]",[2693,2705],"[grupo.data.abrv, grupo.data.color, grupo.data.membros, grupo.data.name, id, isFetching]",[502,514],"[isFetching, result, setDeleteGrupo, setDeleteResult]",[1456,1468],"[isFetching, membros.data, selectedYear]",[2602,2627],"[isFetching, fetchingNES, id, submitData, empresa.data]",[691,703],"[isFetching, refetchFaturas, setAddFat, setSubmitFatura, setTempFatura]",[488,500],"[isFetching, refetch, setDeleteFatura, setOpenDelete]",[471,483],"[isFetching, refetch, setDeleteNE, setOpenDelete]",[989,1001],"[isFetching, refetch, setAddNe, setSubmitAddNE, setTempNE]",[493,505],"[isFetching, refetch, setDeleteEmpresa, setOpenDelete]",[550,562],"[isFetching, pedidoID, refecth, result, setFazerPedido, setIsRefetch]",[640,652],"[isFetching, openArtigoChegadaForm, refetch, setChegadaArtigosState, setRefetch]",[566,578],"[isFetching, refetch, setChangeArtigoFaturado, setRefetch]",[949,961],"[articlesMainPage, artigo.code, artigo.name, isFetching, refetch, setAddArtigoToDB, setShowAddArtigoForm, setTempArticle, tempArticle]",[464,476],"[isFetching, refetch, setDeleteArtigo, setOpenDelete]",[461,473],"[isFetching, setOpenSnackbar, setSaveConfigs]",[543,555],"[isFetching, result, setExportDistAnual]",[676,688],"[fetchingGrupo, grupo.data.abrv, isFetching, result, setExportDistAnualGrupo]"]